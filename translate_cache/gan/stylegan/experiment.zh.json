{
 "<h1><a href=\"index.html\">StyleGAN 2</a> Model Training</h1>\n<p>This is the training code for <a href=\"index.html\">StyleGAN 2</a> model.</p>\n<p><span translate=no>_^_0_^_</span></p>\n<p><small><em>These are <span translate=no>_^_1_^_</span> images generated after training for about 80K steps.</em></small></p>\n<p><em>Our implementation is a minimalistic StyleGAN 2 model training code. Only single GPU training is supported to keep the implementation simple. We managed to shrink it to keep it at less than 500 lines of code, including the training loop.</em></p>\n<p><em>Without DDP (distributed data parallel) and multi-gpu training it will not be possible to train the model for large resolutions (128+). If you want training code with fp16 and DDP take a look at <a href=\"https://github.com/lucidrains/stylegan2-pytorch\">lucidrains/stylegan2-pytorch</a>.</em></p>\n<p>We trained this on <a href=\"https://github.com/tkarras/progressive_growing_of_gans\">CelebA-HQ dataset</a>. You can find the download instruction in this <a href=\"https://forums.fast.ai/t/download-celeba-hq-dataset/45873/3\">discussion on fast.ai</a>. Save the images inside <a href=\"#dataset_path\"><span translate=no>_^_2_^_</span> folder</a>.</p>\n": "<h1><a href=\"index.html\">StyleGan 2</a> \u6a21\u578b\u8bad\u7ec3</h1>\n<p>\u8fd9\u662f <a href=\"index.html\">StyleGan 2</a> \u6a21\u578b\u7684\u8bad\u7ec3\u4ee3\u7801\u3002</p>\n<p><span translate=no>_^_0_^_</span></p>\n<p><small><em>\u8fd9\u4e9b\u662f\u5728\u8bad\u7ec3\u4e86\u5927\u7ea6 80K \u6b65\u4e4b\u540e\u751f\u6210\u7684<span translate=no>_^_1_^_</span>\u56fe\u50cf\u3002</em></small></p>\n<p><em>\u6211\u4eec\u7684\u5b9e\u73b0\u662f\u4e00\u4e2a\u7b80\u7ea6\u7684 StyleGan 2 \u6a21\u578b\u8bad\u7ec3\u4ee3\u7801\u3002\u4ec5\u652f\u6301\u5355\u4e2a GPU \u8bad\u7ec3\uff0c\u4ee5\u4fdd\u6301\u5b9e\u73b0\u7b80\u5355\u3002\u6211\u4eec\u8bbe\u6cd5\u7f29\u5c0f\u4e86\u5b83\uff0c\u4f7f\u5176\u4fdd\u6301\u5728\u4e0d\u5230 500 \u884c\u4ee3\u7801\u4e2d\uff0c\u5305\u62ec\u8bad\u7ec3\u5faa\u73af\u3002</em></p>\n<p><em>\u5982\u679c\u6ca1\u6709 DDP\uff08\u5206\u5e03\u5f0f\u6570\u636e\u5e76\u884c\uff09\u548c\u591a GPU \u8bad\u7ec3\uff0c\u5c06\u65e0\u6cd5\u4e3a\u5927\u5206\u8fa8\u7387\uff08128+\uff09\u8bad\u7ec3\u6a21\u578b\u3002\u5982\u679c\u4f60\u60f3\u7528 fp16 \u548c DDP \u8bad\u7ec3\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u770b l <a href=\"https://github.com/lucidrains/stylegan2-pytorch\">ucidrains/stylegan2-pytorch</a>\u3002</em></p>\n<p>\u6211\u4eec\u5728 <a href=\"https://github.com/tkarras/progressive_growing_of_gans\">Celeba-HQ \u6570\u636e\u96c6</a>\u4e0a\u8bad\u7ec3\u4e86\u8fd9\u4e2a\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u7bc7\u5173\u4e8e <a href=\"https://forums.fast.ai/t/download-celeba-hq-dataset/45873/3\">fast.ai \u7684\u8ba8\u8bba</a>\u4e2d\u627e\u5230\u4e0b\u8f7d\u8bf4\u660e\u3002\u5c06\u56fe\u50cf\u4fdd\u5b58\u5728<a href=\"#dataset_path\"><span translate=no>_^_2_^_</span>\u6587\u4ef6\u5939\u4e2d</a>\u3002</p>\n",
 "<h2>Configurations</h2>\n": "<h2>\u914d\u7f6e</h2>\n",
 "<h2>Dataset</h2>\n<p>This loads the training dataset and resize it to the give image size.</p>\n": "<h2>\u6570\u636e\u96c6</h2>\n<p>\u8fd9\u5c06\u52a0\u8f7d\u8bad\u7ec3\u6570\u636e\u96c6\u5e76\u5c06\u5176\u8c03\u6574\u4e3a\u7ed9\u5b9a\u7684\u56fe\u50cf\u5927\u5c0f\u3002</p>\n",
 "<h2>Train model</h2>\n": "<h2>\u706b\u8f66\u6a21\u578b</h2>\n",
 "<h3>Generate images</h3>\n<p>This generate images using the generator</p>\n": "<h3>\u751f\u6210\u56fe\u50cf</h3>\n<p>\u8fd9\u4f1a\u4f7f\u7528\u751f\u6210\u5668\u751f\u6210\u56fe\u50cf</p>\n",
 "<h3>Generate noise</h3>\n<p>This generates noise for each <a href=\"index.html#generator_block\">generator block</a></p>\n": "<h3>\u4ea7\u751f\u566a\u97f3</h3>\n<p>\u8fd9\u4f1a\u4e3a\u6bcf\u4e2a<a href=\"index.html#generator_block\">\u53d1\u7535\u673a\u7ec4</a>\u4ea7\u751f\u566a\u58f0</p>\n",
 "<h3>Initialize</h3>\n": "<h3>\u521d\u59cb\u5316</h3>\n",
 "<h3>Lazy regularization</h3>\n<p>Instead of calculating the regularization losses, the paper proposes lazy regularization where the regularization terms are calculated once in a while. This improves the training efficiency a lot. </p>\n": "<h3>\u61d2\u60f0\u6b63\u5219\u5316</h3>\n\u672c@@ <p>\u6587\u6ca1\u6709\u8ba1\u7b97\u6b63\u5219\u5316\u635f\u5931\uff0c\u800c\u662f\u63d0\u51fa\u4e86\u61d2\u60f0\u7684\u6b63\u5219\u5316\uff0c\u5373\u5076\u5c14\u8ba1\u7b97\u4e00\u6b21\u6b63\u5219\u5316\u9879\u3002\u8fd9\u5927\u5927\u63d0\u9ad8\u4e86\u8bad\u7ec3\u6548\u7387\u3002</p>\n",
 "<h3>Sample <span translate=no>_^_0_^_</span></h3>\n<p>This samples <span translate=no>_^_1_^_</span> randomly and get <span translate=no>_^_2_^_</span> from the mapping network.</p>\n<p>We also apply style mixing sometimes where we generate two latent variables <span translate=no>_^_3_^_</span> and <span translate=no>_^_4_^_</span> and get corresponding <span translate=no>_^_5_^_</span> and <span translate=no>_^_6_^_</span>. Then we randomly sample a cross-over point and apply <span translate=no>_^_7_^_</span> to the generator blocks before the cross-over point and <span translate=no>_^_8_^_</span> to the blocks after.</p>\n": "<h3>\u6837\u672c<span translate=no>_^_0_^_</span></h3>\n<p>\u8fd9\u662f<span translate=no>_^_1_^_</span>\u968f\u673a\u91c7\u6837\u5e76<span translate=no>_^_2_^_</span>\u4ece\u6620\u5c04\u7f51\u7edc\u4e2d\u83b7\u53d6\u3002</p>\n<p>\u6709\u65f6\u6211\u4eec\u8fd8\u4f1a\u5e94\u7528\u6837\u5f0f\u6df7\u5408\uff0c\u6211\u4eec\u751f\u6210\u4e24\u4e2a\u6f5c\u5728\u53d8\u91cf<span translate=no>_^_3_^_</span>\u548c<span translate=no>_^_4_^_</span>\u5e76\u5f97\u5230\u76f8\u5e94\u7684<span translate=no>_^_5_^_</span>\u548c<span translate=no>_^_6_^_</span>\u3002\u7136\u540e\u6211\u4eec\u968f\u673a\u91c7\u6837\u4e00\u4e2a\u4ea4\u53c9\u70b9\uff0c\u7136\u540e\u5e94\u7528<span translate=no>_^_7_^_</span>\u4e8e\u4ea4\u53c9\u70b9\u4e4b\u524d\u7684\u751f\u6210\u5668\u65b9\u5757\u548c<span translate=no>_^_8_^_</span>\u4e4b\u540e\u7684\u533a\u5757\u3002</p>\n",
 "<h3>Train StyleGAN2</h3>\n": "<h3>Train styleGan2</h3>\n",
 "<h3>Training Step</h3>\n": "<h3>\u8bad\u7ec3\u6b65\u9aa4</h3>\n",
 "<p> </p>\n": "<p></p>\n",
 "<p><a href=\"index.html#discriminator\">StyleGAN2 Discriminator</a> </p>\n": "<p><a href=\"index.html#discriminator\">StyleGan2 \u9274\u522b\u5668</a></p>\n",
 "<p><a href=\"index.html#generator\">StyleGAN2 Generator</a> </p>\n": "<p><a href=\"index.html#generator\">StyleGan2 \u751f\u6210\u5668</a></p>\n",
 "<p><a href=\"index.html#gradient_penalty\">Gradient Penalty Regularization Loss</a> </p>\n": "<p><a href=\"index.html#gradient_penalty\">\u68af\u5ea6\u60e9\u7f5a\u6b63\u5219\u5316\u635f\u5931</a></p>\n",
 "<p><a href=\"index.html#mapping_network\">Mapping network</a> </p>\n": "<p><a href=\"index.html#mapping_network\">\u6d4b\u7ed8\u7f51\u7edc</a></p>\n",
 "<p><a href=\"index.html#path_length_penalty\">Path length penalty</a> </p>\n": "<p><a href=\"index.html#path_length_penalty\">\u8def\u5f84\u957f\u5ea6\u60e9\u7f5a</a></p>\n",
 "<p><a id=\"dataset_path\"></a> We trained this on <a href=\"https://github.com/tkarras/progressive_growing_of_gans\">CelebA-HQ dataset</a>. You can find the download instruction in this <a href=\"https://forums.fast.ai/t/download-celeba-hq-dataset/45873/3\">discussion on fast.ai</a>. Save the images inside <span translate=no>_^_0_^_</span> folder. </p>\n": "<p><a id=\"dataset_path\"></a>\u6211\u4eec\u5728 <a href=\"https://github.com/tkarras/progressive_growing_of_gans\">Celeba-HQ \u6570\u636e\u96c6</a>\u4e0a\u8bad\u7ec3\u4e86\u8fd9\u4e2a\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u7bc7\u5173\u4e8e <a href=\"https://forums.fast.ai/t/download-celeba-hq-dataset/45873/3\">fast.ai \u7684\u8ba8\u8bba</a>\u4e2d\u627e\u5230\u4e0b\u8f7d\u8bf4\u660e\u3002\u5c06\u56fe\u50cf\u4fdd\u5b58\u5728<span translate=no>_^_0_^_</span>\u6587\u4ef6\u5939\u4e2d\u3002</p>\n",
 "<p><span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> for Adam optimizer </p>\n": "<p><span translate=no>_^_0_^_</span>\u5bf9<span translate=no>_^_1_^_</span>\u4e8e Adam \u4f18\u5316\u5668\u6765\u8bf4</p>\n",
 "<p><span translate=no>_^_0_^_</span> of image resolution </p>\n": "<p><span translate=no>_^_0_^_</span>\u7684\u56fe\u50cf\u5206\u8fa8\u7387</p>\n",
 "<p>Accumulate gradients for <span translate=no>_^_0_^_</span> </p>\n": "<p>\u7d2f\u79ef\u68af\u5ea6<span translate=no>_^_0_^_</span></p>\n",
 "<p>Add gradient penalty </p>\n": "<p>\u6dfb\u52a0\u6e10\u53d8\u60e9\u7f5a</p>\n",
 "<p>Add model hooks to monitor layer outputs </p>\n": "<p>\u6dfb\u52a0\u6a21\u578b\u6302\u63a5\u4ee5\u76d1\u89c6\u5c42\u8f93\u51fa</p>\n",
 "<p>Add noise tensors to the list </p>\n": "<p>\u5c06\u566a\u58f0\u5f20\u91cf\u6dfb\u52a0\u5230\u5217\u8868\u4e2d</p>\n",
 "<p>Add path length penalty </p>\n": "<p>\u589e\u52a0\u8def\u5f84\u957f\u5ea6\u60e9\u7f5a</p>\n",
 "<p>Batch size </p>\n": "<p>\u6279\u91cf\u5927\u5c0f</p>\n",
 "<p>Calculate and log gradient penalty </p>\n": "<p>\u8ba1\u7b97\u5e76\u8bb0\u5f55\u68af\u5ea6\u635f\u5931</p>\n",
 "<p>Calculate gradients </p>\n": "<p>\u8ba1\u7b97\u68af\u5ea6</p>\n",
 "<p>Calculate path length penalty </p>\n": "<p>\u8ba1\u7b97\u8def\u5f84\u957f\u5ea6\u635f\u5931</p>\n",
 "<p>Clip gradients for stabilization </p>\n": "<p>\u7528\u4e8e\u7a33\u5b9a\u7684\u526a\u8f91\u6e10\u53d8</p>\n",
 "<p>Compute gradients </p>\n": "<p>\u8ba1\u7b97\u68af\u5ea6</p>\n",
 "<p>Continuous <a href=\"../../utils.html#cycle_dataloader\">cyclic loader</a> </p>\n": "<p>\u8fde\u7eed<a href=\"../../utils.html#cycle_dataloader\">\u5faa\u73af\u88c5\u8f7d\u673a</a></p>\n",
 "<p>Convert to PyTorch tensor </p>\n": "<p>\u8f6c\u6362\u4e3a pyTorch \u5f20\u91cf</p>\n",
 "<p>Create an experiment </p>\n": "<p>\u521b\u5efa\u5b9e\u9a8c</p>\n",
 "<p>Create configurations object </p>\n": "<p>\u521b\u5efa\u914d\u7f6e\u5bf9\u8c61</p>\n",
 "<p>Create data loader </p>\n": "<p>\u521b\u5efa\u6570\u636e\u52a0\u8f7d\u5668</p>\n",
 "<p>Create dataset </p>\n": "<p>\u521b\u5efa\u6570\u636e\u96c6</p>\n",
 "<p>Create discriminator and generator </p>\n": "<p>\u521b\u5efa\u9274\u522b\u5668\u548c\u751f\u6210\u5668</p>\n",
 "<p>Create mapping network </p>\n": "<p>\u521b\u5efa\u6d4b\u7ed8\u7f51\u7edc</p>\n",
 "<p>Create optimizers </p>\n": "<p>\u521b\u5efa\u4f18\u5316\u5668</p>\n",
 "<p>Create path length penalty loss </p>\n": "<p>\u521b\u5efa\u8def\u5f84\u957f\u5ea6\u60e9\u7f5a\u635f\u5931</p>\n",
 "<p>Data loader </p>\n": "<p>\u6570\u636e\u52a0\u8f7d\u5668</p>\n",
 "<p>Device to train the model on. <a href=\"https://docs.labml.ai/api/helpers.html#labml_helpers.device.DeviceConfigs\"><span translate=no>_^_0_^_</span></a>  picks up an available CUDA device or defaults to CPU. </p>\n": "<p>\u7528\u4e8e\u8bad\u7ec3\u6a21\u578b\u7684\u8bbe\u5907\u3002<a href=\"https://docs.labml.ai/api/helpers.html#labml_helpers.device.DeviceConfigs\"><span translate=no>_^_0_^_</span></a>\u9009\u62e9\u53ef\u7528\u7684 CUDA \u8bbe\u5907\u6216\u9ed8\u8ba4\u4e3a CPU\u3002</p>\n",
 "<p>Dimensionality of <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span>\u548c\u7684\u7ef4\u5ea6<span translate=no>_^_1_^_</span></p>\n",
 "<p>Discriminator and generator loss functions. We use <a href=\"../wasserstein/index.html\">Wasserstein loss</a> </p>\n": "<p>\u9274\u522b\u5668\u548c\u53d1\u751f\u5668\u635f\u8017\u51fd\u6570\u3002\u6211\u4eec\u4f7f\u7528 <a href=\"../wasserstein/index.html\">Wasserstein \u7684\u635f\u5931</a></p>\n",
 "<p>Discriminator and generator losses </p>\n": "<p>\u9274\u522b\u5668\u548c\u53d1\u7535\u673a\u635f\u8017</p>\n",
 "<p>Discriminator classification for generated images </p>\n": "<p>\u751f\u6210\u56fe\u50cf\u7684\u9274\u522b\u5668\u5206\u7c7b</p>\n",
 "<p>Discriminator classification for real images </p>\n": "<p>\u771f\u5b9e\u56fe\u50cf\u7684\u9274\u522b\u5668\u5206\u7c7b</p>\n",
 "<p>Expand <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> for the generator blocks and concatenate </p>\n": "<p><span translate=no>_^_0_^_</span>\u5c55<span translate=no>_^_1_^_</span>\u5f00 and for \u751f\u6210\u5668\u5757\u5e76\u8fde\u63a5</p>\n",
 "<p>Expand <span translate=no>_^_0_^_</span> for the generator blocks </p>\n": "<p><span translate=no>_^_0_^_</span>\u4e3a\u53d1\u7535\u673a\u7ec4\u5c55\u5f00</p>\n",
 "<p>Flush tracker </p>\n": "<p>\u51b2\u6d17\u8ffd\u8e2a\u5668</p>\n",
 "<p>Generate images </p>\n": "<p>\u751f\u6210\u56fe\u50cf</p>\n",
 "<p>Generate noise for each generator block </p>\n": "<p>\u4e3a\u6bcf\u4e2a\u53d1\u7535\u673a\u7ec4\u751f\u6210\u566a\u58f0</p>\n",
 "<p>Generate noise to add after the first convolution layer </p>\n": "<p>\u751f\u6210\u8981\u5728\u7b2c\u4e00\u4e2a\u5377\u79ef\u5c42\u4e4b\u540e\u6dfb\u52a0\u7684\u566a\u6ce2</p>\n",
 "<p>Generate noise to add after the second convolution layer </p>\n": "<p>\u751f\u6210\u8981\u5728\u7b2c\u4e8c\u4e2a\u5377\u79ef\u5c42\u4e4b\u540e\u6dfb\u52a0\u7684\u566a\u6ce2</p>\n",
 "<p>Generator &amp; Discriminator learning rate </p>\n": "<p>\u751f\u6210\u5668\u548c\u9274\u522b\u5668\u5b66\u4e60\u901f\u7387</p>\n",
 "<p>Get <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5f97\u5230<span translate=no>_^_0_^_</span></p>\n",
 "<p>Get <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> </p>\n": "<p>\u83b7\u53d6<span translate=no>_^_0_^_</span>\u548c<span translate=no>_^_1_^_</span></p>\n",
 "<p>Get discriminator loss </p>\n": "<p>\u83b7\u5f97\u9274\u522b\u5668\u635f\u5931</p>\n",
 "<p>Get generator loss </p>\n": "<p>\u83b7\u5f97\u53d1\u7535\u673a\u635f\u5931</p>\n",
 "<p>Get noise </p>\n": "<p>\u5f97\u5230\u566a\u97f3</p>\n",
 "<p>Get number of generator blocks for creating style and noise inputs </p>\n": "<p>\u83b7\u53d6\u7528\u4e8e\u521b\u5efa\u6837\u5f0f\u548c\u566a\u58f0\u8f93\u5165\u7684\u751f\u6210\u5668\u6a21\u5757\u7684\u6570\u91cf</p>\n",
 "<p>Get real images from the data loader </p>\n": "<p>\u4ece\u6570\u636e\u52a0\u8f7d\u5668\u83b7\u53d6\u771f\u5b9e\u56fe\u50cf</p>\n",
 "<p>Get the paths of all <span translate=no>_^_0_^_</span> files </p>\n": "<p>\u83b7\u53d6\u6240\u6709<span translate=no>_^_0_^_</span>\u6587\u4ef6\u7684\u8def\u5f84</p>\n",
 "<p>Get the the <span translate=no>_^_0_^_</span>-th image </p>\n": "<p>\u83b7\u53d6\u7b2c<span translate=no>_^_0_^_</span>-th \u5f20\u56fe\u7247</p>\n",
 "<p>Gradient penalty coefficient <span translate=no>_^_0_^_</span> </p>\n": "<p>\u68af\u5ea6\u60e9\u7f5a\u7cfb\u6570<span translate=no>_^_0_^_</span></p>\n",
 "<p>Height/width of the image </p>\n": "<p>\u56fe\u50cf\u7684\u9ad8\u5ea6/\u5bbd\u5ea6</p>\n",
 "<p>How often to log generated images </p>\n": "<p>\u8bb0\u5f55\u751f\u6210\u7684\u56fe\u50cf\u7684\u9891\u7387</p>\n",
 "<p>How often to save model checkpoints </p>\n": "<p>\u4fdd\u5b58\u6a21\u578b\u68c0\u67e5\u70b9\u7684\u9891\u7387</p>\n",
 "<p>Ignore if <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5ffd\u7565\u5982\u679c<span translate=no>_^_0_^_</span></p>\n",
 "<p>Initialize </p>\n": "<p>\u521d\u59cb\u5316</p>\n",
 "<p>List to store noise </p>\n": "<p>\u5b58\u50a8\u566a\u97f3\u7684\u5217\u8868</p>\n",
 "<p>Log discriminator loss </p>\n": "<p>\u65e5\u5fd7\u9274\u522b\u5668\u4e22\u5931</p>\n",
 "<p>Log discriminator model parameters occasionally </p>\n": "<p>\u5076\u5c14\u8bb0\u5f55\u9274\u522b\u5668\u6a21\u578b\u53c2\u6570</p>\n",
 "<p>Log generated images </p>\n": "<p>\u65e5\u5fd7\u751f\u6210\u7684\u56fe\u50cf</p>\n",
 "<p>Log generator loss </p>\n": "<p>\u65e5\u5fd7\u751f\u6210\u5668\u4e22\u5931</p>\n",
 "<p>Loop for <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5faa\u73af\u5bfb\u56de<span translate=no>_^_0_^_</span></p>\n",
 "<p>Mapping network learning rate (<span translate=no>_^_0_^_</span> lower than the others) </p>\n": "<p>\u6620\u5c04\u7f51\u7edc\u5b66\u4e60\u7387\uff08<span translate=no>_^_0_^_</span>\u4f4e\u4e8e\u5176\u4ed6\uff09</p>\n",
 "<p>Mix styles </p>\n": "<p>\u6df7\u5408\u98ce\u683c</p>\n",
 "<p>Multiply by coefficient and add gradient penalty </p>\n": "<p>\u4e58\u4ee5\u7cfb\u6570\u5e76\u6dfb\u52a0\u68af\u5ea6\u60e9\u7f5a</p>\n",
 "<p>Next block has <span translate=no>_^_0_^_</span> resolution </p>\n": "<p>\u4e0b\u4e00\u4e2a\u533a\u5757\u6709<span translate=no>_^_0_^_</span>\u5206\u8fa8\u7387</p>\n",
 "<p>Noise resolution starts from <span translate=no>_^_0_^_</span> </p>\n": "<p>\u566a\u58f0\u5206\u8fa8\u7387\u4ece<span translate=no>_^_0_^_</span></p>\n",
 "<p>Number of blocks in the generator (calculated based on image resolution) </p>\n": "<p>\u751f\u6210\u5668\u4e2d\u7684\u5757\u6570\uff08\u6839\u636e\u56fe\u50cf\u5206\u8fa8\u7387\u8ba1\u7b97\uff09</p>\n",
 "<p>Number of images </p>\n": "<p>\u56fe\u50cf\u6570\u91cf</p>\n",
 "<p>Number of layers in the mapping network </p>\n": "<p>\u5236\u56fe\u7f51\u7edc\u4e2d\u7684\u56fe\u5c42\u6570</p>\n",
 "<p>Number of steps to accumulate gradients on. Use this to increase the effective batch size. </p>\n": "<p>\u7d2f\u79ef\u68af\u5ea6\u7684\u6b65\u6570\u3002\u4f7f\u7528\u5b83\u53ef\u4ee5\u589e\u52a0\u6709\u6548\u6279\u6b21\u5927\u5c0f\u3002</p>\n",
 "<p>Optimizers </p>\n": "<p>\u4f18\u5316\u5668</p>\n",
 "<p>Path length penalty calculation interval </p>\n": "<p>\u8def\u5f84\u957f\u5ea6\u60e9\u7f5a\u8ba1\u7b97\u95f4\u9694</p>\n",
 "<p>Probability of mixing styles </p>\n": "<p>\u6df7\u5408\u6837\u5f0f\u7684\u6982\u7387</p>\n",
 "<p>Random cross-over point </p>\n": "<p>\u968f\u673a\u4ea4\u53c9\u70b9</p>\n",
 "<p>Reset gradients </p>\n": "<p>\u91cd\u7f6e\u6e10\u53d8</p>\n",
 "<p>Resize the image </p>\n": "<p>\u8c03\u6574\u56fe\u50cf\u5927\u5c0f</p>\n",
 "<p>Return images and <span translate=no>_^_0_^_</span> </p>\n": "<p>\u8fd4\u56de\u56fe\u50cf\u548c<span translate=no>_^_0_^_</span></p>\n",
 "<p>Return noise tensors </p>\n": "<p>\u8fd4\u56de\u566a\u58f0\u5f20\u91cf</p>\n",
 "<p>Run the training loop </p>\n": "<p>\u8fd0\u884c\u8bad\u7ec3\u5faa\u73af</p>\n",
 "<p>Sample <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> </p>\n": "<p>\u6837\u672c<span translate=no>_^_0_^_</span>\u548c<span translate=no>_^_1_^_</span></p>\n",
 "<p>Sample images from generator </p>\n": "<p>\u6765\u81ea\u751f\u6210\u5668\u7684\u6837\u672c\u56fe\u50cf</p>\n",
 "<p>Save model checkpoints </p>\n": "<p>\u4fdd\u5b58\u6a21\u578b\u68c0\u67e5\u70b9</p>\n",
 "<p>Set configurations and override some </p>\n": "<p>\u8bbe\u7f6e\u914d\u7f6e\u5e76\u8986\u76d6\u4e00\u4e9b</p>\n",
 "<p>Set models for saving and loading </p>\n": "<p>\u8bbe\u7f6e\u7528\u4e8e\u4fdd\u5b58\u548c\u52a0\u8f7d\u7684\u6a21\u578b</p>\n",
 "<p>Set tracker configurations </p>\n": "<p>\u8bbe\u7f6e\u8ddf\u8e2a\u5668\u914d\u7f6e</p>\n",
 "<p>Skip calculating path length penalty during the initial phase of training </p>\n": "<p>\u5728\u8bad\u7ec3\u7684\u521d\u59cb\u9636\u6bb5\u8df3\u8fc7\u8ba1\u7b97\u8def\u5f84\u957f\u5ea6\u635f\u5931</p>\n",
 "<p>Start the experiment </p>\n": "<p>\u5f00\u59cb\u5b9e\u9a8c</p>\n",
 "<p>Take a training step </p>\n": "<p>\u8fc8\u51fa\u8bad\u7ec3\u4e00\u6b65</p>\n",
 "<p>Take optimizer step </p>\n": "<p>\u91c7\u53d6\u4f18\u5316\u5668\u6b65\u9aa4</p>\n",
 "<p>The first block has only one <span translate=no>_^_0_^_</span> convolution </p>\n": "<p>\u7b2c\u4e00\u4e2a\u65b9\u5757\u53ea\u6709\u4e00\u4e2a<span translate=no>_^_0_^_</span>\u5377\u79ef</p>\n",
 "<p>The interval at which to compute gradient penalty </p>\n": "<p>\u8ba1\u7b97\u68af\u5ea6\u60e9\u7f5a\u7684\u95f4\u9694</p>\n",
 "<p>Total number of training steps </p>\n": "<p>\u8bad\u7ec3\u6b65\u6570\u603b\u6570</p>\n",
 "<p>Train the discriminator </p>\n": "<p>\u8bad\u7ec3\u9274\u522b\u5668</p>\n",
 "<p>Train the generator </p>\n": "<p>\u8bad\u7ec3\u53d1\u7535\u673a</p>\n",
 "<p>Training mode state for logging activations </p>\n": "<p>\u65e5\u5fd7\u8bb0\u5f55\u6fc0\u6d3b\u7684\u8bad\u7ec3\u6a21\u5f0f\u72b6\u6001</p>\n",
 "<p>Transformation </p>\n": "<p>\u8f6c\u578b</p>\n",
 "<p>Update <span translate=no>_^_0_^_</span>. Set whether to log activation </p>\n": "<p>\u66f4\u65b0<span translate=no>_^_0_^_</span>\u3002\u8bbe\u7f6e\u662f\u5426\u8bb0\u5f55\u6fc0\u6d3b</p>\n",
 "<p>We need to calculate gradients w.r.t. real images for gradient penalty </p>\n": "<p>\u6211\u4eec\u9700\u8981\u7528\u771f\u5b9e\u56fe\u50cf\u8ba1\u7b97\u68af\u5ea6\u4ee5\u83b7\u5f97\u68af\u5ea6\u60e9\u7f5a</p>\n",
 "<p>Whether to log model layer outputs </p>\n": "<p>\u662f\u5426\u8bb0\u5f55\u6a21\u578b\u5c42\u8f93\u51fa</p>\n",
 "<p>Without mixing </p>\n": "<p>\u4e0d\u6df7\u5408</p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> path to the folder containing the images </li>\n<li><span translate=no>_^_1_^_</span> size of the image</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u5305\u542b\u56fe\u50cf\u7684\u6587\u4ef6\u5939\u7684\u8def\u5f84</li>\n<li><span translate=no>_^_1_^_</span>\u56fe\u50cf\u7684\u5927\u5c0f</li></ul>\n",
 "An annotated PyTorch implementation of StyleGAN2 model training code.": "StyleGan2 \u6a21\u578b\u8bad\u7ec3\u4ee3\u7801\u7684\u5e26\u6ce8\u91ca\u7684 PyTorch \u5b9e\u73b0\u3002",
 "StyleGAN 2 Model Training": "StyleGan 2 \u6a21\u578b\u8bad\u7ec3"
}