{
 "<h1>Deep Convolutional Generative Adversarial Networks (DCGAN)</h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of paper <a href=\"https://papers.labml.ai/paper/1511.06434\">Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks</a>.</p>\n<p>This implementation is based on the <a href=\"https://pytorch.org/tutorials/beginner/dcgan_faces_tutorial.html\">PyTorch DCGAN Tutorial</a>.</p>\n": "<h1>\u6df1\u5ea6\u5377\u79ef\u751f\u6210\u5bf9\u6297\u7f51\u7edc (DCGAN)</h1>\n<p>\u8fd9\u662f <a href=\"https://pytorch.org\">PyTorch</a> \u5b9e\u73b0\u7684\u8bba\u6587\u300a<a href=\"https://papers.labml.ai/paper/1511.06434\">\u4f7f\u7528\u6df1\u5ea6\u5377\u79ef\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u8fdb\u884c\u65e0\u76d1\u7763\u8868\u793a\u5b66\u4e60</a>\u300b\u3002</p>\n<p>\u6b64\u5b9e\u73b0\u57fa\u4e8e <a href=\"https://pytorch.org/tutorials/beginner/dcgan_faces_tutorial.html\">PyTorch DCGAN \u6559\u7a0b</a>\u3002</p>\n",
 "<h3>Convolutional Discriminator Network</h3>\n": "<h3>\u5377\u79ef\u9274\u522b\u5668\u7f51\u7edc</h3>\n",
 "<h3>Convolutional Generator Network</h3>\n<p>This is similar to the de-convolutional network used for CelebA faces, but modified for MNIST images.</p>\n<p><span translate=no>_^_0_^_</span></p>\n": "<h3>\u5377\u79ef\u751f\u6210\u5668\u7f51\u7edc</h3>\n<p>\u8fd9\u7c7b\u4f3c\u4e8e\u7528\u4e8e CeleBA \u4eba\u8138\u7684\u53cd\u5377\u79ef\u7f51\u7edc\uff0c\u4f46\u9488\u5bf9 MNIST \u56fe\u50cf\u8fdb\u884c\u4e86\u4fee\u6539\u3002</p>\n<p><span translate=no>_^_0_^_</span></p>\n",
 "<p>Change from shape <span translate=no>_^_0_^_</span> to <span translate=no>_^_1_^_</span> </p>\n": "<p>\u4ece\u5f62\u72b6\u6539<span translate=no>_^_0_^_</span>\u4e3a<span translate=no>_^_1_^_</span></p>\n",
 "<p>The input is <span translate=no>_^_0_^_</span> with 100 channels </p>\n": "<p>\u8f93\u5165<span translate=no>_^_0_^_</span>\u6709 100 \u4e2a\u901a\u9053</p>\n",
 "<p>The input is <span translate=no>_^_0_^_</span> with one channel </p>\n": "<p>\u8f93\u5165<span translate=no>_^_0_^_</span>\u4f7f\u7528\u4e00\u4e2a\u901a\u9053</p>\n",
 "<p>This gives <span translate=no>_^_0_^_</span> </p>\n": "<p>\u8fd9\u7ed9\u4e86<span translate=no>_^_0_^_</span></p>\n",
 "<p>This gives <span translate=no>_^_0_^_</span> output </p>\n": "<p>\u8fd9\u7ed9\u51fa\u4e86<span translate=no>_^_0_^_</span>\u8f93\u51fa</p>\n",
 "<p>We import the <a href=\"../original/experiment.html\">simple gan experiment</a> and change the generator and discriminator networks </p>\n": "<p>\u6211\u4eec\u5bfc\u5165\u4e86<a href=\"../original/experiment.html\">\u7b80\u5355\u7684 gan \u5b9e\u9a8c</a>\u5e76\u66f4\u6539\u4e86\u751f\u6210\u5668\u548c\u9274\u522b\u5668\u7f51\u7edc</p>\n",
 "A simple PyTorch implementation/tutorial of Deep Convolutional Generative Adversarial Networks (DCGAN).": "\u6df1\u5ea6\u5377\u79ef\u751f\u6210\u5bf9\u6297\u7f51\u7edc\uff08DCGAN\uff09\u7684\u7b80\u5355\u7684 PyTorch \u5b9e\u73b0/\u6559\u7a0b\u3002",
 "Deep Convolutional Generative Adversarial Networks (DCGAN)": "\u6df1\u5ea6\u5377\u79ef\u751f\u6210\u5bf9\u6297\u7f51\u7edc (DCGAN)"
}