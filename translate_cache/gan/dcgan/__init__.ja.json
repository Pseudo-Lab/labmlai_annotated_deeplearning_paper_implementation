{
 "<h1>Deep Convolutional Generative Adversarial Networks (DCGAN)</h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of paper <a href=\"https://papers.labml.ai/paper/1511.06434\">Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks</a>.</p>\n<p>This implementation is based on the <a href=\"https://pytorch.org/tutorials/beginner/dcgan_faces_tutorial.html\">PyTorch DCGAN Tutorial</a>.</p>\n": "<h1>\u6df1\u5c64\u7573\u307f\u8fbc\u307f\u578b\u6575\u5bfe\u7684\u751f\u6210\u30cd\u30c3\u30c8\u30ef\u30fc\u30af (DCGAN)</h1>\n<p>\u3053\u308c\u306f\u3001<a href=\"https://pytorch.org\"><a href=\"https://papers.labml.ai/paper/1511.06434\">\u6df1\u5c64\u7573\u307f\u8fbc\u307f\u751f\u6210\u578b\u6575\u5bfe\u7684\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u7528\u3044\u305f\u6559\u5e2b\u306a\u3057\u8868\u73fe\u5b66\u7fd2\u306ePyTorch\u5b9f\u88c5\u3067\u3059</a></a>\u3002</p>\n<p>\u3053\u306e\u5b9f\u88c5\u306f <a href=\"https://pytorch.org/tutorials/beginner/dcgan_faces_tutorial.html\">PyTorch DCGAN</a> \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002</p>\n",
 "<h3>Convolutional Discriminator Network</h3>\n": "<h3>\u7573\u307f\u8fbc\u307f\u5f01\u5225\u30cd\u30c3\u30c8\u30ef\u30fc\u30af</h3>\n",
 "<h3>Convolutional Generator Network</h3>\n<p>This is similar to the de-convolutional network used for CelebA faces, but modified for MNIST images.</p>\n<p><span translate=no>_^_0_^_</span></p>\n": "<h3>\u7573\u307f\u8fbc\u307f\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30cd\u30c3\u30c8\u30ef\u30fc\u30af</h3>\n<p>\u3053\u308c\u306f CeleBA \u30d5\u30a7\u30fc\u30b9\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u30c7\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30ca\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u4f3c\u3066\u3044\u307e\u3059\u304c\u3001MNIST \u30a4\u30e1\u30fc\u30b8\u7528\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>\n<p><span translate=no>_^_0_^_</span></p>\n",
 "<p>Change from shape <span translate=no>_^_0_^_</span> to <span translate=no>_^_1_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span>\u5f62\u72b6\u3092\u6b21\u306e\u3088\u3046\u306b\u5909\u66f4 <span translate=no>_^_1_^_</span></p>\n",
 "<p>The input is <span translate=no>_^_0_^_</span> with 100 channels </p>\n": "<p><span translate=no>_^_0_^_</span>\u5165\u529b\u306f100\u30c1\u30e3\u30f3\u30cd\u30eb</p>\n",
 "<p>The input is <span translate=no>_^_0_^_</span> with one channel </p>\n": "<p><span translate=no>_^_0_^_</span>\u5165\u529b\u306f1\u30c1\u30e3\u30f3\u30cd\u30eb\u3067\u3059</p>\n",
 "<p>This gives <span translate=no>_^_0_^_</span> </p>\n": "<p>\u3053\u308c\u306b\u3088\u308a <span translate=no>_^_0_^_</span></p>\n",
 "<p>This gives <span translate=no>_^_0_^_</span> output </p>\n": "<p><span translate=no>_^_0_^_</span>\u3053\u308c\u306b\u3088\u308a\u51fa\u529b\u304c\u5f97\u3089\u308c\u307e\u3059</p>\n",
 "<p>We import the <a href=\"../original/experiment.html\">simple gan experiment</a> and change the generator and discriminator networks </p>\n": "<p><a href=\"../original/experiment.html\">\u7c21\u5358\u306aGAN\u5b9f\u9a13\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066</a>\u3001\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3068\u30c7\u30a3\u30b9\u30af\u30ea\u30df\u30cd\u30fc\u30bf\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u5909\u66f4\u3057\u307e\u3059</p>\n",
 "A simple PyTorch implementation/tutorial of Deep Convolutional Generative Adversarial Networks (DCGAN).": "\u6df1\u5c64\u7573\u307f\u8fbc\u307f\u751f\u6210\u578b\u6575\u5bfe\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\uff08DCGAN\uff09\u306e\u7c21\u5358\u306aPyTorch\u5b9f\u88c5/\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3002",
 "Deep Convolutional Generative Adversarial Networks (DCGAN)": "\u6df1\u5c64\u7573\u307f\u8fbc\u307f\u578b\u6575\u5bfe\u7684\u751f\u6210\u30cd\u30c3\u30c8\u30ef\u30fc\u30af (DCGAN)"
}