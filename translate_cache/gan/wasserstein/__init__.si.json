{
 "<h1>Wasserstein GAN (WGAN)</h1>\n<p>This is an implementation of <a href=\"https://papers.labml.ai/paper/1701.07875\">Wasserstein GAN</a>.</p>\n<p>The original GAN loss is based on Jensen-Shannon (JS) divergence between the real distribution <span translate=no>_^_0_^_</span> and generated distribution <span translate=no>_^_1_^_</span>. The Wasserstein GAN is based on Earth Mover distance between these distributions.</p>\n<p><span translate=no>_^_2_^_</span></p>\n<p><span translate=no>_^_3_^_</span> is the set of all joint distributions, whose marginal probabilities are <span translate=no>_^_4_^_</span>.</p>\n<p><span translate=no>_^_5_^_</span> is the earth mover distance for a given joint distribution (<span translate=no>_^_6_^_</span> and <span translate=no>_^_7_^_</span> are probabilities).</p>\n<p>So <span translate=no>_^_8_^_</span> is equal to the least earth mover distance for any joint distribution between the real distribution <span translate=no>_^_9_^_</span> and generated distribution <span translate=no>_^_10_^_</span>.</p>\n<p>The paper shows that Jensen-Shannon (JS) divergence and other measures for the difference between two probability distributions are not smooth. And therefore if we are doing gradient descent on one of the probability distributions (parameterized) it will not converge.</p>\n<p>Based on Kantorovich-Rubinstein duality, <span translate=no>_^_11_^_</span></p>\n<p>where <span translate=no>_^_12_^_</span> are all 1-Lipschitz functions.</p>\n<p>That is, it is equal to the greatest difference <span translate=no>_^_13_^_</span> among all 1-Lipschitz functions.</p>\n<p>For <span translate=no>_^_14_^_</span>-Lipschitz functions, <span translate=no>_^_15_^_</span></p>\n<p>If all <span translate=no>_^_16_^_</span>-Lipschitz functions can be represented as <span translate=no>_^_17_^_</span> where <span translate=no>_^_18_^_</span> is parameterized by <span translate=no>_^_19_^_</span>,</p>\n<p><span translate=no>_^_20_^_</span></p>\n<p>If <span translate=no>_^_21_^_</span> is represented by a generator <span translate=no>_^_22_^_</span> and <span translate=no>_^_23_^_</span> is from a known distribution <span translate=no>_^_24_^_</span>,</p>\n<p><span translate=no>_^_25_^_</span></p>\n<p>Now to converge <span translate=no>_^_26_^_</span> with <span translate=no>_^_27_^_</span> we can gradient descent on <span translate=no>_^_28_^_</span> to minimize above formula.</p>\n<p>Similarly we can find <span translate=no>_^_29_^_</span> by ascending on <span translate=no>_^_30_^_</span>, while keeping <span translate=no>_^_31_^_</span> bounded. <em>One way to keep <span translate=no>_^_32_^_</span> bounded is to clip all weights in the neural network that defines <span translate=no>_^_33_^_</span> clipped within a range.</em></p>\n<p>Here is the code to try this on a <a href=\"experiment.html\">simple MNIST generation experiment</a>.</p>\n<p><a href=\"https://colab.research.google.com/github/labmlai/annotated_deep_learning_paper_implementations/blob/master/labml_nn/gan/wasserstein/experiment.ipynb\"><span translate=no>_^_34_^_</span></a></p>\n": "<h1>\u0dc0\u0ddc\u0dc3\u0dbb\u0dca\u0dc3\u0dca\u0da7\u0dba\u0dd2\u0db1\u0dcaGAN (WGAN)</h1>\n<p>\u0db8\u0dd9\u0dba <a href=\"https://papers.labml.ai/paper/1701.07875\">\u0dc0\u0ddc\u0dc3\u0dbb\u0dca\u0dc3\u0dca\u0da7\u0dba\u0dd2\u0db1\u0dca GAN</a>\u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dba\u0dd2. </p>\n<p>\u0db8\u0dd4\u0dbd\u0dcaGAN \u0d85\u0dbd\u0dcf\u0db7\u0dba \u0db4\u0daf\u0db1\u0db8\u0dca \u0dc0\u0dd3 \u0d87\u0dad\u0dca\u0dad\u0dda \u0dc3\u0dd0\u0db6\u0dd1 \u0db6\u0dd9\u0daf\u0dcf \u0dc4\u0dd0\u0dbb\u0dd3\u0db8 <span translate=no>_^_0_^_</span> \u0dc3\u0dc4 \u0da2\u0db1\u0db1\u0dba \u0d9a\u0dbb\u0db1 \u0dbd\u0daf \u0db6\u0dd9\u0daf\u0dcf \u0dc4\u0dd0\u0dbb\u0dd3\u0db8 \u0d85\u0dad\u0dbb \u0da2\u0dd9\u0db1\u0dca\u0dc3\u0db1\u0dca-\u0dc2\u0dd0\u0db1\u0db1\u0dca (JS) \u0d85\u0db4\u0dc3\u0dbb\u0db1\u0dba \u0db8\u0dad <span translate=no>_^_1_^_</span>\u0dba. \u0dc0\u0ddc\u0dc3\u0dbb\u0dca\u0dc3\u0dca\u0da7\u0dba\u0dd2\u0db1\u0dca GAN \u0db4\u0daf\u0db1\u0db8\u0dca \u0dc0\u0dd3 \u0d87\u0dad\u0dca\u0dad\u0dda \u0db8\u0dd9\u0db8 \u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0dca \u0d85\u0dad\u0dbb \u0db4\u0dd8\u0dae\u0dd2\u0dc0\u0dd2 \u0db8\u0dd6\u0dc0\u0dbb\u0dca \u0daf\u0dd4\u0dbb \u0db8\u0dad \u0dba. </p>\n<p><span translate=no>_^_2_^_</span></p>\n<p><span translate=no>_^_3_^_</span> \u0dba\u0db1\u0dd4 \u0dc3\u0dd2\u0dba\u0dc5\u0dd4\u0db8 \u0d92\u0d9a\u0dcf\u0db6\u0daf\u0dca\u0db0 \u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0dca \u0dc0\u0dbd \u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba \u0dc0\u0db1 \u0d85\u0dad\u0dbb \u0d92\u0dc0\u0dcf\u0dba\u0dda \u0d86\u0db1\u0dca\u0dad\u0dd2\u0d9a \u0dc3\u0db8\u0dca\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf\u0dc0\u0db1\u0dca \u0dc0\u0dda <span translate=no>_^_4_^_</span>. </p>\n<p><span translate=no>_^_5_^_</span> \u0daf\u0dd3 \u0d87\u0dad\u0dd2 \u0d92\u0d9a\u0dcf\u0db6\u0daf\u0dca\u0db0 \u0dc0\u0dca\u0dba\u0dcf\u0db4\u0dca\u0dad\u0dd2\u0dba\u0d9a\u0dca \u0dc3\u0db3\u0dc4\u0dcf \u0db4\u0dd8\u0dae\u0dd2\u0dc0\u0dd2 \u0da0\u0dbd\u0db1\u0dba \u0daf\u0dd4\u0dbb \u0dc0\u0dda (<span translate=no>_^_6_^_</span> \u0dc3\u0dc4 <span translate=no>_^_7_^_</span> \u0dc3\u0db8\u0dca\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf\u0dc0\u0db1\u0dca \u0dc0\u0dda). </p>\n<p>\u0dc3\u0dd0\u0db6\u0dd1\u0db6\u0dd9\u0daf\u0dcf \u0dc4\u0dd0\u0dbb\u0dd3\u0db8 <span translate=no>_^_9_^_</span> \u0dc3\u0dc4 \u0da2\u0db1\u0db1\u0dba \u0d9a\u0dbb\u0db1 \u0dbd\u0daf \u0db6\u0dd9\u0daf\u0dcf \u0dc4\u0dd0\u0dbb\u0dd3\u0db8 \u0d85\u0dad\u0dbb \u0d95\u0db1\u0dd1\u0db8 \u0d92\u0d9a\u0dcf\u0db6\u0daf\u0dca\u0db0 \u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0d9a\u0dca \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0dc0\u0db8 \u0dc0\u0dc1\u0dba\u0dd9\u0db1\u0dca \u0db4\u0dd8\u0dae\u0dd2\u0dc0\u0dd2 \u0db8\u0db1\u0dca\u0dad\u0dd3\u0da7 \u0daf\u0dd4\u0dbb\u0da7 \u0dc3\u0db8\u0dcf\u0db1 <span translate=no>_^_10_^_</span>\u0dc0\u0dda. <span translate=no>_^_8_^_</span> </p>\n<p>\u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2\u0db4\u0dd9\u0db1\u0dca\u0dc0\u0db1\u0dca\u0db1\u0dda \u0da2\u0dd9\u0db1\u0dca\u0dc3\u0db1\u0dca-\u0dc2\u0dd0\u0db1\u0db1\u0dca (\u0da2\u0dda\u0d91\u0dc3\u0dca) \u0d85\u0db4\u0dc3\u0dbb\u0db1\u0dba \u0dc3\u0dc4 \u0dc3\u0db8\u0dca\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0dca \u0daf\u0dd9\u0d9a\u0d9a\u0dca \u0d85\u0dad\u0dbb \u0dc0\u0dd9\u0db1\u0dc3 \u0dc3\u0db3\u0dc4\u0dcf \u0dc0\u0dd9\u0db1\u0dad\u0dca \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0db8\u0dcf\u0dbb\u0dca\u0d9c \u0dc3\u0dd4\u0db8\u0da7 \u0db1\u0ddc\u0dc0\u0db1 \u0db6\u0dc0\u0dba\u0dd2. \u0d91\u0db6\u0dd0\u0dc0\u0dd2\u0db1\u0dca \u0d85\u0db4\u0dd2 \u0d91\u0d9a\u0dca \u0dc3\u0db8\u0dca\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0d9a\u0dca \u0db8\u0dad (\u0db4\u0dbb\u0dcf\u0db8\u0dd2\u0dad\u0dd2\u0d9a\u0dbb\u0dab\u0dba \u0d9a\u0dbb \u0d87\u0dad\u0dd2) \u0dc1\u0dca\u0dbb\u0dda\u0dab\u0dd2\u0dba\u0dda \u0dc3\u0db8\u0dca\u0db7\u0dc0\u0dba\u0d9a\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1\u0dda \u0db1\u0db8\u0dca \u0d91\u0dba \u0d85\u0db7\u0dd2\u0dc3\u0dcf\u0dbb\u0dd3 \u0db1\u0ddc\u0dc0\u0db1\u0dd4 \u0d87\u0dad. </p>\n<p>\u0d9a\u0db1\u0dca\u0dad\u0ddd\u0dbb\u0ddd\u0dc0\u0dd2\u0da0\u0dca-\u0dbb\u0dd4\u0db6\u0dd2\u0db1\u0dca\u0dc3\u0dca\u0da7\u0dba\u0dd2\u0db1\u0dca\u0daf\u0dca\u0dc0\u0dd2\u0dad\u0dca\u0dc0 \u0db7\u0dcf\u0dc0\u0dba \u0db8\u0dad \u0db4\u0daf\u0db1\u0db8\u0dca\u0dc0, <span translate=no>_^_11_^_</span></p>\n<p><span translate=no>_^_12_^_</span> \u0dc3\u0dd2\u0dba\u0dbd\u0dd4 1-Lipschitz \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0dba\u0db1\u0dca \u0d9a\u0ddc\u0dc4\u0dd9\u0daf. </p>\n<p>\u0d91\u0db1\u0db8\u0dca, \u0d91\u0dba \u0dc3\u0dd2\u0dba\u0dbd\u0dd4 1-Lipschitz \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0dba\u0db1\u0dca <span translate=no>_^_13_^_</span> \u0d85\u0dad\u0dbb \u0dc0\u0dd2\u0dc1\u0dcf\u0dbd\u0dad\u0db8 \u0dc0\u0dd9\u0db1\u0dc3\u0da7 \u0dc3\u0db8\u0dcf\u0db1 \u0dc0\u0dda. </p>\n<p><span translate=no>_^_14_^_</span>-\u0dbd\u0dd2\u0db4\u0dca\u0dc3\u0dca\u0da0\u0dd2\u0da7\u0dca\u0dc3\u0dca \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0dba\u0db1\u0dca \u0dc3\u0db3\u0dc4\u0dcf, <span translate=no>_^_15_^_</span></p>\n<p>\u0dc3\u0dd2\u0dba\u0dbd\u0dd4 <span translate=no>_^_16_^_</span>-Lipschitz \u0dc1\u0dca\u0dbb\u0dd2\u0dad\u0dba\u0db1\u0dca \u0db4\u0dbb\u0dcf\u0db8\u0dd2\u0dad\u0dd2\u0d9a\u0dbb\u0dab\u0dba \u0d9a\u0dbb <span translate=no>_^_18_^_</span> \u0d87\u0dad\u0dd2 <span translate=no>_^_17_^_</span> \u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dba \u0dbd\u0dd9\u0dc3 \u0db1\u0dd2\u0dbb\u0dd6\u0db4\u0dab\u0dba \u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2 \u0db1\u0db8\u0dca <span translate=no>_^_19_^_</span>,</p>\n<p><span translate=no>_^_20_^_</span></p>\n<p>\u0d8b\u0dad\u0dca\u0db4\u0dcf\u0daf\u0d9a\u0dba\u0db1\u0dca\u0dad\u0dca\u0dbb\u0dba\u0d9a\u0dd2\u0db1\u0dca \u0db1\u0dd2\u0dbb\u0dd6\u0db4\u0dab\u0dba <span translate=no>_^_21_^_</span> \u0dc0\u0db1\u0dca\u0db1\u0dda \u0db1\u0db8\u0dca <span translate=no>_^_22_^_</span> \u0dc3\u0dc4 <span translate=no>_^_23_^_</span> \u0daf\u0db1\u0dca\u0db1\u0dcf \u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0d9a\u0dca \u0db1\u0db8\u0dca <span translate=no>_^_24_^_</span>,</p>\n<p><span translate=no>_^_25_^_</span></p>\n<p>\u0daf\u0dd0\u0db1\u0dca <span translate=no>_^_26_^_</span> \u0dc3\u0db8\u0d9f \u0d85\u0db7\u0dd2\u0dc3\u0dcf\u0dbb\u0dd3 \u0dc0\u0dd3\u0db8\u0da7 \u0d89\u0dc4\u0dad \u0dc3\u0dd6\u0dad\u0dca\u0dbb\u0dba \u0d85\u0dc0\u0db8 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 <span translate=no>_^_28_^_</span> \u0dc3\u0db3\u0dc4\u0dcf <span translate=no>_^_27_^_</span> \u0d85\u0db4\u0da7 \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dd2\u0d9a \u0dc3\u0db8\u0dca\u0db7\u0dc0\u0dba \u0dbd\u0db6\u0dcf \u0d9c\u0dad \u0dc4\u0dd0\u0d9a\u0dd2\u0dba. </p>\n<p>\u0d92\u0dc4\u0dcf \u0dc3\u0db8\u0dcf\u0db1\u0dc0 \u0d85\u0db4\u0da7 \u0db1\u0dd0\u0d9c\u0dd3 <span translate=no>_^_29_^_</span> \u0dc3\u0dd2\u0da7\u0dd3\u0db8\u0dd9\u0db1\u0dca \u0dc3\u0ddc\u0dba\u0dcf\u0d9c\u0dad <span translate=no>_^_31_^_</span> \u0dc4\u0dd0\u0d9a\u0dd2\u0dba. <span translate=no>_^_30_^_</span> <em><span translate=no>_^_32_^_</span> \u0db8\u0dcf\u0dba\u0dd2\u0db8\u0dca \u0dad\u0db6\u0dcf \u0d9c\u0dad \u0dc4\u0dd0\u0d9a\u0dd2 \u0d91\u0d9a\u0dca \u0d9a\u0dca\u0dbb\u0db8\u0dba\u0d9a\u0dca \u0db1\u0db8\u0dca \u0db4\u0dbb\u0dcf\u0dc3\u0dba\u0d9a\u0dca \u0dad\u0dd4\u0dc5 \u0d9a\u0dca\u0dbd\u0dd2\u0db4\u0dca \u0d9a\u0dbb \u0d87\u0dad\u0dd2 \u0db1\u0dd2\u0dbb\u0dca\u0dc0\u0da0\u0db1\u0dba \u0d9a\u0dbb\u0db1 \u0dc3\u0dca\u0db1\u0dcf\u0dba\u0dd4\u0d9a \u0da2\u0dcf\u0dbd\u0dba\u0dda \u0dc3\u0dd2\u0dba\u0dbd\u0dd4\u0db8 \u0db6\u0dbb <span translate=no>_^_33_^_</span> \u0d9a\u0dca\u0dbd\u0dd2\u0db4\u0dca \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dba\u0dd2. </em></p>\n<p><a href=\"experiment.html\">\u0dc3\u0dbb\u0dbd MNIST \u0db4\u0dbb\u0db8\u0dca\u0db4\u0dbb\u0dcf\u0dc0\u0dda \u0d85\u0dad\u0dca\u0dc4\u0daf\u0dcf \u0db6\u0dd0\u0dbd\u0dd3\u0db8\u0d9a\u0daf\u0dd3 \u0db8\u0dd9\u0dba \u0d85\u0dad\u0dca\u0dc4\u0daf\u0dcf \u0db6\u0dd0\u0dbd\u0dd3\u0db8\u0da7</a>\u0d9a\u0dda\u0dad\u0dba \u0db8\u0dd9\u0db1\u0dca\u0db1. </p>\n<p><a href=\"https://colab.research.google.com/github/labmlai/annotated_deep_learning_paper_implementations/blob/master/labml_nn/gan/wasserstein/experiment.ipynb\"><span translate=no>_^_34_^_</span></a></p>\n",
 "<h2>Discriminator Loss</h2>\n<p>We want to find <span translate=no>_^_0_^_</span> to maximize <span translate=no>_^_1_^_</span>, so we minimize, <span translate=no>_^_2_^_</span></p>\n": "<h2>\u0dc0\u0dd9\u0db1\u0dc3\u0dca\u0d9a\u0db8\u0dca\u0d9a\u0dbb\u0db1\u0dca\u0db1\u0dcf\u0d9c\u0dda \u0db4\u0dcf\u0da9\u0dd4\u0dc0</h2>\n<p>\u0d85\u0db4\u0dd2\u0d8b\u0db4\u0dbb\u0dd2\u0db8 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0dc3\u0ddc\u0dba\u0dcf <span translate=no>_^_0_^_</span> \u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0da7 \u0d85\u0dc0\u0dc1\u0dca\u0dba <span translate=no>_^_1_^_</span>, \u0d92 \u0db1\u0dd2\u0dc3\u0dcf \u0d85\u0db4\u0dd2 \u0d85\u0dc0\u0db8, <span translate=no>_^_2_^_</span></p>\n",
 "<h2>Generator Loss</h2>\n<p>We want to find <span translate=no>_^_0_^_</span> to minimize <span translate=no>_^_1_^_</span> The first component is independent of <span translate=no>_^_2_^_</span>, so we minimize, <span translate=no>_^_3_^_</span></p>\n": "<h2>\u0d8b\u0dad\u0dca\u0db4\u0dcf\u0daf\u0d9a\u0db1\u0dd0\u0dad\u0dd2\u0dc0\u0dd3\u0db8</h2>\n<p>\u0d85\u0dc0\u0db8\u0d9a\u0dd2\u0dbb\u0dd3\u0db8 <span translate=no>_^_1_^_</span> \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0db4\u0da7 \u0dc3\u0ddc\u0dba\u0dcf <span translate=no>_^_0_^_</span> \u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0da7 \u0d85\u0dc0\u0dc1\u0dca\u0dba\u0dba\u0dd2 \u0db4\u0dc5\u0db8\u0dd4 \u0dc3\u0d82\u0dbb\u0da0\u0d9a\u0dba \u0dc3\u0dca\u0dc0\u0dcf\u0db0\u0dd3\u0db1 \u0dc0\u0dda <span translate=no>_^_2_^_</span>, \u0d91\u0db6\u0dd0\u0dc0\u0dd2\u0db1\u0dca \u0d85\u0db4\u0dd2 \u0d85\u0dc0\u0db8 \u0d9a\u0dbb\u0db8\u0dd4, <span translate=no>_^_3_^_</span></p>\n",
 "<p>We use ReLUs to clip the loss to keep <span translate=no>_^_0_^_</span> range. </p>\n": "<p><span translate=no>_^_0_^_</span> \u0db4\u0dbb\u0dcf\u0dc3\u0dba \u0dad\u0db6\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0dbd\u0dcf\u0db7\u0dba \u0d9a\u0dca\u0dbd\u0dd2\u0db4\u0dca \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0d85\u0db4\u0dd2 RelUs \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db8\u0dd4. </p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span> is <span translate=no>_^_3_^_</span></li></ul>\n<p>This returns the a tuple with losses for <span translate=no>_^_4_^_</span> and <span translate=no>_^_5_^_</span>, which are later added. They are kept separate for logging.</p>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dc0\u0dda <span translate=no>_^_1_^_</span> </li>\n</ul><li><span translate=no>_^_2_^_</span> \u0dc0\u0dda <span translate=no>_^_3_^_</span></li>\n<p>\u0db8\u0dd9\u0dba\u0db4\u0dcf\u0da9\u0dd4 \u0dc3\u0dc4\u0dd2\u0dad \u0da7\u0dd2\u0dba\u0dd4\u0db4\u0dbd\u0dca \u0db1\u0dd0\u0dc0\u0dad \u0dbd\u0db6\u0dcf \u0daf\u0dd9\u0db1 <span translate=no>_^_4_^_</span> \u0d85\u0dad\u0dbb <span translate=no>_^_5_^_</span>\u0d92\u0dc0\u0dcf \u0db4\u0dc3\u0dd4\u0dc0 \u0d91\u0d9a\u0dad\u0dd4 \u0d9a\u0dbb\u0db1\u0dd4 \u0dbd\u0dd0\u0db6\u0dda. \u0d92\u0dc0\u0dcf \u0dbd\u0ddc\u0d9c\u0dca \u0dc0\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dc0\u0dd9\u0db1\u0db8 \u0dad\u0db6\u0dcf \u0d87\u0dad. </p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dc0\u0dda <span translate=no>_^_1_^_</span></li></ul>\n",
 "A simple PyTorch implementation/tutorial of Wasserstein Generative Adversarial Networks (WGAN) loss functions.": "\u0dc0\u0ddc\u0dc3\u0dbb\u0dca\u0dc3\u0dca\u0da7\u0dba\u0dd2\u0db1\u0dca \u0d8b\u0dad\u0dca\u0db4\u0dcf\u0daf\u0d9a \u0d87\u0da9\u0dca\u0dc0\u0dbb\u0dca\u0dc3\u0dbb\u0dd2\u0dba\u0dbd\u0dca \u0db1\u0dd9\u0da7\u0dca\u0dc0\u0dbb\u0dca\u0d9a\u0dca\u0dc3\u0dca (WGAN) \u0db4\u0dcf\u0da9\u0dd4 \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0dba\u0db1\u0dca \u0db4\u0dd2\u0dc5\u0dd2\u0db6\u0db3 \u0dc3\u0dbb\u0dbd \u0db4\u0dba\u0dd2\u0da7\u0ddd\u0da0\u0dca \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8/\u0db1\u0dd2\u0db6\u0db1\u0dca\u0db0\u0db1\u0dba.",
 "Wasserstein GAN (WGAN)": "\u0dc0\u0ddc\u0dc3\u0dbb\u0dca\u0dc3\u0dca\u0da7\u0dba\u0dd2\u0db1\u0dca GAN (WGAN)"
}