{
 "<h1>Gradient Penalty for Wasserstein GAN (WGAN-GP)</h1>\n<p>This is an implementation of <a href=\"https://papers.labml.ai/paper/1704.00028\">Improved Training of Wasserstein GANs</a>.</p>\n<p><a href=\"../index.html\">WGAN</a> suggests clipping weights to enforce Lipschitz constraint on the discriminator network (critic). This and other weight constraints like L2 norm clipping, weight normalization, L1, L2 weight decay have problems:</p>\n<p>1. Limiting the capacity of the discriminator 2. Exploding and vanishing gradients (without <a href=\"../../../normalization/batch_norm/index.html\">Batch Normalization</a>).</p>\n<p>The paper <a href=\"https://papers.labml.ai/paper/1704.00028\">Improved Training of Wasserstein GANs</a> proposal a better way to improve Lipschitz constraint, a gradient penalty.</p>\n<p><span translate=no>_^_0_^_</span></p>\n<p>where <span translate=no>_^_1_^_</span> is the penalty weight and</p>\n<span translate=no>_^_2_^_</span><p>That is we try to keep the gradient norm <span translate=no>_^_3_^_</span> close to <span translate=no>_^_4_^_</span>.</p>\n<p>In this implementation we set <span translate=no>_^_5_^_</span>.</p>\n<p>Here is the <a href=\"experiment.html\">code for an experiment</a> that uses gradient penalty.</p>\n": "<h1>Wasserstein GAN (WGAN-GP) \u7684\u68af\u5ea6\u60e9\u7f5a</h1>\n<p>\u8fd9\u662f <a href=\"https://papers.labml.ai/paper/1704.00028\">Wasserstein GAN \u6539\u8fdb\u8bad\u7ec3\u7684</a>\u5b9e\u73b0\u3002</p>\n<p><a href=\"../index.html\">WGAN</a> \u5efa\u8bae\u524a\u51cf\u6743\u91cd\u4ee5\u5bf9\u9274\u522b\u5668\u7f51\u7edc\u5f3a\u5236\u6267\u884c Lipschitz \u9650\u5236\uff08\u8bc4\u8bba\u5bb6\uff09\u3002\u8fd9\u4e2a\u548c\u5176\u4ed6\u6743\u91cd\u7ea6\u675f\uff0c\u5982L2\u6807\u51c6\u524a\u51cf\u3001\u6743\u91cd\u6807\u51c6\u5316\u3001L1\u3001L2\u6743\u91cd\u8870\u51cf\u90fd\u6709\u95ee\u9898\uff1a</p>\n<p>1.\u9650\u5236\u9274\u522b\u5668\u7684\u5bb9\u91cf 2.\u5206\u89e3\u548c\u6d88\u5931\u6e10\u53d8\uff08\u4e0d\u5e26<a href=\"../../../normalization/batch_norm/index.html\">\u6279\u91cf\u5f52\u4e00\u5316</a>\uff09\u3002</p>\n<p>\u8bba\u6587\u300a<a href=\"https://papers.labml.ai/paper/1704.00028\">\u6539\u8fdb\u4e86 Wasserstein GaN \u7684\u8bad\u7ec3\u300b</a>\u63d0\u51fa\u4e86\u6539\u8fdb Lipschitz \u7ea6\u675f\u7684\u66f4\u597d\u65b9\u6cd5\uff0c\u5373\u68af\u5ea6\u60e9\u7f5a\u3002</p>\n<p><span translate=no>_^_0_^_</span></p>\n<p>\u60e9\u7f5a\u91cd<span translate=no>_^_1_^_</span>\u91cf\u5728\u54ea\u91cc</p>\n<span translate=no>_^_2_^_</span><p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c3d\u91cf\u4fdd\u6301\u68af\u5ea6\u8303<span translate=no>_^_3_^_</span>\u6570\u63a5\u8fd1<span translate=no>_^_4_^_</span>\u3002</p>\n<p>\u5728\u8fd9\u4e2a\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u8bbe\u7f6e<span translate=no>_^_5_^_</span>\u3002</p>\n<p>\u4ee5\u4e0b\u662f\u4f7f\u7528\u68af\u5ea6\u60e9\u7f5a<a href=\"experiment.html\">\u7684\u5b9e\u9a8c\u7684\u4ee3\u7801</a>\u3002</p>\n",
 "<h2>Gradient Penalty</h2>\n": "<h2>\u68af\u5ea6\u60e9\u7f5a</h2>\n",
 "<p>Calculate gradients of <span translate=no>_^_0_^_</span> with respect to <span translate=no>_^_1_^_</span>. <span translate=no>_^_2_^_</span> is set to ones since we want the gradients of <span translate=no>_^_3_^_</span>, and we need to create and retain graph since we have to compute gradients with respect to weight on this loss. </p>\n": "<p>\u8ba1\u7b97<span translate=no>_^_0_^_</span>\u76f8\u5bf9\u4e8e\u7684\u68af\u5ea6<span translate=no>_^_1_^_</span>\u3002<span translate=no>_^_2_^_</span>\u8bbe\u7f6e\u4e3a 1\uff0c\u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u68af\u5ea6<span translate=no>_^_3_^_</span>\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u548c\u4fdd\u7559\u56fe\u5f62\uff0c\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u8ba1\u7b97\u76f8\u5bf9\u4e8e\u6b64\u635f\u5931\u7684\u6743\u91cd\u7684\u68af\u5ea6\u3002</p>\n",
 "<p>Calculate the norm <span translate=no>_^_0_^_</span> </p>\n": "<p>\u8ba1\u7b97\u5e38\u6570<span translate=no>_^_0_^_</span></p>\n",
 "<p>Get batch size </p>\n": "<p>\u83b7\u53d6\u6279\u6b21\u5927\u5c0f</p>\n",
 "<p>Reshape gradients to calculate the norm </p>\n": "<p>\u91cd\u5851\u68af\u5ea6\u4ee5\u8ba1\u7b97\u8303\u6570</p>\n",
 "<p>Return the loss <span translate=no>_^_0_^_</span> </p>\n": "<p>\u9000\u8fd8\u635f\u5931<span translate=no>_^_0_^_</span></p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span> is <span translate=no>_^_3_^_</span></li></ul>\n<p><span translate=no>_^_4_^_</span> since we set <span translate=no>_^_5_^_</span> for this implementation.</p>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f<span translate=no>_^_1_^_</span></li>\n</ul><li><span translate=no>_^_2_^_</span>\u662f<span translate=no>_^_3_^_</span></li>\n<p><span translate=no>_^_4_^_</span>\u56e0\u4e3a\u6211\u4eec<span translate=no>_^_5_^_</span>\u4e3a\u8fd9\u4e2a\u5b9e\u73b0\u505a\u597d\u4e86\u51c6\u5907\u3002</p>\n",
 "An annotated PyTorch implementation/tutorial of\n Improved Training of Wasserstein GANs.": "\u5e26\u6ce8\u91ca\u7684 PyTorch \u5b9e\u73b0/\u6559\u7a0b\n \u6539\u8fdb\u4e86 Wasserstein GAN \u7684\u8bad\u7ec3\u3002",
 "Gradient Penalty for Wasserstein GAN (WGAN-GP)": "Wasserstein GAN (WGAN-GP) \u7684\u68af\u5ea6\u60e9\u7f5a"
}