{
 "<h1>Prioritized Experience Replay Buffer</h1>\n<p>This implements paper <a href=\"https://papers.labml.ai/paper/1511.05952\">Prioritized experience replay</a>, using a binary segment tree.</p>\n<p><a href=\"https://colab.research.google.com/github/labmlai/annotated_deep_learning_paper_implementations/blob/master/labml_nn/rl/dqn/experiment.ipynb\"><span translate=no>_^_0_^_</span></a> <a href=\"https://app.labml.ai/run/fe1ad986237511ec86e8b763a2d3f710\"><span translate=no>_^_1_^_</span></a></p>\n": "<h1>\u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dcf\u0d85\u0dad\u0dca\u0daf\u0dd0\u0d9a\u0dd3\u0db8\u0dca \u0db1\u0dd0\u0dc0\u0dad \u0db0\u0dcf\u0dc0\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0db6\u0dc6\u0dbb\u0dba</h1>\n<p>\u0db8\u0dd9\u0dba\u0daf\u0dca\u0dc0\u0dd2\u0db8\u0dba \u0d85\u0d82\u0dc1 \u0d9c\u0dc3\u0d9a\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db8\u0dd2\u0db1\u0dca \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 <a href=\"https://papers.labml.ai/paper/1511.05952\">\u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dcf \u0d85\u0dad\u0dca\u0daf\u0dd0\u0d9a\u0dd3\u0db8\u0dca \u0db1\u0dd0\u0dc0\u0dad \u0db0\u0dcf\u0dc0\u0db1\u0dba</a>\u0d9a\u0dbb\u0dba\u0dd2. </p>\n<p><a href=\"https://colab.research.google.com/github/labmlai/annotated_deep_learning_paper_implementations/blob/master/labml_nn/rl/dqn/experiment.ipynb\"><span translate=no>_^_0_^_</span></a> <a href=\"https://app.labml.ai/run/fe1ad986237511ec86e8b763a2d3f710\"> <span translate=no>_^_1_^_</span></a></p>\n",
 "<h2>Buffer for Prioritized Experience Replay</h2>\n<p><a href=\"https://papers.labml.ai/paper/1511.05952\">Prioritized experience replay</a>  samples important transitions more frequently. The transitions are prioritized by the Temporal Difference error (td error), <span translate=no>_^_0_^_</span>.</p>\n<p>We sample transition <span translate=no>_^_1_^_</span> with probability, <span translate=no>_^_2_^_</span> where <span translate=no>_^_3_^_</span> is a hyper-parameter that determines how much prioritization is used, with <span translate=no>_^_4_^_</span> corresponding to uniform case. <span translate=no>_^_5_^_</span> is the priority.</p>\n<p>We use proportional prioritization <span translate=no>_^_6_^_</span> where <span translate=no>_^_7_^_</span> is the temporal difference for transition <span translate=no>_^_8_^_</span>.</p>\n<p>We correct the bias introduced by prioritized replay using  importance-sampling (IS) weights <span translate=no>_^_9_^_</span> in the loss function. This fully compensates when <span translate=no>_^_10_^_</span>. We normalize weights by <span translate=no>_^_11_^_</span> for stability. Unbiased nature is most important towards the convergence at end of training. Therefore we increase <span translate=no>_^_12_^_</span> towards end of training.</p>\n<h3>Binary Segment Tree</h3>\n<p>We use a binary segment tree to efficiently calculate <span translate=no>_^_13_^_</span>, the cumulative probability, which is needed to sample. We also use a binary segment tree to find <span translate=no>_^_14_^_</span>, which is needed for <span translate=no>_^_15_^_</span>. We can also use a min-heap for this. Binary Segment Tree lets us calculate these in <span translate=no>_^_16_^_</span> time, which is way more efficient that the naive <span translate=no>_^_17_^_</span> approach.</p>\n<p>This is how a binary segment tree works for sum; it is similar for minimum. Let <span translate=no>_^_18_^_</span> be the list of <span translate=no>_^_19_^_</span> values we want to represent. Let <span translate=no>_^_20_^_</span> be the <span translate=no>_^_21_^_</span> node of the <span translate=no>_^_22_^_</span> row  in the binary tree. That is two children of node <span translate=no>_^_23_^_</span> are <span translate=no>_^_24_^_</span> and <span translate=no>_^_25_^_</span>.</p>\n<p>The leaf nodes on row <span translate=no>_^_26_^_</span>  will have values of <span translate=no>_^_27_^_</span>. Every node keeps the sum of the two child nodes. That is, the root node keeps the sum of the entire array of values. The left and right children of the root node keep  the sum of the first half of the array and  the sum of the second half of the array, respectively. And so on...</p>\n<p><span translate=no>_^_28_^_</span></p>\n<p>Number of nodes in row <span translate=no>_^_29_^_</span>, <span translate=no>_^_30_^_</span> This is equal to the sum of nodes in all rows above <span translate=no>_^_31_^_</span>. So we can use a single array <span translate=no>_^_32_^_</span> to store the tree, where, <span translate=no>_^_33_^_</span></p>\n<p>Then child nodes of <span translate=no>_^_34_^_</span> are <span translate=no>_^_35_^_</span> and <span translate=no>_^_36_^_</span>. That is, <span translate=no>_^_37_^_</span></p>\n<p>This way of maintaining binary trees is very easy to program. <em>Note that we are indexing starting from 1</em>.</p>\n<p>We use the same structure to compute the minimum.</p>\n": "<h2>\u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dcf\u0d85\u0dad\u0dca\u0daf\u0dd0\u0d9a\u0dd3\u0db8\u0dca \u0db1\u0dd0\u0dc0\u0dad \u0db0\u0dcf\u0dc0\u0db1\u0dba \u0dc3\u0db3\u0dc4\u0dcf \u0db6\u0dc6\u0dbb\u0dba</h2>\n<p><a href=\"https://papers.labml.ai/paper/1511.05952\">\u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dcf \u0d85\u0dad\u0dca\u0daf\u0dd0\u0d9a\u0dd3\u0db8\u0dca \u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd \u0db1\u0dd0\u0dc0\u0dad \u0db0\u0dcf\u0dc0\u0db1\u0dba</a> \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc0\u0dd0\u0daf\u0d9c\u0dad\u0dca \u0dc3\u0d82\u0d9a\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dad\u0dd2 \u0db1\u0dd2\u0dad\u0dbb \u0db1\u0dd2\u0dad\u0dbb. \u0dc3\u0d82\u0d9a\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dad\u0dd2 \u0dc3\u0db3\u0dc4\u0dcf \u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dcf\u0dc0\u0dba \u0daf\u0dd9\u0db1\u0dd4 \u0dbd\u0db6\u0db1\u0dca\u0db1\u0dda \u0dad\u0dcf\u0dc0\u0d9a\u0dcf\u0dbd\u0dd2\u0d9a \u0dc0\u0dd9\u0db1\u0dc3 \u0daf\u0ddd\u0dc2\u0dba (td \u0daf\u0ddd\u0dc2\u0dba), <span translate=no>_^_0_^_</span>. </p>\n<p>\u0d85\u0db4\u0dd2\u0dc3\u0db8\u0dca\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf\u0dc0 <span translate=no>_^_1_^_</span> \u0dc3\u0db8\u0d9f \u0dc3\u0d82\u0d9a\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dad\u0dd2\u0dba \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2 \u0d9a\u0dbb\u0db1\u0dca\u0db1\u0dd9\u0db8\u0dd4, \u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dcf\u0dc0\u0dba \u0d9a\u0ddc\u0db4\u0db8\u0dab \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba\u0d9a\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db1\u0dc0\u0dcf\u0daf \u0dba\u0db1\u0dca\u0db1 \u0dad\u0dd3\u0dbb\u0dab\u0dba \u0d9a\u0dbb\u0db1 \u0d85\u0db0\u0dd2-\u0db4\u0dbb\u0dcf\u0db8\u0dd2\u0dad\u0dd2\u0dba\u0d9a\u0dca <span translate=no>_^_2_^_</span> \u0d9a\u0ddc\u0dc4\u0dd9\u0daf <span translate=no>_^_3_^_</span> ? <span translate=no>_^_4_^_</span> \u0d92\u0d9a\u0dcf\u0d9a\u0dcf\u0dbb \u0db1\u0da9\u0dd4\u0dc0\u0da7 \u0d85\u0db1\u0dd4\u0dbb\u0dd6\u0db4 \u0dc0\u0dda. <span translate=no>_^_5_^_</span> \u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dcf\u0dc0\u0dba \u0dc0\u0dda. </p>\n<p>\u0dc3\u0d82\u0d9a\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dad\u0dd2\u0dba\u0dc3\u0db3\u0dc4\u0dcf \u0dad\u0dcf\u0dc0\u0d9a\u0dcf\u0dbd\u0dd2\u0d9a \u0dc0\u0dd9\u0db1\u0dc3 <span translate=no>_^_6_^_</span> <span translate=no>_^_7_^_</span> \u0d9a\u0ddc\u0dad\u0dd0\u0db1\u0daf \u0dc3\u0db8\u0dcf\u0db1\u0dd4\u0db4\u0dcf\u0dad\u0dd2\u0d9a \u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dcf\u0dc0\u0dba \u0d85\u0db4\u0dd2 \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db8\u0dd4 <span translate=no>_^_8_^_</span>. </p>\n<p>\u0db4\u0dcf\u0da9\u0dd4\u0dc1\u0dca\u0dbb\u0dd2\u0dad\u0dba\u0dda \u0dc0\u0dd0\u0daf\u0d9c\u0dad\u0dca-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca (IS) \u0db6\u0dbb <span translate=no>_^_9_^_</span> \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db8\u0dd2\u0db1\u0dca \u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dcf \u0db1\u0dd0\u0dc0\u0dad \u0db0\u0dcf\u0dc0\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dd9\u0db1\u0dca \u0dc4\u0db3\u0dd4\u0db1\u0dca\u0dc0\u0dcf \u0daf\u0dd9\u0db1 \u0dbd\u0daf \u0db1\u0dd0\u0db9\u0dd4\u0dbb\u0dd4\u0dc0 \u0d85\u0db4\u0dd2 \u0db1\u0dd2\u0dc0\u0dd0\u0dbb\u0daf\u0dd2 \u0d9a\u0dbb\u0db8\u0dd4. \u0db8\u0dd9\u0dba \u0dc3\u0db8\u0dca\u0db4\u0dd6\u0dbb\u0dca\u0dab\u0dba\u0dd9\u0db1\u0dca\u0db8 \u0dc0\u0db1\u0dca\u0daf\u0dd2 \u0d9c\u0dd9\u0dc0\u0db1\u0dca\u0db1\u0dda \u0d9a\u0dc0\u0daf\u0dcf\u0daf <span translate=no>_^_10_^_</span>\u0dba\u0db1\u0dca\u0db1\u0dba\u0dd2. \u0dc3\u0dca\u0dae\u0dcf\u0dc0\u0dbb\u0dad\u0dca\u0dc0\u0dba <span translate=no>_^_11_^_</span> \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0db4\u0dd2 \u0db6\u0dbb \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0d9a\u0dbb\u0db8\u0dd4. \u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4\u0dc0 \u0d85\u0dc0\u0dc3\u0dcf\u0db1\u0dba\u0dda \u0d85\u0db7\u0dd2\u0dc3\u0dcf\u0dbb\u0dd3\u0dad\u0dcf\u0dc0 \u0d9a\u0dd9\u0dbb\u0dd9\u0dc4\u0dd2 \u0d85\u0db4\u0d9a\u0dca\u0dc2\u0db4\u0dcf\u0dad\u0dd3 \u0dc3\u0dca\u0dc0\u0db7\u0dcf\u0dc0\u0dba \u0dc0\u0da9\u0dcf\u0dad\u0dca \u0dc0\u0dd0\u0daf\u0d9c\u0dad\u0dca \u0dc0\u0dda. \u0d91\u0db6\u0dd0\u0dc0\u0dd2\u0db1\u0dca \u0d85\u0db4\u0dd2 \u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4\u0dc0 <span translate=no>_^_12_^_</span> \u0d85\u0dc0\u0dc3\u0db1\u0dca \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dc0\u0dd0\u0da9\u0dd2 \u0dc0\u0dd9\u0db8\u0dd4. </p>\n<h3>\u0daf\u0dca\u0dc0\u0dd2\u0db8\u0dba\u0d9b\u0dab\u0dca\u0da9\u0dba\u0dda \u0dbb\u0dd4\u0d9a\u0dca</h3>\n<p>\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba\u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0dc0\u0dc1\u0dca\u0dba \u0dc0\u0db1 \u0dc3\u0db8\u0dd4\u0da0\u0dca\u0da0\u0dd2\u0dad \u0dc3\u0db8\u0dca\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf\u0dc0 \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0d9a\u0dca\u0dc2\u0db8\u0dc0 \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf <span translate=no>_^_13_^_</span>\u0daf\u0dca\u0dc0\u0dd2\u0db8\u0dba \u0d9b\u0dab\u0dca\u0da9\u0d9a \u0d9c\u0dc3\u0d9a\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db8\u0dd4. \u0d92 \u0dc0\u0d9c\u0dda\u0db8 \u0d85\u0db4\u0dd2 \u0dc3\u0ddc\u0dba\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0da7 \u0daf\u0dca\u0dc0\u0dd2\u0db8\u0dba \u0d9a\u0ddc\u0da7\u0dc3 \u0d9c\u0dc3\u0d9a\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf <span translate=no>_^_14_^_</span>, \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0dc0\u0dc1\u0dca\u0dba \u0dc0\u0db1 <span translate=no>_^_15_^_</span>. \u0db8\u0dda \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0db4\u0da7 \u0d9a\u0dd4\u0da9\u0dcf \u0d9c\u0ddc\u0da9\u0d9a\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2\u0dba. \u0daf\u0dca\u0dc0\u0dd2\u0db8\u0dba \u0d9b\u0dab\u0dca\u0da9\u0dba\u0dda \u0d9c\u0dc3 \u0d85\u0db4\u0da7 <span translate=no>_^_16_^_</span> \u0d9a\u0dcf\u0dbd\u0dba \u0dad\u0dd4\u0dc5 \u0db8\u0dd9\u0db8 \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0d89\u0da9 \u0daf\u0dd9\u0dba\u0dd2, \u0d91\u0dba \u0db6\u0ddc\u0dc5\u0db3 <span translate=no>_^_17_^_</span> \u0db4\u0dca\u0dbb\u0dc0\u0dda\u0dc1\u0dba \u0dc0\u0da9\u0dcf\u0dad\u0dca \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0d9a\u0dca\u0dc2\u0db8 \u0dc0\u0dda. </p>\n<p>\u0daf\u0dca\u0dc0\u0dd2\u0db8\u0dba\u0d9b\u0dab\u0dca\u0da9\u0d9a \u0d9c\u0dc3\u0d9a\u0dca \u0d91\u0d9a\u0dad\u0dd4\u0dc0 \u0dc3\u0db3\u0dc4\u0dcf \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf \u0d9a\u0dbb\u0db1 \u0d86\u0d9a\u0dcf\u0dbb\u0dba \u0db8\u0dd9\u0dba\u0dba\u0dd2; \u0d91\u0dba \u0d85\u0dc0\u0db8 \u0dc0\u0dc1\u0dba\u0dd9\u0db1\u0dca \u0dc3\u0db8\u0dcf\u0db1 \u0dc0\u0dda. \u0d85\u0db4\u0dd2 \u0db1\u0dd2\u0dba\u0ddd\u0da2\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0d85\u0dc0\u0dc1\u0dca\u0dba <span translate=no>_^_19_^_</span> \u0dc0\u0da7\u0dd2\u0db1\u0dcf\u0d9a\u0db8\u0dca \u0dbd\u0dd0\u0dba\u0dd2\u0dc3\u0dca\u0dad\u0dd4\u0dc0 \u0d9a\u0dbb\u0db8\u0dd4 <span translate=no>_^_18_^_</span> . \u0daf\u0dca\u0dc0\u0dd2\u0db8\u0dba \u0d9c\u0dc3\u0dd9\u0dc4\u0dd2 <span translate=no>_^_22_^_</span> \u0db4\u0dda\u0dc5\u0dd2\u0dba\u0dda <span translate=no>_^_21_^_</span> \u0db1\u0ddd\u0da9\u0dba <span translate=no>_^_20_^_</span> \u0dc0\u0dd2\u0dba \u0dba\u0dd4\u0dad\u0dd4\u0dba. \u0d92 node \u0d91\u0d9a\u0d9a\u0dca \u0db8\u0dad\u0db8 \u0d8a\u0da7 \u0d85\u0daf\u0dcf\u0dbd \u0daf\u0dbb\u0dd4\u0dc0\u0db1\u0dca \u0daf\u0dd9\u0daf\u0dd9\u0db1\u0dd9\u0d9a\u0dd4 <span translate=no>_^_23_^_</span> \u0dc0\u0db1 <span translate=no>_^_24_^_</span> \u0d85\u0dad\u0dbb <span translate=no>_^_25_^_</span>. </p>\n<p>\u0db4\u0dda\u0dc5\u0dd2\u0dba\u0dda\u0d9a\u0ddc\u0dc5 \u0db1\u0ddd\u0da9\u0dca \u0dc0\u0dbd \u0d85\u0d9c\u0dba\u0db1\u0dca <span translate=no>_^_26_^_</span> \u0d87\u0dad <span translate=no>_^_27_^_</span>. \u0dc3\u0dd1\u0db8 \u0db1\u0ddd\u0da9\u0dba\u0d9a\u0dca\u0db8 \u0dc5\u0db8\u0dcf \u0db1\u0ddd\u0da9\u0dca \u0daf\u0dd9\u0d9a\u0dda \u0d91\u0d9a\u0dad\u0dd4\u0dc0 \u0dad\u0db6\u0dcf \u0d9c\u0db1\u0dd3. \u0d91\u0db1\u0db8\u0dca, \u0db8\u0dd6\u0dbd \u0db1\u0ddd\u0da9\u0dba \u0dc3\u0db8\u0dc3\u0dca\u0dad \u0d85\u0d9c\u0dba\u0db1\u0dca\u0dc4\u0dd2 \u0d91\u0d9a\u0dad\u0dd4\u0dc0 \u0dad\u0db6\u0dcf \u0d9c\u0db1\u0dd3. \u0db8\u0dd6\u0dbd node \u0d91\u0d9a\u0d9a\u0dca \u0db8\u0dad\u0db8 \u0d8a\u0da7 \u0d85\u0daf\u0dcf\u0dbd \u0dc0\u0db8\u0dca \u0dc4\u0dcf \u0daf\u0d9a\u0dd4\u0dab\u0dd4 \u0daf\u0dbb\u0dd4\u0dc0\u0db1\u0dca \u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dc5\u0dd2\u0db1\u0dca \u0d85\u0dbb\u0dcf\u0dc0\u0dd9\u0dc4\u0dd2 \u0db4\u0dc5\u0db8\u0dd4 \u0db7\u0dcf\u0d9c\u0dba\u0dda \u0d91\u0d9a\u0dad\u0dd4\u0dc0 \u0dc3\u0dc4 \u0daf\u0dd9\u0dc0\u0db1 \u0db7\u0dcf\u0d9c\u0dba\u0dda \u0d91\u0d9a\u0dad\u0dd4\u0dc0 \u0dad\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1. \u0dc4\u0dcf \u0d91\u0dc3\u0dda \u0db8\u0dad... </p>\n<p><span translate=no>_^_28_^_</span></p>\n<p>\u0db4\u0dda\u0dc5\u0dd2\u0dba\u0dda\u0db1\u0ddd\u0da9\u0dca \u0d9c\u0dab\u0db1 <span translate=no>_^_29_^_</span>, <span translate=no>_^_30_^_</span> \u0db8\u0dd9\u0dba \u0d89\u0dc4\u0dad \u0dc3\u0dd2\u0dba\u0dbd\u0dd4 \u0db4\u0dda\u0dc5\u0dd2\u0dc0\u0dbd \u0db1\u0ddd\u0da9\u0dca \u0d91\u0d9a\u0dad\u0dd4\u0dc0\u0da7 \u0dc3\u0db8\u0dcf\u0db1 \u0dc0\u0dda <span translate=no>_^_31_^_</span>. \u0d92 \u0db1\u0dd2\u0dc3\u0dcf \u0d85\u0db4\u0da7 \u0d9c\u0dc3 \u0d9c\u0db6\u0da9\u0dcf <span translate=no>_^_32_^_</span> \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dad\u0db1\u0dd2 \u0d85\u0dbb\u0dcf\u0dc0\u0d9a\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2\u0dba, \u0d9a\u0ddc\u0dc4\u0dda\u0daf, <span translate=no>_^_33_^_</span></p>\n<p>\u0d91\u0dc0\u0dd2\u0da7\u0dc5\u0db8\u0dcf \u0db1\u0ddd\u0da9\u0dca <span translate=no>_^_34_^_</span> <span translate=no>_^_35_^_</span> \u0dc3\u0dc4 <span translate=no>_^_36_^_</span>. \u0d91\u0db1\u0db8\u0dca, <span translate=no>_^_37_^_</span></p>\n<p>\u0daf\u0dca\u0dc0\u0dd2\u0db8\u0dba\u0d9c\u0dc3\u0dca \u0db1\u0da9\u0dad\u0dca\u0dad\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0db8\u0dd9\u0db8 \u0d9a\u0dca\u0dbb\u0db8\u0dba \u0d9a\u0dca\u0dbb\u0db8\u0dbd\u0dda\u0d9b\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0d89\u0dad\u0dcf \u0db4\u0dc4\u0dc3\u0dd4\u0dba. <em>\u0d85\u0db4\u0dd2\u0dc3\u0dd4\u0da0\u0dd2\u0d9c\u0dad \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 1 \u0dc3\u0dd2\u0da7 \u0d86\u0dbb\u0db8\u0dca\u0db7 \u0dc0\u0db1 \u0db6\u0dc0 \u0dc3\u0dbd\u0d9a\u0db1\u0dca\u0db1</em>. </p>\n<p>\u0d85\u0dc0\u0db8\u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0db4\u0dd2 \u0d91\u0d9a\u0db8 \u0dc0\u0dca\u0dba\u0dd4\u0dc4\u0dba \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db8\u0dd4. </p>\n",
 "<h3>Add sample to queue</h3>\n": "<h3>\u0db4\u0ddd\u0dbd\u0dd2\u0db8\u0da7\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba \u0d91\u0d9a\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1</h3>\n",
 "<h3>Initialize</h3>\n": "<h3>\u0d86\u0dbb\u0db8\u0dca\u0db7\u0d9a\u0dbb\u0db1\u0dca\u0db1</h3>\n",
 "<h3>Sample from buffer</h3>\n": "<h3>\u0db6\u0dc6\u0dbb\u0dba\u0dd9\u0db1\u0dca\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba</h3>\n",
 "<h3>Update priorities</h3>\n": "<h3>\u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dcf\u0dba\u0dcf\u0dc0\u0dad\u0dca\u0d9a\u0dcf\u0dbd\u0dd3\u0db1 \u0d9a\u0dbb\u0db1\u0dca\u0db1</h3>\n",
 "<h3>Whether the buffer is full</h3>\n": "<h3>\u0db6\u0dc6\u0dbb\u0dba\u0db4\u0dd2\u0dbb\u0dd3 \u0dad\u0dd2\u0db6\u0dda\u0daf</h3>\n",
 "<h4><span translate=no>_^_0_^_</span></h4>\n": "<h4><span translate=no>_^_0_^_</span></h4>\n",
 "<h4>Find largest <span translate=no>_^_0_^_</span> such that <span translate=no>_^_1_^_</span></h4>\n": "<h4><span translate=no>_^_0_^_</span> \u0d91\u0dc0\u0dd0\u0db1\u0dd2 \u0dc0\u0dd2\u0dc1\u0dcf\u0dbd\u0dad\u0db8 \u0dc3\u0ddc\u0dba\u0dcf <span translate=no>_^_1_^_</span></h4>\n",
 "<h4>Set priority in binary segment tree for minimum</h4>\n": "<h4>\u0d85\u0dc0\u0db8\u0dc3\u0db3\u0dc4\u0dcf \u0daf\u0dca\u0dc0\u0dd2\u0db8\u0dba \u0d9a\u0ddc\u0da7\u0dc3 \u0d9c\u0dc3 \u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dca\u0dc0\u0dba \u0dc3\u0d9a\u0dc3\u0db1\u0dca\u0db1</h4>\n",
 "<h4>Set priority in binary segment tree for sum</h4>\n": "<h4>\u0db8\u0dd4\u0daf\u0dbd\u0dc3\u0db3\u0dc4\u0dcf \u0daf\u0dca\u0dc0\u0dd2\u0db8\u0dba \u0d9a\u0ddc\u0da7\u0dc3 \u0d9c\u0dc3 \u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dca\u0dc0\u0dba \u0dc3\u0d9a\u0dc3\u0db1\u0dca\u0db1</h4>\n",
 "<p><span translate=no>_^_0_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span> </p>\n",
 "<p><span translate=no>_^_0_^_</span>, new samples get <span translate=no>_^_1_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span>, \u0db1\u0dc0 \u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd \u0dbd\u0db6\u0dcf <span translate=no>_^_1_^_</span> </p>\n",
 "<p>Arrays for buffer </p>\n": "<p>\u0db6\u0dc6\u0dbb\u0dba\u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0dbb\u0dcf </p>\n",
 "<p>Calculate <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d9c\u0dab\u0db1\u0dba\u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Calculate the size </p>\n": "<p>\u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba\u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Current max priority, <span translate=no>_^_0_^_</span>, to be assigned to new transitions </p>\n": "<p>\u0dc0\u0dad\u0dca\u0db8\u0db1\u0dca\u0d8b\u0db4\u0dbb\u0dd2\u0db8 \u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dcf\u0dc0\u0dba <span translate=no>_^_0_^_</span>,, \u0db1\u0dc0 \u0dc3\u0d82\u0d9a\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dad\u0dd2 \u0dc3\u0db3\u0dc4\u0dcf \u0db4\u0dd0\u0dc0\u0dbb\u0dd2\u0dba \u0dba\u0dd4\u0dad\u0dd4\u0dba </p>\n",
 "<p>Get next available slot </p>\n": "<p>\u0d8a\u0dc5\u0d9f\u0dbd\u0db6\u0dcf\u0d9c\u0dad \u0dc4\u0dd0\u0d9a\u0dd2 \u0dad\u0dc0\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get sample indexes </p>\n": "<p>\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0daf\u0dbb\u0dca\u0dc1\u0d9a \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get samples data </p>\n": "<p>\u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd\u0daf\u0dad\u0dca\u0dad \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get the index of the parent node </p>\n": "<p>\u0db8\u0dc0\u0dca\u0db1\u0ddd\u0da9\u0dba\u0dda \u0daf\u0dbb\u0dca\u0dc1\u0d9a\u0dba \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Go to left branch of the tree </p>\n": "<p>\u0d9c\u0dc3\u0dd9\u0dc4\u0dd2\u0dc0\u0db8\u0dca \u0dc1\u0dcf\u0d9b\u0dcf\u0dc0\u0da7 \u0dba\u0db1\u0dca\u0db1 </p>\n",
 "<p>If the sum of the left branch is higher than required sum </p>\n": "<p>\u0dc0\u0db8\u0dca\u0dc1\u0dcf\u0d9b\u0dcf\u0dc0\u0dda \u0d91\u0d9a\u0dad\u0dd4\u0dc0 \u0d85\u0dc0\u0dc1\u0dca\u0dba \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba\u0da7 \u0dc0\u0da9\u0dcf \u0dc0\u0dd0\u0da9\u0dd2 \u0db1\u0db8\u0dca </p>\n",
 "<p>Increment next available slot </p>\n": "<p>\u0d8a\u0dc5\u0d9f\u0dbd\u0db6\u0dcf \u0d9c\u0dad \u0dc4\u0dd0\u0d9a\u0dd2 \u0dad\u0dc0\u0dca \u0dc0\u0dd0\u0da9\u0dd2 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 </p>\n",
 "<p>Initialize samples </p>\n": "<p>\u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd\u0d86\u0dbb\u0db8\u0dca\u0db7 \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Leaf of the binary tree </p>\n": "<p>\u0daf\u0dca\u0dc0\u0dd2\u0db8\u0dba\u0d9c\u0dc3\u0dd9\u0dc4\u0dd2 \u0d9a\u0ddc\u0dc5 </p>\n",
 "<p>Maintain segment binary trees to take sum and find minimum over a range </p>\n": "<p>\u0db8\u0dd4\u0daf\u0dbd\u0d9a\u0dca\u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0da7 \u0dc3\u0dc4 \u0db4\u0dbb\u0dcf\u0dc3\u0dba\u0d9a\u0dca \u0db4\u0dd4\u0dbb\u0dcf \u0d85\u0dc0\u0db8 \u0dc3\u0ddc\u0dba\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0da7 \u0d9a\u0ddc\u0da7\u0dc3 \u0daf\u0dca\u0dc0\u0dd2\u0db8\u0dba \u0d9c\u0dc3\u0dca \u0db4\u0dc0\u0dad\u0dca\u0dc0\u0dcf </p>\n",
 "<p>Normalize by <span translate=no>_^_0_^_</span>,  which also cancels off the <span translate=no>_^_1_^_</span> term </p>\n": "<p>\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba\u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span>, \u0d91\u0db8\u0d9f\u0dd2\u0db1\u0dca <span translate=no>_^_1_^_</span> \u0db4\u0daf\u0dba \u0d85\u0dc0\u0dbd\u0d82\u0d9c\u0dd4 \u0dc0\u0dda </p>\n",
 "<p>Otherwise go to right branch and reduce the sum of left  branch from required sum </p>\n": "<p>\u0d91\u0dc3\u0dda\u0db1\u0ddc\u0db8\u0dd0\u0dad\u0dd2\u0db1\u0db8\u0dca \u0daf\u0d9a\u0dd4\u0dab\u0dd4 \u0dc1\u0dcf\u0d9b\u0dcf\u0dc0\u0da7 \u0d9c\u0ddc\u0dc3\u0dca \u0dc0\u0db8\u0dca \u0dc1\u0dcf\u0d9b\u0dcf\u0dc0\u0dda \u0d91\u0d9a\u0dad\u0dd4\u0dc0 \u0d85\u0dc0\u0dc1\u0dca\u0dba \u0db8\u0dd4\u0daf\u0dbd\u0dd2\u0db1\u0dca \u0d85\u0da9\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Set current max priority </p>\n": "<p>\u0dc0\u0dad\u0dca\u0db8\u0db1\u0dca\u0d8b\u0db4\u0dbb\u0dd2\u0db8 \u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dcf\u0dc0\u0dba \u0dc3\u0d9a\u0dc3\u0db1\u0dca\u0db1 </p>\n",
 "<p>Set the priority at the leaf </p>\n": "<p>\u0d9a\u0ddc\u0dc5\u0dba\u0dda\u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dcf\u0dc0\u0dba \u0dc3\u0d9a\u0dc3\u0db1\u0dca\u0db1 </p>\n",
 "<p>Size of the buffer </p>\n": "<p>\u0db6\u0dc6\u0dbb\u0dba\u0dda\u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba </p>\n",
 "<p>Start from the root </p>\n": "<p>\u0db8\u0dd6\u0dbd\u0dc3\u0dd2\u0da7 \u0d86\u0dbb\u0db8\u0dca\u0db7 \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>The root node keeps the minimum of all values </p>\n": "<p>\u0db8\u0dd6\u0dbd\u0db1\u0ddd\u0da9\u0dba \u0dc3\u0dd2\u0dba\u0dbd\u0dd4 \u0d85\u0d9c\u0dba\u0db1\u0dca\u0dc4\u0dd2 \u0d85\u0dc0\u0db8 \u0dc0\u0dc1\u0dba\u0dd9\u0db1\u0dca \u0dad\u0db6\u0dcf \u0d9c\u0db1\u0dd3 </p>\n",
 "<p>The root node keeps the sum of all values </p>\n": "<p>\u0db8\u0dd6\u0dbd\u0db1\u0ddd\u0da9\u0dba \u0dc3\u0dd2\u0dba\u0dbd\u0dd4 \u0d85\u0d9c\u0dba\u0db1\u0dca\u0dc4\u0dd2 \u0d91\u0d9a\u0dad\u0dd4\u0dc0 \u0dad\u0db6\u0dcf \u0d9c\u0db1\u0dd3 </p>\n",
 "<p>Update the trees </p>\n": "<p>\u0d9c\u0dc3\u0dca\u0dba\u0dcf\u0dc0\u0dad\u0dca\u0d9a\u0dcf\u0dbd\u0dd3\u0db1 \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Update the two segment trees for sum and minimum </p>\n": "<p>\u0d91\u0d9a\u0dad\u0dd4\u0dc0\u0dc3\u0dc4 \u0d85\u0dc0\u0db8 \u0dc0\u0dc1\u0dba\u0dd9\u0db1\u0dca \u0d9a\u0ddc\u0da7\u0dc3\u0dca \u0d9c\u0dc3\u0dca \u0daf\u0dd9\u0d9a \u0dba\u0dcf\u0dc0\u0dad\u0dca\u0d9a\u0dcf\u0dbd\u0dd3\u0db1 \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Update tree, by traversing along ancestors. Continue until the root of the tree. </p>\n": "<p>\u0db8\u0dd4\u0dad\u0dd4\u0db1\u0dca\u0db8\u0dd2\u0dad\u0dca\u0dad\u0db1\u0dca \u0d94\u0dc3\u0dca\u0dc3\u0dda \u0d9c\u0db8\u0db1\u0dca \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dd9\u0db1\u0dca \u0d9c\u0dc3 \u0dba\u0dcf\u0dc0\u0dad\u0dca\u0d9a\u0dcf\u0dbd\u0dd3\u0db1 \u0d9a\u0dbb\u0db1\u0dca\u0db1. \u0d9c\u0dc3\u0dda \u0db8\u0dd4\u0dbd \u0dad\u0dd9\u0d9a\u0dca \u0daf\u0dd2\u0d9c\u0da7\u0db8 \u0d9a\u0dbb\u0d9c\u0dd9\u0db1 \u0dba\u0db1\u0dca\u0db1. </p>\n",
 "<p>Value of the parent node is the minimum of it&#x27;s two children </p>\n": "<p>\u0db8\u0dc0\u0dcanode \u0d91\u0d9a\u0d9a\u0dca \u0db8\u0dad\u0db8 \u0d8a\u0da7 \u0d85\u0daf\u0dcf\u0dbd \u0dc0\u0da7\u0dd2\u0db1\u0dcf\u0d9a\u0db8 \u0d91\u0dba \u0daf\u0dbb\u0dd4\u0dc0\u0db1\u0dca \u0daf\u0dd9\u0daf\u0dd9\u0db1\u0dcf \u0d85\u0dc0\u0db8 \u0dc0\u0dda </p>\n",
 "<p>Value of the parent node is the sum of it&#x27;s two children </p>\n": "<p>\u0db8\u0dc0\u0dcanode \u0d91\u0d9a\u0d9a\u0dca \u0db8\u0dad\u0db8 \u0d8a\u0da7 \u0d85\u0daf\u0dcf\u0dbd \u0dc0\u0da7\u0dd2\u0db1\u0dcf\u0d9a\u0db8 \u0d91\u0dba \u0daf\u0dbb\u0dd4\u0dc0\u0db1\u0dca \u0daf\u0dd9\u0daf\u0dd9\u0db1\u0dcf \u0d91\u0d9a\u0dad\u0dd4\u0dc0 </p>\n",
 "<p>We are at the leaf node. Subtract the capacity by the index in the tree to get the index of actual value </p>\n": "<p>\u0d85\u0db4\u0dd2\u0d9a\u0ddc\u0dc5 node \u0d91\u0d9a\u0d9a\u0dca \u0db8\u0dad\u0db8 \u0d8a\u0da7 \u0d85\u0daf\u0dcf\u0dbd \u0dc0\u0dda. \u0dc3\u0dd0\u0db6\u0dd1 \u0dc0\u0da7\u0dd2\u0db1\u0dcf\u0d9a\u0db8\u0dda \u0daf\u0dbb\u0dca\u0dc1\u0d9a\u0dba \u0dbd\u0db6\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0d9c\u0dc3\u0dd9\u0dc4\u0dd2 \u0daf\u0dbb\u0dca\u0dc1\u0d9a\u0dba \u0db8\u0d9c\u0dd2\u0db1\u0dca \u0db0\u0dcf\u0dbb\u0dd2\u0dad\u0dcf\u0dc0 \u0d85\u0da9\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 </p>\n",
 "<p>We use a power of <span translate=no>_^_0_^_</span> for capacity because it simplifies the code and debugging </p>\n": "<p>\u0d85\u0db4\u0dd2\u0db0\u0dcf\u0dbb\u0dd2\u0dad\u0dcf\u0dc0 <span translate=no>_^_0_^_</span> \u0dc3\u0db3\u0dc4\u0dcf \u0db6\u0dbd\u0dba\u0d9a\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db1\u0dca\u0db1\u0dda \u0d91\u0dba \u0d9a\u0dda\u0dad\u0dba \u0dc3\u0dc4 \u0db1\u0dd2\u0daf\u0ddc\u0dc3\u0dca\u0d9a\u0dbb\u0dab\u0dba \u0dc3\u0dbb\u0dbd \u0d9a\u0dbb\u0db1 \u0db6\u0dd0\u0dc0\u0dd2\u0db1\u0dd2 </p>\n",
 "<p>We use cyclic buffers to store data, and <span translate=no>_^_0_^_</span> keeps the index of the next empty slot </p>\n": "<p>\u0daf\u0dad\u0dca\u0dad\u0d9c\u0db6\u0da9\u0dcf \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0db4\u0dd2 \u0da0\u0d9a\u0dca\u0dbb\u0dd3\u0dba \u0db6\u0dc6\u0dbb\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db1 \u0d85\u0dad\u0dbb \u0d8a\u0dc5\u0d9f \u0dc4\u0dd2\u0dc3\u0dca \u0dad\u0da7\u0dca\u0da7\u0dd4\u0dc0\u0dda \u0daf\u0dbb\u0dca\u0dc1\u0d9a\u0dba <span translate=no>_^_0_^_</span> \u0dad\u0db6\u0dcf \u0d9c\u0db1\u0dd2\u0db8\u0dd4 </p>\n",
 "<p>store in the queue </p>\n": "<p>\u0db4\u0ddd\u0dbd\u0dd2\u0db8\u0dda\u0d9c\u0db6\u0da9\u0dcf </p>\n",
 "Annotated implementation of prioritized experience replay using a binary segment tree.": "\u0daf\u0dca\u0dc0\u0dd2\u0db8\u0dba \u0d85\u0d82\u0dc1 \u0d9c\u0dc3\u0d9a\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db8\u0dd2\u0db1\u0dca \u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dcf \u0d85\u0dad\u0dca\u0daf\u0dd0\u0d9a\u0dd3\u0db8\u0dca \u0db1\u0dd0\u0dc0\u0dad \u0db0\u0dcf\u0dc0\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8.",
 "Prioritized Experience Replay Buffer": "\u0db4\u0dca\u0dbb\u0db8\u0dd4\u0d9b\u0dad\u0dcf \u0d85\u0dad\u0dca\u0daf\u0dd0\u0d9a\u0dd3\u0db8\u0dca \u0db1\u0dd0\u0dc0\u0dad \u0db0\u0dcf\u0dc0\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0db6\u0dc6\u0dbb\u0dba"
}