{
 "<h1>Evaluate k-nearest neighbor language model</h1>\n": "<h1>k-\u6700\u8fd1\u508d\u8a00\u8a9e\u30e2\u30c7\u30eb\u306e\u8a55\u4fa1</h1>\n",
 "<h2><span translate=no>_^_0_^_</span>-NN to get <span translate=no>_^_1_^_</span></h2>\n<p>Here we refer to <span translate=no>_^_2_^_</span> as queries, <span translate=no>_^_3_^_</span> as keys and <span translate=no>_^_4_^_</span> as values.</p>\n": "<h2><span translate=no>_^_0_^_</span>-NN \u3067\u53d6\u5f97 <span translate=no>_^_1_^_</span></h2>\n<p>\u3053\u3053\u3067\u306f\u3001\u30af\u30a8\u30ea\u3001<span translate=no>_^_3_^_</span>\u30ad\u30fc\u3001<span translate=no>_^_4_^_</span>\u5024\u3068\u547c\u3073\u307e\u3059\u3002<span translate=no>_^_2_^_</span></p>\n",
 "<h2>Calculate validation loss</h2>\n<p>We calculate the validation loss of the combined on <span translate=no>_^_0_^_</span>-NN prediction and transformer prediction. The weight given to the <span translate=no>_^_1_^_</span>-NN model is given by <span translate=no>_^_2_^_</span>. It&#x27;s a list of weights and we calculate the validation loss for each.</p>\n": "<h2>\u691c\u8a3c\u640d\u5931\u306e\u8a08\u7b97</h2>\n<p><span translate=no>_^_0_^_</span>-NN \u4e88\u6e2c\u3068\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u4e88\u6e2c\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u5834\u5408\u306e\u691c\u8a3c\u640d\u5931\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002<span translate=no>_^_1_^_</span>-NN \u30e2\u30c7\u30eb\u306b\u4e0e\u3048\u3089\u308c\u308b\u91cd\u307f\u306f\u3067\u4e0e\u3048\u3089\u308c\u307e\u3059\u3002<span translate=no>_^_2_^_</span>\u3053\u308c\u306f\u91cd\u307f\u306e\u30ea\u30b9\u30c8\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u691c\u8a3c\u640d\u5931\u3092\u8a08\u7b97\u3057\u307e\u3059</p>\u3002\n",
 "<h2>Load the index</h2>\n": "<h2>\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8aad\u307f\u8fbc\u3080</h2>\n",
 "<p>Calculate scores for each of <span translate=no>_^_0_^_</span>. </p>\n": "<p>\u305d\u308c\u305e\u308c\u306e\u30b9\u30b3\u30a2\u3092\u8a08\u7b97\u3057\u307e\u3059<span translate=no>_^_0_^_</span>\u3002</p>\n",
 "<p>Calculate the loss </p>\n": "<p>\u640d\u5931\u306e\u8a08\u7b97</p>\n",
 "<p>Dimensions of <span translate=no>_^_0_^_</span> </p>\n": "<p>\u306e\u5bf8\u6cd5 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Evaluate validation loss </p>\n": "<p>\u691c\u8a3c\u640d\u5931\u306e\u8a55\u4fa1</p>\n",
 "<p>Find 10 nearest neighbors of <span translate=no>_^_0_^_</span> among <span translate=no>_^_1_^_</span>. <span translate=no>_^_2_^_</span> is the distance given by FAISS and <span translate=no>_^_3_^_</span>, <span translate=no>_^_4_^_</span> is the index of it in <span translate=no>_^_5_^_</span>. </p>\n": "<p><span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>\u305d\u306e\u4e2d\u304b\u3089\u6700\u3082\u8fd1\u3044\u96a3\u4eba\u309210\u4eba\u898b\u3064\u3051\u308b\u3002<span translate=no>_^_2_^_</span>\u306fFAISS\u3067\u4e0e\u3048\u3089\u308c\u305f\u8ddd\u96e2\u3067<span translate=no>_^_3_^_</span>\u3001<span translate=no>_^_4_^_</span>\u306f\u305d\u306e\u8ddd\u96e2\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067\u3059</p>\u3002<span translate=no>_^_5_^_</span>\n",
 "<p>Flatten the <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> dimensions of queries </p>\n": "<p><span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>\u30af\u30a8\u30ea\u306e\u6b21\u5143\u3068\u6b21\u5143\u3092\u5e73\u5766\u5316</p>\n",
 "<p>Get <span translate=no>_^_0_^_</span> </p>\n": "<p>\u53d6\u5f97 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Get <span translate=no>_^_0_^_</span>-NN predictions </p>\n": "<p><span translate=no>_^_0_^_</span>-NN \u4e88\u6e2c\u3092\u53d6\u5f97</p>\n",
 "<p>Get data and target labels </p>\n": "<p>\u30c7\u30fc\u30bf\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u30e9\u30d9\u30eb\u3092\u53d6\u5f97</p>\n",
 "<p>Get the dot-product, or cosine similarity </p>\n": "<p>\u70b9\u7a4d\u307e\u305f\u306f\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u3092\u6c42\u3081\u308b</p>\n",
 "<p>Iterate through validation data </p>\n": "<p>\u691c\u8a3c\u30c7\u30fc\u30bf\u3092\u7e70\u308a\u8fd4\u3057\u51e6\u7406</p>\n",
 "<p>List of losses for each <span translate=no>_^_0_^_</span> </p>\n": "<p>\u305d\u308c\u305e\u308c\u306e\u640d\u5931\u306e\u30ea\u30b9\u30c8 <span translate=no>_^_0_^_</span></p>\n",
 "<p>List of weights given to <span translate=no>_^_0_^_</span>-NN prediction. We will evaluate the validation loss for each of the weights </p>\n": "<p><span translate=no>_^_0_^_</span>-NN \u4e88\u6e2c\u306b\u4e0e\u3048\u3089\u308c\u308b\u91cd\u307f\u306e\u30ea\u30b9\u30c8\u3002\u305d\u308c\u305e\u308c\u306e\u91cd\u307f\u306e\u691c\u8a3c\u640d\u5931\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002</p>\n",
 "<p>Load FAISS index </p>\n": "<p>FAISS \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u30ed\u30fc\u30c9</p>\n",
 "<p>Load index </p>\n": "<p>\u30ed\u30fc\u30c9\u30a4\u30f3\u30c7\u30c3\u30af\u30b9</p>\n",
 "<p>Load memory mapped numpy arrays </p>\n": "<p>\u30e1\u30e2\u30ea\u30de\u30c3\u30d7\u3055\u308c\u305f numpy \u914d\u5217\u3092\u30ed\u30fc\u30c9</p>\n",
 "<p>Load the experiment. Replace the run uuid with you run uuid from <a href=\"train_model.html\">training the model</a>. </p>\n": "<p>\u5b9f\u9a13\u3092\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002run UUID <a href=\"train_model.html\">\u3092\u30e2\u30c7\u30eb\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u304b\u3089\u53d6\u5f97\u3057\u305frun uuid \u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002</a></p>\n",
 "<p>Normalize <span translate=no>_^_0_^_</span> </p>\n": "<p>\u30ce\u30fc\u30de\u30e9\u30a4\u30ba <span translate=no>_^_0_^_</span></p>\n",
 "<p>Number of contexts; i.e. number of tokens in the training data minus one. <span translate=no>_^_0_^_</span> for <span translate=no>_^_1_^_</span> </p>\n": "<p>\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u6570\u3002\u3064\u307e\u308a\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u5185\u306e\u30c8\u30fc\u30af\u30f3\u6570\u304b\u3089 1 \u3092\u5f15\u3044\u305f\u6570\u3067\u3059\u3002<span translate=no>_^_0_^_</span></p>\u306b\u3068\u3063\u3066 <span translate=no>_^_1_^_</span>\n",
 "<p>Number of samples </p>\n": "<p>\u30b5\u30f3\u30d7\u30eb\u6570</p>\n",
 "<p>Number of samples in each batch </p>\n": "<p>\u5404\u30d0\u30c3\u30c1\u306e\u30b5\u30f3\u30d7\u30eb\u6570</p>\n",
 "<p>Output the losses for each of <span translate=no>_^_0_^_</span>. </p>\n": "<p>\u305d\u308c\u305e\u308c\u306e\u640d\u5931\u3092\u51fa\u529b\u3057\u307e\u3059<span translate=no>_^_0_^_</span>\u3002</p>\n",
 "<p>Reshape the logits </p>\n": "<p>\u30ed\u30b8\u30c3\u30c8\u306e\u5f62\u72b6\u3092\u5909\u3048\u308b</p>\n",
 "<p>Run the model and get predictions <span translate=no>_^_0_^_</span> </p>\n": "<p>\u30e2\u30c7\u30eb\u3092\u5b9f\u884c\u3057\u3066\u4e88\u6e2c\u3092\u53d6\u5f97 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Save shape of queries to reshape results </p>\n": "<p>\u30af\u30a8\u30ea\u306e\u5f62\u72b6\u3092\u4fdd\u5b58\u3057\u3066\u7d50\u679c\u306e\u5f62\u72b6\u3092\u5909\u3048\u308b</p>\n",
 "<p>Scatter and accumulate token logits based on the nearest neighbors </p>\n": "<p>\u6700\u3082\u8fd1\u3044\u96a3\u4eba\u306b\u57fa\u3065\u3044\u3066\u30c8\u30fc\u30af\u30f3\u30ed\u30b8\u30c3\u30c8\u3092\u5206\u6563\u3057\u3066\u84c4\u7a4d\u3059\u308b</p>\n",
 "<p>Set model to evaluation mode </p>\n": "<p>\u30e2\u30c7\u30eb\u3092\u8a55\u4fa1\u30e2\u30fc\u30c9\u306b\u8a2d\u5b9a</p>\n",
 "<p>Set number of cells to probe </p>\n": "<p>\u30d7\u30ed\u30fc\u30d6\u3059\u308b\u30bb\u30eb\u306e\u6570\u3092\u8a2d\u5b9a</p>\n",
 "<p>This is to calculate only the loss for <span translate=no>_^_0_^_</span> tokens. This is important because the first predictions (along the sequence) of transformer model has very few past tokens to look at. </p>\n": "<p><span translate=no>_^_0_^_</span>\u3053\u308c\u306f\u30c8\u30fc\u30af\u30f3\u306e\u640d\u5931\u306e\u307f\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3059\u3002\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u30e2\u30c7\u30eb\u306e\uff08\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u6cbf\u3063\u305f\uff09\u6700\u521d\u306e\u4e88\u6e2c\u3067\u306f\u3001\u8abf\u3079\u308b\u3079\u304d\u904e\u53bb\u306e\u30c8\u30fc\u30af\u30f3\u304c\u307b\u3068\u3093\u3069\u306a\u3044\u305f\u3081\u3001\u3053\u308c\u306f\u91cd\u8981\u3067\u3059</p>\u3002\n",
 "<p>Token-wise logits </p>\n": "<p>\u30c8\u30fc\u30af\u30f3\u3054\u3068\u306e\u30ed\u30b8\u30c3\u30c8</p>\n",
 "<p>Training data loader </p>\n": "<p>\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u30ed\u30fc\u30c0\u30fc</p>\n",
 "<p>We are going to calculate the cosine similarity between normalized vectors </p>\n": "<p>\u6b63\u898f\u5316\u3055\u308c\u305f\u30d9\u30af\u30c8\u30eb\u9593\u306e\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97\u3057\u307e\u3059</p>\n",
 "Evaluate k-nearest neighbor language model": "k-\u6700\u8fd1\u508d\u8a00\u8a9e\u30e2\u30c7\u30eb\u306e\u8a55\u4fa1",
 "This runs the kNN model and merges the kNN results with transformer output to achieve better results than just using the transformer.": "\u3053\u308c\u306b\u3088\u308a kNN \u30e2\u30c7\u30eb\u304c\u5b9f\u884c\u3055\u308c\u3001kNN \u306e\u7d50\u679c\u304c\u30c8\u30e9\u30f3\u30b9\u51fa\u529b\u3068\u30de\u30fc\u30b8\u3055\u308c\u308b\u305f\u3081\u3001\u30c8\u30e9\u30f3\u30b9\u3060\u3051\u3092\u4f7f\u7528\u3059\u308b\u3088\u308a\u3082\u512a\u308c\u305f\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3059\u3002"
}