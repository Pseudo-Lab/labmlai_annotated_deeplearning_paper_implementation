{
 "<h1>Pay Attention to MLPs (gMLP)</h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of the paper <a href=\"https://papers.labml.ai/paper/2105.08050\">Pay Attention to MLPs</a>.</p>\n<p>This paper introduces a Multilayer Perceptron (MLP) based architecture with gating, which they name <strong>gMLP</strong>. It consists of a stack of <span translate=no>_^_0_^_</span> <em>gMLP</em> blocks.</p>\n<p>Here is <a href=\"experiment.html\">the training code</a> for a gMLP model based autoregressive model.</p>\n": "<h1>\u6ce8\u610f MLP (GmLP)</h1>\n<p>\u8fd9\u662f P <a href=\"https://pytorch.org\">yTorch</a> \u5bf9\u300a<a href=\"https://papers.labml.ai/paper/2105.08050\">\u6ce8\u610f MLP\u300b\u4e00\u6587\u7684</a>\u5b9e\u73b0\u3002</p>\n<p>\u672c\u6587\u4ecb\u7ecd\u4e86\u4e00\u79cd\u57fa\u4e8e\u591a\u5c42\u611f\u77e5\u5668\uff08MLP\uff09\u7684\u5e26\u6709\u95e8\u63a7\u7684\u67b6\u6784\uff0c\u4ed6\u4eec\u5c06\u5176\u547d\u540d\u4e3a <strong>gmLP</strong>\u3002\u5b83\u7531\u4e00\u5806<span translate=no>_^_0_^_</span> <em>gmLP</em> \u5757\u7ec4\u6210\u3002</p>\n<p>\u8fd9\u662f\u57fa<a href=\"experiment.html\">\u4e8e GmLP \u6a21\u578b\u7684\u81ea\u56de\u5f52\u6a21\u578b\u7684\u8bad\u7ec3\u4ee3\u7801</a>\u3002</p>\n",
 "<h2>Spatial Gating Unit</h2>\n<p><span translate=no>_^_0_^_</span></p>\n<p>where <span translate=no>_^_1_^_</span> is a linear transformation along the sequence dimension, and <span translate=no>_^_2_^_</span> is element-wise multiplication. <span translate=no>_^_3_^_</span> is split into to parts of equal size <span translate=no>_^_4_^_</span> and <span translate=no>_^_5_^_</span> along the channel dimension (embedding dimension).</p>\n": "<h2>\u7a7a\u95f4\u95e8\u63a7\u5355\u5143</h2>\n<p><span translate=no>_^_0_^_</span></p>\n<p>\u5176\u4e2d\uff0c<span translate=no>_^_1_^_</span>\u662f\u6cbf\u5e8f\u5217\u7ef4\u5ea6\u7684\u7ebf\u6027\u53d8\u6362\uff0c<span translate=no>_^_2_^_</span>\u662f\u9010\u5143\u7d20\u4e58\u6cd5\u3002<span translate=no>_^_3_^_</span>\u88ab\u5206\u6210\u4e24\u4e2a\u5927\u5c0f\u76f8\u7b49\u7684\u90e8\u5206\uff0c<span translate=no>_^_4_^_</span>\u5e76<span translate=no>_^_5_^_</span>\u6cbf\u7740\u901a\u9053\u5c3a\u5bf8\uff08\u5d4c\u5165\u7ef4\u5ea6\uff09\u3002</p>\n",
 "<h2>gMLP Block</h2>\n<p>Each block does the following transformations to input embeddings <span translate=no>_^_0_^_</span> where <span translate=no>_^_1_^_</span> is the sequence length and <span translate=no>_^_2_^_</span> is the dimensionality of the embeddings:</p>\n<span translate=no>_^_3_^_</span><p>where <span translate=no>_^_4_^_</span> and <span translate=no>_^_5_^_</span> are learnable projection weights. <span translate=no>_^_6_^_</span> is the Spacial Gating Unit defined below. Output dimensionality of <span translate=no>_^_7_^_</span> will be half of <span translate=no>_^_8_^_</span>. <span translate=no>_^_9_^_</span> is an activation function such as <a href=\"https://pytorch.org/docs/stable/generated/torch.nn.GELU.html\">GeLU</a>.</p>\n": "<h2>gmLP Block</h2>\n<p>\u6bcf\u4e2a\u6a21\u5757\u5bf9\u8f93\u5165\u5d4c\u5165\u8fdb\u884c\u4ee5\u4e0b\u8f6c\u6362\uff0c<span translate=no>_^_0_^_</span>\u5176\u4e2d<span translate=no>_^_1_^_</span>\u662f\u5e8f\u5217\u957f\u5ea6\uff0c<span translate=no>_^_2_^_</span>\u662f\u5d4c\u5165\u7684\u7ef4\u5ea6\uff1a</p>\n<span translate=no>_^_3_^_</span><p>\u5176\u4e2d<span translate=no>_^_4_^_</span>\u548c<span translate=no>_^_5_^_</span>\u662f\u53ef\u5b66\u4e60\u7684\u6295\u5f71\u6743\u91cd\u3002<span translate=no>_^_6_^_</span>\u662f\u4e0b\u9762\u5b9a\u4e49\u7684\u7a7a\u95f4\u95e8\u63a7\u5355\u5143\u3002\u7684\u8f93\u51fa\u7ef4\u5ea6<span translate=no>_^_7_^_</span>\u5c06\u4e3a\u7684\u4e00\u534a<span translate=no>_^_8_^_</span>\u3002<span translate=no>_^_9_^_</span>\u662f\u4e00\u4e2a\u6fc0\u6d3b\u51fd\u6570\uff0c\u6bd4\u5982 <a href=\"https://pytorch.org/docs/stable/generated/torch.nn.GELU.html\">GeLU</a>\u3002</p>\n",
 "<p><span translate=no>_^_0_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span></p>\n",
 "<p><span translate=no>_^_0_^_</span> has shape <span translate=no>_^_1_^_</span>. The batch dimension should be of size <span translate=no>_^_2_^_</span> because this implementation supports only same mask for all samples in the batch. </p>\n": "<p><span translate=no>_^_0_^_</span>\u6709\u5f62\u72b6<span translate=no>_^_1_^_</span>\u3002\u6279\u6b21\u7ef4\u5ea6\u5e94\u4e3a size\uff0c<span translate=no>_^_2_^_</span>\u56e0\u4e3a\u6b64\u5b9e\u73b0\u4ec5\u652f\u6301\u6279\u6b21\u4e2d\u6240\u6709\u6837\u672c\u7684\u76f8\u540c\u63a9\u7801\u3002</p>\n",
 "<p>Activation function <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6fc0\u6d3b\u529f\u80fd<span translate=no>_^_0_^_</span></p>\n",
 "<p>Add the shortcut connection </p>\n": "<p>\u6dfb\u52a0\u5feb\u6377\u65b9\u5f0f\u8fde\u63a5</p>\n",
 "<p>Apply mask to the weights.</p>\n<p>If <span translate=no>_^_0_^_</span> is <span translate=no>_^_1_^_</span> then <span translate=no>_^_2_^_</span> will not get any information from token <span translate=no>_^_3_^_</span>. </p>\n": "<p>\u5c06\u906e\u7f69\u5e94\u7528\u4e8e\u6743\u91cd\u3002</p>\n<p>\u5982\u679c<span translate=no>_^_0_^_</span>\u662f<span translate=no>_^_1_^_</span>\uff0c\u5219<span translate=no>_^_2_^_</span>\u4e0d\u4f1a\u4ece\u4ee4\u724c\u4e2d\u83b7\u53d6\u4efb\u4f55\u4fe1\u606f<span translate=no>_^_3_^_</span>\u3002</p>\n",
 "<p>Check mask </p>\n": "<p>\u68c0\u67e5\u53e3\u7f69</p>\n",
 "<p>Embedding size (required by <a href=\"../models.html#Encoder\">Encoder</a>. We use the encoder module from transformer architecture and plug <em>gMLP</em> block as a replacement for the <a href=\"../models.html#Encoder\">Transformer Layer</a>. </p>\n": "<p>\u5d4c\u5165\u5927\u5c0f\uff08\u7f16<a href=\"../models.html#Encoder\">\u7801\u5668</a>\u9700\u8981\u3002\u6211\u4eec\u4f7f\u7528\u53d8\u538b\u5668\u67b6\u6784\u4e2d\u7684\u7f16\u7801\u5668\u6a21\u5757\uff0c\u5e76\u63d2\u5165 <em>GmLP</em> \u6a21\u5757\u4f5c\u4e3a<a href=\"../models.html#Encoder\">\u53d8\u538b\u5668\u5c42</a>\u7684\u66ff\u4ee3\u54c1\u3002</p>\n",
 "<p>Final projection <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6700\u7ec8\u6295\u5f71<span translate=no>_^_0_^_</span></p>\n",
 "<p>Get sequence length </p>\n": "<p>\u83b7\u53d6\u5e8f\u5217\u957f\u5ea6</p>\n",
 "<p>Get the weight matrix; truncate if larger than <span translate=no>_^_0_^_</span> </p>\n": "<p>\u83b7\u53d6\u6743\u91cd\u77e9\u9635\uff1b\u5982\u679c\u5927\u4e8e<span translate=no>_^_0_^_</span></p>\n",
 "<p>Here we only support the same mask for all samples </p>\n": "<p>\u8fd9\u91cc\u6211\u4eec\u53ea\u652f\u6301\u6240\u6709\u6837\u672c\u4f7f\u7528\u76f8\u540c\u7684\u63a9\u7801</p>\n",
 "<p>Keep a copy for shortcut connection </p>\n": "<p>\u4fdd\u7559\u4e00\u4efd\u7528\u4e8e\u5feb\u6377\u65b9\u5f0f\u8fde\u63a5\u7684\u526f\u672c</p>\n",
 "<p>Normalization layer before applying <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5e94\u7528\u4e4b\u524d\u7684\u6807\u51c6\u5316\u5c42<span translate=no>_^_0_^_</span></p>\n",
 "<p>Normalization layer fro Pre-Norm </p>\n": "<p>Pre-Norm \u7684\u6807\u51c6\u5316\u5c42</p>\n",
 "<p>Normalize <span translate=no>_^_0_^_</span> </p>\n": "<p>\u89c4\u8303\u5316<span translate=no>_^_0_^_</span></p>\n",
 "<p>Normalize <span translate=no>_^_0_^_</span> before <span translate=no>_^_1_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span>\u4e4b\u524d\u8fdb\u884c\u6807\u51c6\u5316<span translate=no>_^_1_^_</span></p>\n",
 "<p>Projection and activation <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6295\u5c04\u548c\u6fc0\u6d3b<span translate=no>_^_0_^_</span></p>\n",
 "<p>Projection layer for <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6295\u5f71\u5c42<span translate=no>_^_0_^_</span></p>\n",
 "<p>Remove the batch dimension </p>\n": "<p>\u79fb\u9664\u6279\u91cf\u7ef4\u5ea6</p>\n",
 "<p>Spacial Gating Unit <span translate=no>_^_0_^_</span> </p>\n": "<p>\u7a7a\u95f4\u95e8\u63a7\u5355\u5143<span translate=no>_^_0_^_</span></p>\n",
 "<p>Split <span translate=no>_^_0_^_</span> into <span translate=no>_^_1_^_</span> and <span translate=no>_^_2_^_</span> </p>\n": "<p>\u62c6<span translate=no>_^_0_^_</span>\u5206\u4e3a<span translate=no>_^_1_^_</span>\u548c<span translate=no>_^_2_^_</span></p>\n",
 "<p>Weight <span translate=no>_^_0_^_</span> in <span translate=no>_^_1_^_</span>.</p>\n<p>The paper notes that it&#x27;s important to initialize weights to small values and the bias to <span translate=no>_^_2_^_</span>, so that during the initial training <span translate=no>_^_3_^_</span> is close to identity (apart from the split). </p>\n": "<p>\u91cd\u91cf<span translate=no>_^_0_^_</span>\u5728<span translate=no>_^_1_^_</span>\u3002</p>\n<p>\u672c\u6587\u6307\u51fa\uff0c\u91cd\u8981\u7684\u662f\u5c06\u6743\u91cd\u521d\u59cb\u5316\u4e3a\u8f83\u5c0f\u7684\u503c\uff0c\u5e76\u5c06\u504f\u5dee\u521d\u59cb\u5316<span translate=no>_^_3_^_</span>\u4e3a<span translate=no>_^_2_^_</span>\uff0c\u8fd9\u6837\u5728\u521d\u59cb\u8bad\u7ec3\u671f\u95f4\u5c31\u63a5\u8fd1\u8eab\u4efd\uff08\u62c6\u5206\u9664\u5916\uff09\u3002</p>\n",
 "<p>Weight <span translate=no>_^_0_^_</span> in <span translate=no>_^_1_^_</span></p>\n<p>The paper notes that it&#x27;s important to initialize bias to <span translate=no>_^_2_^_</span>. </p>\n": "<p>\u91cd\u91cf<span translate=no>_^_0_^_</span>\u5728<span translate=no>_^_1_^_</span></p>\n<p>\u672c\u6587\u6307\u51fa\uff0c\u5c06\u504f\u89c1\u521d\u59cb\u5316\u4e3a<span translate=no>_^_2_^_</span>.</p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the dimensionality (<span translate=no>_^_1_^_</span>) of <span translate=no>_^_2_^_</span> </li>\n<li><span translate=no>_^_3_^_</span> is the dimensionality of <span translate=no>_^_4_^_</span> </li>\n<li><span translate=no>_^_5_^_</span> is the length of the token sequence (<span translate=no>_^_6_^_</span>)</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u7684\u7ef4\u5ea6 (<span translate=no>_^_1_^_</span>)<span translate=no>_^_2_^_</span></li>\n<li><span translate=no>_^_3_^_</span>\u662f\u7684\u7ef4\u5ea6<span translate=no>_^_4_^_</span></li>\n<li><span translate=no>_^_5_^_</span>\u662f\u4ee4\u724c\u5e8f\u5217\u7684\u957f\u5ea6 (<span translate=no>_^_6_^_</span>)</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the dimensionality of <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span> is the sequence length</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u7684\u7ef4\u5ea6<span translate=no>_^_1_^_</span></li>\n<li><span translate=no>_^_2_^_</span>\u662f\u5e8f\u5217\u957f\u5ea6</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the input <span translate=no>_^_1_^_</span> of shape <span translate=no>_^_2_^_</span> </li>\n<li><span translate=no>_^_3_^_</span> is is a boolean mask of shape <span translate=no>_^_4_^_</span> that controls the visibility of tokens  among each other. The last dimension of size <span translate=no>_^_5_^_</span> is the batch, which we have in other transformer  implementations and was left for compatibility.</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u5f62\u72b6<span translate=no>_^_1_^_</span>\u7684\u8f93\u5165<span translate=no>_^_2_^_</span></li>\n<li><span translate=no>_^_3_^_</span>is \u662f\u5f62\u72b6\u7684\u5e03\u5c14\u63a9\u7801<span translate=no>_^_4_^_</span>\uff0c\u7528\u4e8e\u63a7\u5236\u6807\u8bb0\u5728\u5f7c\u6b64\u4e4b\u95f4\u7684\u53ef\u89c1\u6027\u3002\u5c3a\u5bf8\u7684\u6700\u540e\u4e00\u4e2a\u7ef4\u5ea6<span translate=no>_^_5_^_</span>\u662f\u6279\u6b21\uff0c\u8fd9\u662f\u6211\u4eec\u5728\u5176\u4ed6\u53d8\u538b\u5668\u5b9e\u73b0\u4e2d\u4f7f\u7528\u7684\uff0c\u4e3a\u4e86\u517c\u5bb9\u6027\u800c\u7559\u4e0b\u3002</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the input embedding tensor <span translate=no>_^_1_^_</span> of shape <span translate=no>_^_2_^_</span> </li>\n<li><span translate=no>_^_3_^_</span> is a boolean mask of shape <span translate=no>_^_4_^_</span> that controls the visibility of tokens  among each other.</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u5f62\u72b6\u7684\u8f93\u5165\u5d4c\u5165<span translate=no>_^_1_^_</span>\u5f20\u91cf<span translate=no>_^_2_^_</span></li>\n<li><span translate=no>_^_3_^_</span>\u662f\u5f62\u72b6\u7684\u5e03\u5c14\u63a9\u7801<span translate=no>_^_4_^_</span>\uff0c\u7528\u4e8e\u63a7\u5236\u6807\u8bb0\u5728\u5f7c\u6b64\u4e4b\u95f4\u7684\u53ef\u89c1\u6027\u3002</li></ul>\n",
 "Pay Attention to MLPs (gMLP)": "\u6ce8\u610f MLP (gMLP)",
 "This is an annotated implementation/tutorial of Pay Attention to MLPs (gMLP) in PyTorch.": "\u8fd9\u662f PyTorch \u4e2d\u6ce8\u610f MLP\uff08GmLP\uff09\u7684\u5e26\u6ce8\u91ca\u7684\u5b9e\u73b0/\u6559\u7a0b\u3002"
}