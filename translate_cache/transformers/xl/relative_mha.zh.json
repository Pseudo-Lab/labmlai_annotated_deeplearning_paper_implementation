{
 "<h1>Relative Multi-Headed Attention</h1>\n<p>This is an implementation of relative multi-headed attention from paper <a href=\"https://papers.labml.ai/paper/1901.02860\">Transformer-XL: Attentive Language Models Beyond a Fixed-Length Context</a> in <a href=\"https://pytorch.org\">PyTorch</a>.</p>\n": "<h1>\u76f8\u5bf9\u591a\u5934\u6ce8\u610f\u529b</h1>\n<p>\u8fd9\u662f paper Transfor <a href=\"https://papers.labml.ai/paper/1901.02860\">mer-XL\uff1a<a href=\"https://pytorch.org\">PyTorch</a> \u4e2d\u56fa\u5b9a\u957f\u5ea6\u4e0a\u4e0b\u6587\u4e4b\u5916\u7684\u7ec6\u5fc3\u8bed\u8a00\u6a21\u578b</a>\u4e2d\u76f8\u5bf9\u591a\u5934\u5173\u6ce8\u7684\u5b9e\u73b0\u3002</p>\n",
 "<h2>Relative Multi-Head Attention Module</h2>\n<p>We override <a href=\"mha.html\">Multi-Head Attention</a> module so we only need to write the <span translate=no>_^_0_^_</span> method.</p>\n": "<h2>\u76f8\u5bf9\u591a\u5934\u6ce8\u610f\u6a21\u5757</h2>\n<p>\u6211\u4eec\u91cd\u5199\u4e86<a href=\"mha.html\">\u591a\u5934\u6ce8\u610f</a>\u6a21\u5757\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u7f16\u5199\u8be5<span translate=no>_^_0_^_</span>\u65b9\u6cd5\u5373\u53ef\u3002</p>\n",
 "<h3>Get relative attention scores</h3>\n<p>With absolute attention</p>\n<span translate=no>_^_0_^_</span><p>where <span translate=no>_^_1_^_</span>, are linear transformations of  original embeddings <span translate=no>_^_2_^_</span>  and <span translate=no>_^_3_^_</span> are linear transformations of  absolute positional encodings <span translate=no>_^_4_^_</span>.</p>\n<p>They reason out that the attention to a given key should be the same regardless of the position of query. Hence replace <span translate=no>_^_5_^_</span> with a constant <span translate=no>_^_6_^_</span>.</p>\n<p>For the second and third terms relative positional encodings are introduced. So <span translate=no>_^_7_^_</span> is replaced with <span translate=no>_^_8_^_</span> and <span translate=no>_^_9_^_</span> with <span translate=no>_^_10_^_</span>.</p>\n<span translate=no>_^_11_^_</span>": "<h3>\u83b7\u53d6\u76f8\u5bf9\u6ce8\u610f\u529b\u5206\u6570</h3>\n<p>\u7edd\u5bf9\u5173\u6ce8</p>\n<span translate=no>_^_0_^_</span><p>\u5176\u4e2d<span translate=no>_^_1_^_</span>\uff0c\u662f\u539f\u59cb\u5d4c\u5165\u7684\u7ebf\u6027\u53d8\u6362<span translate=no>_^_2_^_</span>\uff0c<span translate=no>_^_3_^_</span>\u662f\u7edd\u5bf9\u4f4d\u7f6e\u7f16\u7801\u7684\u7ebf\u6027\u53d8\u6362<span translate=no>_^_4_^_</span>\u3002</p>\n<p>\u4ed6\u4eec\u8ba4\u4e3a\uff0c\u65e0\u8bba\u67e5\u8be2\u7684\u4f4d\u7f6e\u5982\u4f55\uff0c\u5bf9\u7ed9\u5b9a\u952e\u7684\u5173\u6ce8\u90fd\u5e94\u8be5\u76f8\u540c\u3002\u56e0\u6b64\uff0c<span translate=no>_^_5_^_</span>\u7528\u5e38\u91cf\u66ff\u6362<span translate=no>_^_6_^_</span>\u3002</p>\n<p>\u5bf9\u4e8e\u7b2c\u4e8c\u9879\u548c\u7b2c\u4e09\u9879\uff0c\u5f15\u5165\u4e86\u76f8\u5bf9\u4f4d\u7f6e\u7f16\u7801\u3002\u56e0\u6b64<span translate=no>_^_7_^_</span>\uff0c\u66ff\u6362<span translate=no>_^_8_^_</span>\u4e3a<span translate=no>_^_9_^_</span>\u548c<span translate=no>_^_10_^_</span>\u3002</p>\n<span translate=no>_^_11_^_</span>",
 "<p> </p>\n": "<p></p>\n",
 "<p> This method shifts <span translate=no>_^_0_^_</span> row of a matrix by <span translate=no>_^_1_^_</span> columns.</p>\n<p>If the input is <span translate=no>_^_2_^_</span>, the shifted result would be <span translate=no>_^_3_^_</span>. <em>Ideally we should mask out the lower triangle but it&#x27;s ok for our purpose</em>.</p>\n": "<p>\u6b64\u65b9\u6cd5\u5c06\u77e9\u9635\u7684<span translate=no>_^_0_^_</span>\u884c\u6309<span translate=no>_^_1_^_</span>\u5217\u79fb\u52a8\u3002</p>\n<p>\u5982\u679c\u8f93\u5165\u4e3a<span translate=no>_^_2_^_</span>\uff0c\u5219\u79fb\u4f4d\u7684\u7ed3\u679c\u5c06\u4e3a<span translate=no>_^_3_^_</span>\u3002<em>\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u63a9\u76d6\u4e0b\u4e09\u89d2\u5f62\uff0c\u4f46\u8fd9\u5bf9\u6211\u4eec\u7684\u76ee\u7684\u6765\u8bf4\u662f\u53ef\u4ee5\u7684</em>\u3002</p>\n",
 "<p><span translate=no>_^_0_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span></p>\n",
 "<p>Concatenate a column of zeros </p>\n": "<p>\u8fde\u63a5\u4e00\u5217\u96f6</p>\n",
 "<p>Number of relative positions </p>\n": "<p>\u76f8\u5bf9\u4f4d\u7f6e\u7684\u6570\u91cf</p>\n",
 "<p>Positional embeddings for the query is independent of the position of the query </p>\n": "<p>\u67e5\u8be2\u7684\u4f4d\u7f6e\u5d4c\u5165\u4e0e\u67e5\u8be2\u7684\u4f4d\u7f6e\u65e0\u5173</p>\n",
 "<p>Relative positional embedding bias for key relative to the query. </p>\n": "<p>\u952e\u76f8\u5bf9\u4e8e\u67e5\u8be2\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5d4c\u5165\u504f\u5dee\u3002</p>\n",
 "<p>Relative positional embeddings for key relative to the query. We need <span translate=no>_^_0_^_</span> embeddings because the keys can be before or after the query. </p>\n": "<p>\u952e\u76f8\u5bf9\u4e8e\u67e5\u8be2\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5d4c\u5165\u3002\u6211\u4eec\u9700\u8981<span translate=no>_^_0_^_</span>\u5d4c\u5165\uff0c\u56e0\u4e3a\u952e\u53ef\u4ee5\u5728\u67e5\u8be2\u4e4b\u524d\u6216\u4e4b\u540e\u3002</p>\n",
 "<p>Remove extra positions </p>\n": "<p>\u79fb\u9664\u591a\u4f59\u7684\u5934\u5bf8</p>\n",
 "<p>Reshape and remove excess elements from the end </p>\n": "<p>\u91cd\u5851\u5e76\u4ece\u672b\u7aef\u79fb\u9664\u591a\u4f59\u7684\u5143\u7d20</p>\n",
 "<p>Return the sum <span translate=no>_^_0_^_</span> </p>\n": "<p>\u8fd4\u56de\u603b\u548c<span translate=no>_^_0_^_</span></p>\n",
 "<p>Shift the rows of <span translate=no>_^_0_^_</span> to get <span translate=no>_^_1_^_</span> </p>\n": "<p>\u79fb\u52a8\u884c<span translate=no>_^_0_^_</span>\u4ee5\u83b7\u53d6<span translate=no>_^_1_^_</span></p>\n",
 "<p>The linear transformations do not need a bias since we explicitly include it when calculating scores. However having a bias for <span translate=no>_^_0_^_</span> might make sense. </p>\n": "<p>\u7ebf\u6027\u53d8\u6362\u4e0d\u9700\u8981\u504f\u5dee\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u8ba1\u7b97\u5206\u6570\u65f6\u4f1a\u660e\u786e\u5305\u542b\u504f\u5dee\u3002\u4f46\u662f\uff0c\u6709\u504f\u89c1<span translate=no>_^_0_^_</span>\u53ef\u80fd\u662f\u6709\u9053\u7406\u7684\u3002</p>\n",
 "Documented implementation with explanations of Relative Multi-Headed Attention from paper Transformer-XL.": "\u8bb0\u5f55\u4e86\u5b9e\u73b0\uff0c\u5e76\u89e3\u91ca\u4e86\u6765\u81ea paper Transformer-XL \u7684\u76f8\u5bf9\u591a\u5934\u6ce8\u610f\u529b\u3002",
 "Relative Multi-Headed Attention": "\u76f8\u5bf9\u591a\u5934\u6ce8\u610f\u529b"
}