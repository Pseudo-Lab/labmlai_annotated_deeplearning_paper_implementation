{
 "<h1>FNet: Mixing Tokens with Fourier Transforms</h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of the paper <a href=\"https://papers.labml.ai/paper/2105.03824\">FNet: Mixing Tokens with Fourier Transforms</a>.</p>\n<p>This paper replaces the <a href=\"../mha.html\">self-attention layer</a> with two <a href=\"https://en.wikipedia.org/wiki/Discrete_Fourier_transform\">Fourier transforms</a> to <em>mix</em> tokens. This is a <span translate=no>_^_0_^_</span> more efficient than self-attention. The accuracy loss of using this over self-attention is about 92% for <a href=\"https://paperswithcode.com/method/bert\">BERT</a> on <a href=\"https://paperswithcode.com/dataset/glue\">GLUE benchmark</a>.</p>\n<h2>Mixing tokens with two Fourier transforms</h2>\n<p>We apply Fourier transform along the hidden dimension (embedding dimension)  and then along the sequence dimension.</p>\n<p><span translate=no>_^_1_^_</span></p>\n<p>where <span translate=no>_^_2_^_</span> is the embedding input, <span translate=no>_^_3_^_</span> stands for the fourier transform and <span translate=no>_^_4_^_</span> stands for the real component in complex numbers.</p>\n<p>This is very simple to implement on PyTorch - just 1 line of code. The paper suggests using a precomputed DFT matrix and doing matrix multiplication to get the Fourier transformation.</p>\n<p>Here is <a href=\"experiment.html\">the training code</a> for using a FNet based model for classifying <a href=\"https://paperswithcode.com/dataset/ag-news\">AG News</a>.</p>\n": "<h1>FNet: \u0dc6\u0dd6\u0dbb\u0dd2\u0dba\u0dbb\u0dca \u0db4\u0dbb\u0dd2\u0dab\u0dcf\u0db8\u0db1\u0dba \u0dc3\u0db8\u0d9f \u0da7\u0ddd\u0d9a\u0db1 \u0db8\u0dd2\u0dc1\u0dca\u0dbb \u0d9a\u0dd2\u0dbb\u0dd3\u0db8</h1>\n<p>\u0db8\u0dd9\u0dba\u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 <a href=\"https://papers.labml.ai/paper/2105.03824\">FNet \u0dc4\u0dd2 <a href=\"https://pytorch.org\">PyTorch</a> \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8: \u0dc6\u0dd6\u0dbb\u0dd2\u0dba\u0dbb\u0dca \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dca \u0dc3\u0db8\u0d9f \u0da7\u0ddd\u0d9a\u0db1 \u0db8\u0dd2\u0dc1\u0dca\u0dbb</a> \u0d9a\u0dd2\u0dbb\u0dd3\u0db8. </p>\n<p>\u0db8\u0dd9\u0db8\u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 <a href=\"../mha.html\">\u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dca\u0dad\u0dbb\u0dba</a> \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0dc3\u0dca\u0dae\u0dcf\u0db4\u0db1\u0dba \u0d9a\u0dbb\u0dba\u0dd2 <a href=\"https://en.wikipedia.org/wiki/Discrete_Fourier_transform\">\u0dc6\u0dd6\u0dbb\u0dd2\u0dba\u0dbb\u0dca \u0daf\u0dd9\u0d9a\u0d9a\u0dca \u0da7\u0ddd\u0d9a\u0db1 <em>\u0db8\u0dd2\u0dc1\u0dca\u0dbb</em> \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0db4\u0dbb\u0dd2\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0dba</a> \u0d9a\u0dbb\u0dba\u0dd2. \u0db8\u0dd9\u0dba \u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba\u0da7 <span translate=no>_^_0_^_</span> \u0dc0\u0da9\u0dcf \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0d9a\u0dca\u0dc2\u0db8 \u0dc0\u0dda. \u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba\u0dd9\u0db1\u0dca \u0db8\u0dd9\u0dba \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0db1\u0dd2\u0dbb\u0dc0\u0daf\u0dca\u0dba\u0dad\u0dcf\u0dc0 \u0db1\u0dd0\u0dad\u0dd2\u0dc0\u0dd3\u0db8 GLUE <a href=\"https://paperswithcode.com/dataset/glue\">\u0db8\u0dd2\u0dab\u0dd4\u0db8\u0dca \u0daf\u0dab\u0dca\u0da9\u0dda</a> <a href=\"https://paperswithcode.com/method/bert\">BERT</a> \u0dc3\u0db3\u0dc4\u0dcf 92% \u0d9a\u0dca \u0db4\u0db8\u0dab \u0dc0\u0dda. </p>\n<h2>\u0dc6\u0dd6\u0dbb\u0dd2\u0dba\u0dbb\u0dca\u0db4\u0dbb\u0dd2\u0dab\u0dcf\u0db8\u0db1 \u0daf\u0dd9\u0d9a\u0d9a\u0dca \u0dc3\u0db8\u0d9f \u0da7\u0ddd\u0d9a\u0db1 \u0db8\u0dd2\u0dc1\u0dca\u0dbb \u0d9a\u0dd2\u0dbb\u0dd3\u0db8</h2>\n<p>\u0d85\u0db4\u0dd2Fourier \u0dc3\u0dd0\u0d9f\u0dc0\u0dd4\u0dab\u0dd4 \u0db8\u0dcf\u0db1\u0dba\u0d9a\u0dca (\u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8 \u0db8\u0dcf\u0db1\u0dba\u0d9a\u0dca) \u0dc4\u0dcf \u0db4\u0dc3\u0dd4\u0dc0 \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dba \u0db8\u0dcf\u0db1\u0dba\u0d9a\u0dca \u0d94\u0dc3\u0dca\u0dc3\u0dda \u0db4\u0dbb\u0dd2\u0dab\u0dcf\u0db8\u0db1\u0dba \u0d85\u0daf\u0dcf\u0dc5 \u0dc0\u0dda. </p>\n<p><span translate=no>_^_1_^_</span></p>\n<p>\u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dda <span translate=no>_^_2_^_</span> \u0d86\u0daf\u0dcf\u0db1\u0dba \u0d9a\u0ddc\u0dad\u0dd0\u0db1\u0daf, <span translate=no>_^_3_^_</span> \u0dc6\u0dd6\u0dbb\u0dd2\u0dba\u0dbb\u0dca \u0db4\u0dbb\u0dd2\u0dab\u0dcf\u0db8\u0db1\u0dba \u0dc3\u0db3\u0dc4\u0dcf <span translate=no>_^_4_^_</span> \u0db4\u0dd9\u0db1\u0dd3 \u0dc3\u0dd2\u0da7\u0dd2\u0db1 \u0d85\u0dad\u0dbb \u0dc3\u0d82\u0d9a\u0dd3\u0dbb\u0dca\u0dab \u0dc3\u0d82\u0d9b\u0dca\u0dba\u0dcf \u0dc0\u0dbd \u0dc3\u0dd0\u0db6\u0dd1 \u0dc3\u0d82\u0dbb\u0da0\u0d9a\u0dba \u0db1\u0dd2\u0dba\u0ddd\u0da2\u0db1\u0dba \u0d9a\u0dbb\u0dba\u0dd2. </p>\n<p>PyTorch\u0db8\u0dad \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0db8\u0dd9\u0dba \u0d89\u0dad\u0dcf \u0dc3\u0dbb\u0dbd\u0dba\u0dd2 - \u0d9a\u0dda\u0dad 1 \u0db4\u0dda\u0dc5\u0dd2\u0dba\u0d9a\u0dca \u0db4\u0db8\u0dab\u0dd2. \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0dba\u0ddd\u0da2\u0db1\u0dcf \u0d9a\u0dbb\u0db1\u0dca\u0db1\u0dda \u0db4\u0dd9\u0dbb \u0dc3\u0dd0\u0d9a\u0dc3\u0dd6 \u0da9\u0dd3\u0d91\u0dc6\u0dca\u0da7\u0dd3 \u0db1\u0dca\u0dba\u0dcf\u0dc3\u0dba\u0d9a\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0dc4 \u0dc6\u0dd6\u0dbb\u0dd2\u0dba\u0dbb\u0dca \u0db4\u0dbb\u0dd2\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0dba \u0dbd\u0db6\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0db1\u0dd4\u0d9a\u0dd8\u0dad\u0dd2 \u0d9c\u0dd4\u0dab \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dba. </p>\n<p><a href=\"https://paperswithcode.com/dataset/ag-news\">AG News</a> \u0dc0\u0dbb\u0dca\u0d9c\u0dd3\u0d9a\u0dbb\u0dab\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf FNet \u0db4\u0daf\u0db1\u0db8\u0dca \u0d9a\u0dbb\u0d9c\u0dad\u0dca \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba\u0d9a\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf <a href=\"experiment.html\">\u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4 \u0d9a\u0dda\u0dad\u0dba</a> \u0db8\u0dd9\u0db1\u0dca\u0db1. </p>\n",
 "<h2>FNet - Mix tokens</h2>\n<p>This module simply implements <span translate=no>_^_0_^_</span></p>\n<p>The structure of this module is made similar to a <a href=\"../mha.html\">standard attention module</a> so that we can simply replace it.</p>\n": "<h2>FNet- \u0da7\u0ddd\u0d9a\u0db1 \u0db8\u0dd2\u0dc1\u0dca\u0dbb \u0d9a\u0dbb\u0db1\u0dca\u0db1</h2>\n<p>\u0db8\u0dd9\u0db8\u0db8\u0ddc\u0da9\u0dd2\u0dba\u0dd4\u0dbd\u0dba \u0dc3\u0dbb\u0dbd\u0dc0 \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dbb\u0dba\u0dd2 <span translate=no>_^_0_^_</span></p>\n<p>\u0db8\u0dd9\u0db8\u0db8\u0ddc\u0da9\u0dd2\u0dba\u0dd4\u0dbd\u0dba\u0dda \u0dc0\u0dca\u0dba\u0dd4\u0dc4\u0dba <a href=\"../mha.html\">\u0dc3\u0db8\u0dca\u0db8\u0dad \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0db8\u0ddc\u0da9\u0dd2\u0dba\u0dd4\u0dbd\u0dba\u0d9a\u0da7</a> \u0dc3\u0db8\u0dcf\u0db1 \u0dc0\u0db1 \u0d85\u0dad\u0dbb \u0d91\u0db8\u0d9f\u0dd2\u0db1\u0dca \u0d85\u0db4\u0da7 \u0d91\u0dba \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0dc3\u0dca\u0dae\u0dcf\u0db4\u0db1\u0dba \u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2\u0dba. </p>\n",
 "<p> The <a href=\"../mha.html\">normal attention module</a> can be fed with different token embeddings for <span translate=no>_^_0_^_</span>,<span translate=no>_^_1_^_</span>, and <span translate=no>_^_2_^_</span> and a mask.</p>\n<p>We follow the same function signature so that we can replace it directly.</p>\n<p>For FNet mixing, <span translate=no>_^_3_^_</span> and masking is not possible. Shape of <span translate=no>_^_4_^_</span> (and <span translate=no>_^_5_^_</span> and <span translate=no>_^_6_^_</span>) is <span translate=no>_^_7_^_</span>.</p>\n": "<p> <a href=\"../mha.html\">\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0db8\u0ddc\u0da9\u0dd2\u0dba\u0dd4\u0dbd\u0dba</a> \u0dc3\u0db3\u0dc4\u0dcf <span translate=no>_^_0_^_</span>\u0dc0\u0dd2\u0dc0\u0dd2\u0db0 \u0da7\u0ddd\u0d9a\u0db1 \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca <span translate=no>_^_2_^_</span> \u0dc3\u0dc4 \u0dc0\u0dd9\u0dc3\u0dca \u0db8\u0dd4\u0dc4\u0dd4\u0dab\u0d9a\u0dca \u0dc3\u0db8\u0d9f \u0db4\u0ddd\u0dc2\u0dab\u0dba \u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2\u0dba.<span translate=no>_^_1_^_</span> </p>\n<p>\u0d85\u0db4\u0dd2\u0d91\u0d9a\u0db8 \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0d9a\u0dcf\u0dbb\u0dd3 \u0d85\u0dad\u0dca\u0dc3\u0db1 \u0d85\u0db1\u0dd4\u0d9c\u0db8\u0db1\u0dba \u0d9a\u0dbb\u0db1 \u0d85\u0dad\u0dbb \u0d91\u0db8\u0d9f\u0dd2\u0db1\u0dca \u0d85\u0db4\u0da7 \u0d91\u0dba \u0d9a\u0dd9\u0dbd\u0dd2\u0db1\u0dca\u0db8 \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0dc3\u0dca\u0dae\u0dcf\u0db4\u0db1\u0dba \u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2\u0dba. </p>\n<p>FNet\u0db8\u0dd2\u0dc1\u0dca\u0dbb \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf, <span translate=no>_^_3_^_</span> \u0dc3\u0dc4 \u0d86\u0dc0\u0dbb\u0dab \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0d9a\u0dc5 \u0db1\u0ddc\u0dc4\u0dd0\u0d9a. <span translate=no>_^_4_^_</span> ( \u0dc3\u0dc4 <span translate=no>_^_5_^_</span> \u0dc3\u0dc4 <span translate=no>_^_6_^_</span>) \u0dc4\u0dd0\u0da9\u0dba \u0dc0\u0dda <span translate=no>_^_7_^_</span>. </p>\n",
 "<p><span translate=no>_^_0_^_</span>,<span translate=no>_^_1_^_</span>, and <span translate=no>_^_2_^_</span> all should be equal to <span translate=no>_^_3_^_</span> for token mixing </p>\n": "<p><span translate=no>_^_0_^_</span>,<span translate=no>_^_1_^_</span>, \u0dc3\u0dc4 <span translate=no>_^_2_^_</span> \u0dc3\u0dd2\u0dba\u0dbd\u0dca\u0dbd\u0db8 \u0da7\u0ddd\u0d9a\u0db1\u0dca \u0db8\u0dd2\u0dc1\u0dca\u0dbb \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 <span translate=no>_^_3_^_</span> \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0db8\u0dcf\u0db1 \u0dc0\u0dd2\u0dba \u0dba\u0dd4\u0dad\u0dd4\u0dba </p>\n",
 "<p>Apply the Fourier transform along the hidden (embedding) dimension <span translate=no>_^_0_^_</span></p>\n<p>The output of the Fourier transform is a tensor of <a href=\"https://pytorch.org/docs/stable/complex_numbers.html\">complex numbers</a>. </p>\n": "<p>\u0dc3\u0dd0\u0d9f\u0dc0\u0dd4\u0dab\u0dd4(\u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8) \u0db8\u0dcf\u0db1\u0dba \u0d94\u0dc3\u0dca\u0dc3\u0dda \u0dc6\u0dd6\u0dbb\u0dd2\u0dba\u0dbb\u0dca \u0db4\u0dbb\u0dd2\u0dab\u0dcf\u0db8\u0db1\u0dba \u0dba\u0ddc\u0daf\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span></p>\n<p>\u0dc6\u0dd6\u0dbb\u0dd2\u0dba\u0dbb\u0dca\u0db4\u0dbb\u0dd2\u0dab\u0dcf\u0db8\u0dba\u0dda \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0daf\u0dcf\u0db1\u0dba <a href=\"https://pytorch.org/docs/stable/complex_numbers.html\">\u0dc3\u0d82\u0d9a\u0dd3\u0dbb\u0dca\u0dab \u0dc3\u0d82\u0d9b\u0dca\u0dba\u0dcf</a>\u0dc0\u0dbd \u0d86\u0dad\u0dad\u0dd2\u0dba\u0d9a\u0dd2. </p>\n",
 "<p>Apply the Fourier transform along the sequence dimension <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dd2\u0d9a\u0db8\u0dcf\u0db1\u0dba \u0d94\u0dc3\u0dca\u0dc3\u0dda \u0dc6\u0dd6\u0dbb\u0dd2\u0dba\u0dbb\u0dca \u0db4\u0dbb\u0dd2\u0dab\u0dcf\u0db8\u0db1\u0dba \u0dba\u0ddc\u0daf\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Assign to <span translate=no>_^_0_^_</span> for clarity </p>\n": "<p>\u0db4\u0dd0\u0dc4\u0dd0\u0daf\u0dd2\u0dbd\u0dd2\u0d9a\u0db8 <span translate=no>_^_0_^_</span> \u0dc3\u0db3\u0dc4\u0dcf \u0db4\u0dc0\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get the real component <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc3\u0dd0\u0db6\u0dd1\u0dc3\u0d82\u0dbb\u0da0\u0d9a\u0dba \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Token mixing doesn&#x27;t support masking. i.e. all tokens will see all other token embeddings. </p>\n": "<p>\u0da7\u0ddd\u0d9a\u0db1\u0dca\u0db8\u0dd2\u0dc1\u0dca\u0dbb \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0d86\u0dc0\u0dbb\u0dab \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0dc4\u0dba \u0db1\u0ddc\u0daf\u0d9a\u0dca\u0dc0\u0dba\u0dd2. \u0d91\u0db1\u0db8\u0dca \u0dc3\u0dd2\u0dba\u0dbd\u0dd4\u0db8 \u0da7\u0ddd\u0d9a\u0db1 \u0db8\u0d9c\u0dd2\u0db1\u0dca \u0d85\u0db1\u0dd9\u0d9a\u0dd4\u0dad\u0dca \u0dc3\u0dd2\u0dba\u0dbd\u0dd4\u0db8 \u0da7\u0ddd\u0d9a\u0db1 \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0daf\u0d9a\u0dd2\u0db1\u0dd4 \u0d87\u0dad. </p>\n",
 "FNet: Mixing Tokens with Fourier Transforms": "FNet: \u0dc6\u0dd6\u0dbb\u0dd2\u0dba\u0dbb\u0dca \u0db4\u0dbb\u0dd2\u0dab\u0dcf\u0db8\u0db1\u0dba \u0dc3\u0db8\u0d9f \u0da7\u0ddd\u0d9a\u0db1 \u0db8\u0dd2\u0dc1\u0dca\u0dbb \u0d9a\u0dd2\u0dbb\u0dd3\u0db8",
 "This is an annotated implementation/tutorial of FNet in PyTorch.": "\u0db8\u0dd9\u0dba PyTorch \u0dc4\u0dd2 FNet \u0dc4\u0dd2 \u0dc0\u0dd2\u0d9a\u0dd8\u0dad \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8/\u0db1\u0dd2\u0db6\u0db1\u0dca\u0db0\u0db1\u0dba\u0d9a\u0dd2."
}