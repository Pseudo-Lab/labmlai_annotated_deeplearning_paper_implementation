{
 "<h1>FNet: Mixing Tokens with Fourier Transforms</h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of the paper <a href=\"https://papers.labml.ai/paper/2105.03824\">FNet: Mixing Tokens with Fourier Transforms</a>.</p>\n<p>This paper replaces the <a href=\"../mha.html\">self-attention layer</a> with two <a href=\"https://en.wikipedia.org/wiki/Discrete_Fourier_transform\">Fourier transforms</a> to <em>mix</em> tokens. This is a <span translate=no>_^_0_^_</span> more efficient than self-attention. The accuracy loss of using this over self-attention is about 92% for <a href=\"https://paperswithcode.com/method/bert\">BERT</a> on <a href=\"https://paperswithcode.com/dataset/glue\">GLUE benchmark</a>.</p>\n<h2>Mixing tokens with two Fourier transforms</h2>\n<p>We apply Fourier transform along the hidden dimension (embedding dimension)  and then along the sequence dimension.</p>\n<p><span translate=no>_^_1_^_</span></p>\n<p>where <span translate=no>_^_2_^_</span> is the embedding input, <span translate=no>_^_3_^_</span> stands for the fourier transform and <span translate=no>_^_4_^_</span> stands for the real component in complex numbers.</p>\n<p>This is very simple to implement on PyTorch - just 1 line of code. The paper suggests using a precomputed DFT matrix and doing matrix multiplication to get the Fourier transformation.</p>\n<p>Here is <a href=\"experiment.html\">the training code</a> for using a FNet based model for classifying <a href=\"https://paperswithcode.com/dataset/ag-news\">AG News</a>.</p>\n": "<h1>FNet\uff1a\u5c06\u4ee4\u724c\u4e0e\u5085\u91cc\u53f6\u53d8\u6362\u6df7\u5408</h1>\n<p>\u8fd9\u662f\u8bba\u6587\u300a<a href=\"https://papers.labml.ai/paper/2105.03824\">FNet\uff1a\u5c06\u4ee3\u5e01\u4e0e\u5085\u91cc\u53f6\u53d8\u6362\u6df7\u5408\u300b\u7684 PyTor</a> <a href=\"https://pytorch.org\">ch</a> \u5b9e\u73b0\u3002</p>\n<p>\u672c\u6587\u7528\u4e24\u4e2a<a href=\"https://en.wikipedia.org/wiki/Discrete_Fourier_transform\">\u5085\u91cc\u53f6\u53d8</a>\u6362\u53d6\u4ee3\u4e86<a href=\"../mha.html\">\u81ea\u6211\u6ce8\u610f\u529b\u5c42</a>\uff0c\u4ee5<em>\u6df7\u5408</em>\u4ee4\u724c\u3002\u8fd9\u6bd4\u81ea\u6211\u6ce8\u610f\u529b<span translate=no>_^_0_^_</span>\u66f4\u6709\u6548\u3002\u5728 GLUE <a href=\"https://paperswithcode.com/dataset/glue\">\u57fa\u51c6\u6d4b\u8bd5</a>\u4e2d\uff0c<a href=\"https://paperswithcode.com/method/bert\">BERT</a> \u4f7f\u7528\u5b83\u800c\u4e0d\u662f\u81ea\u6211\u6ce8\u610f\u529b\u7684\u51c6\u786e\u6027\u635f\u5931\u7ea6\u4e3a92\uff05\u3002</p>\n<h2>\u5c06\u4ee4\u724c\u4e0e\u4e24\u4e2a\u5085\u91cc\u53f6\u53d8\u6362\u6df7\u5408</h2>\n<p>\u6211\u4eec\u6cbf\u9690\u85cf\u7ef4\u5ea6\uff08\u5d4c\u5165\u7ef4\u5ea6\uff09\u5e94\u7528\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u7136\u540e\u6cbf\u5e8f\u5217\u7ef4\u5ea6\u5e94\u7528\u5085\u91cc\u53f6\u53d8\u6362\u3002</p>\n<p><span translate=no>_^_1_^_</span></p>\n<p>\u5176\u4e2d<span translate=no>_^_2_^_</span>\u662f\u5d4c\u5165\u8f93\u5165\uff0c<span translate=no>_^_3_^_</span>\u4ee3\u8868\u5085\u91cc\u53f6\u53d8\u6362\uff0c<span translate=no>_^_4_^_</span>\u4ee3\u8868\u590d\u6570\u4e2d\u7684\u5b9e\u5206\u91cf\u3002</p>\n<p>\u8fd9\u5728 PyTorch \u4e0a\u5b9e\u73b0\u8d77\u6765\u975e\u5e38\u7b80\u5355-\u53ea\u9700\u4e00\u884c\u4ee3\u7801\u3002\u672c\u6587\u5efa\u8bae\u4f7f\u7528\u9884\u5148\u8ba1\u7b97\u7684DFT\u77e9\u9635\u5e76\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5\u6765\u83b7\u5f97\u5085\u91cc\u53f6\u53d8\u6362\u3002</p>\n<p><a href=\"experiment.html\">\u4ee5\u4e0b\u662f\u4f7f\u7528\u57fa\u4e8e FNet \u7684\u6a21\u578b\u5bf9 <a href=\"https://paperswithcode.com/dataset/ag-news\">AG News</a> \u8fdb\u884c\u5206\u7c7b\u7684\u8bad\u7ec3\u4ee3\u7801</a>\u3002</p>\n",
 "<h2>FNet - Mix tokens</h2>\n<p>This module simply implements <span translate=no>_^_0_^_</span></p>\n<p>The structure of this module is made similar to a <a href=\"../mha.html\">standard attention module</a> so that we can simply replace it.</p>\n": "<h2>FNet-\u6df7\u5408\u4ee3\u5e01</h2>\n<p>\u8fd9\u4e2a\u6a21\u5757\u7b80\u5355\u5730\u5b9e\u73b0\u4e86<span translate=no>_^_0_^_</span></p>\n<p>\u8be5\u6a21\u5757\u7684\u7ed3\u6784\u7c7b\u4f3c\u4e8e<a href=\"../mha.html\">\u6807\u51c6\u7684\u6ce8\u610f\u529b\u6a21\u5757</a>\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u66ff\u6362\u5b83\u3002</p>\n",
 "<p> The <a href=\"../mha.html\">normal attention module</a> can be fed with different token embeddings for <span translate=no>_^_0_^_</span>,<span translate=no>_^_1_^_</span>, and <span translate=no>_^_2_^_</span> and a mask.</p>\n<p>We follow the same function signature so that we can replace it directly.</p>\n<p>For FNet mixing, <span translate=no>_^_3_^_</span> and masking is not possible. Shape of <span translate=no>_^_4_^_</span> (and <span translate=no>_^_5_^_</span> and <span translate=no>_^_6_^_</span>) is <span translate=no>_^_7_^_</span>.</p>\n": "<p><a href=\"../mha.html\">\u666e\u901a\u6ce8\u610f\u529b\u6a21\u5757</a>\u53ef\u4ee5\u4f7f\u7528<span translate=no>_^_0_^_</span>\u3001<span translate=no>_^_1_^_</span>\u548c\u7684\u4e0d\u540c\u4ee4\u724c\u5d4c\u5165<span translate=no>_^_2_^_</span>\u4ee5\u53ca\u63a9\u7801\u8fdb\u884c\u9988\u9001\u3002</p>\n<p>\u6211\u4eec\u9075\u5faa\u76f8\u540c\u7684\u51fd\u6570\u7b7e\u540d\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66ff\u6362\u5b83\u3002</p>\n<p>\u5bf9\u4e8e FNet \u6df7\u5408<span translate=no>_^_3_^_</span>\uff0c\u5c4f\u853d\u662f\u4e0d\u53ef\u80fd\u7684\u3002<span translate=no>_^_4_^_</span>\uff08\u548c<span translate=no>_^_5_^_</span>\u548c<span translate=no>_^_6_^_</span>\uff09\u7684\u5f62\u72b6\u4e3a<span translate=no>_^_7_^_</span>\u3002</p>\n",
 "<p><span translate=no>_^_0_^_</span>,<span translate=no>_^_1_^_</span>, and <span translate=no>_^_2_^_</span> all should be equal to <span translate=no>_^_3_^_</span> for token mixing </p>\n": "<p><span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>\u3001\uff0c<span translate=no>_^_3_^_</span>\u5bf9\u4e8e\u4ee4\u724c\u6df7\u5408\uff0cal<span translate=no>_^_2_^_</span> l \u5e94\u8be5\u7b49\u4e8e</p>\n",
 "<p>Apply the Fourier transform along the hidden (embedding) dimension <span translate=no>_^_0_^_</span></p>\n<p>The output of the Fourier transform is a tensor of <a href=\"https://pytorch.org/docs/stable/complex_numbers.html\">complex numbers</a>. </p>\n": "<p>\u6cbf\u9690\u85cf\uff08\u5d4c\u5165\uff09\u7ef4\u5ea6\u5e94\u7528\u5085\u91cc\u53f6\u53d8\u6362<span translate=no>_^_0_^_</span></p>\n<p>\u5085\u91cc\u53f6\u53d8\u6362\u7684\u8f93\u51fa\u662f<a href=\"https://pytorch.org/docs/stable/complex_numbers.html\">\u590d\u6570</a>\u5f20\u91cf\u3002</p>\n",
 "<p>Apply the Fourier transform along the sequence dimension <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6cbf\u5e8f\u5217\u7ef4\u5ea6\u5e94\u7528\u5085\u91cc\u53f6\u53d8\u6362<span translate=no>_^_0_^_</span></p>\n",
 "<p>Assign to <span translate=no>_^_0_^_</span> for clarity </p>\n": "<p>\u4e3a\u4e86\u6e05\u695a\u8d77\u89c1\uff0c<span translate=no>_^_0_^_</span>\u8bf7\u5206\u914d\u7ed9</p>\n",
 "<p>Get the real component <span translate=no>_^_0_^_</span> </p>\n": "<p>\u83b7\u53d6\u771f\u6b63\u7684\u7ec4\u4ef6<span translate=no>_^_0_^_</span></p>\n",
 "<p>Token mixing doesn&#x27;t support masking. i.e. all tokens will see all other token embeddings. </p>\n": "<p>\u4ee4\u724c\u6df7\u5408\u4e0d\u652f\u6301\u63a9\u7801\u3002\u5373\u6240\u6709\u4ee4\u724c\u90fd\u5c06\u770b\u5230\u6240\u6709\u5176\u4ed6\u4ee4\u724c\u5d4c\u5165\u3002</p>\n",
 "FNet: Mixing Tokens with Fourier Transforms": "FNet\uff1a\u5c06\u4ee4\u724c\u4e0e\u5085\u91cc\u53f6\u53d8\u6362\u6df7\u5408",
 "This is an annotated implementation/tutorial of FNet in PyTorch.": "\u8fd9\u662f PyTorch \u4e2d FNet \u7684\u5e26\u6ce8\u91ca\u7684\u5b9e\u73b0/\u6559\u7a0b\u3002"
}