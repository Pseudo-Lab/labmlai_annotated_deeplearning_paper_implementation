{
 "<h1>Hierarchical Transformers Are More Efficient Language Models</h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of the paper <a href=\"https://papers.labml.ai/paper/2110.13711\">Hierarchical Transformers Are More Efficient Language Models</a>.</p>\n<p>This paper introduces a hierarchical transformer architecture to handle long sequences efficiently. The first half of the transformer layers down-sample tokens and the second half up-samples with direct skip connections between layers of the same resolution. This is a little similar to <a href=\"../../diffusion/ddpm/unet.html\">U-Net</a> for vision tasks.</p>\n<p>They try different up-sampling and down-sampling techniques and build a model with the best performing up and down-sampling techniques which they call the hourglass model.</p>\n<p>Here we have implemented the simplest up-sampling and down-sampling techniques for simplicity. We will consider adding more complex (and better performing) implementations later.</p>\n<p>Here is <a href=\"experiment.html\">the training code</a> for the hourglass model.</p>\n<p><a href=\"https://app.labml.ai/run/855b82363e4911ec9ae4a5b9c69d5061\"><span translate=no>_^_0_^_</span></a></p>\n": "<h1>\u0db0\u0dd6\u0dbb\u0dcf\u0dc0\u0dbd\u0dd2\u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dc0\u0da9\u0dcf\u0dad\u0dca \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0d9a\u0dca\u0dc2\u0db8 \u0db7\u0dcf\u0dc2\u0dcf \u0d86\u0d9a\u0dd8\u0dad\u0dd2 \u0dc0\u0dda</h1>\n<p>\u0db8\u0dd9\u0dba <a href=\"https://pytorch.org\">PyTorch</a> \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 <a href=\"https://papers.labml.ai/paper/2110.13711\">\u0db0\u0dd6\u0dbb\u0dcf\u0dc0\u0dbd\u0dd2 \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dc0\u0da9\u0dcf\u0dad\u0dca \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0d9a\u0dca\u0dc2\u0db8 \u0db7\u0dcf\u0dc2\u0dcf \u0d86\u0d9a\u0dd8\u0dad\u0dd2</a> \u0dc0\u0dda. </p>\n<p>\u0daf\u0dd2\u0d9c\u0dd4\u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd\u0dc0\u0dbd\u0dca \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0d9a\u0dca\u0dc2\u0db8\u0dc0 \u0dc4\u0dd0\u0dc3\u0dd2\u0dbb\u0dc0\u0dd3\u0db8\u0da7 \u0db8\u0dd9\u0db8 \u0dbd\u0dd2\u0db4\u0dd2\u0dba \u0db0\u0dd6\u0dbb\u0dcf\u0dc0\u0dbd\u0dd2 \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0d9c\u0dd8\u0dc4 \u0db1\u0dd2\u0dbb\u0dca\u0db8\u0dcf\u0dab \u0dc1\u0dd2\u0dbd\u0dca\u0db4\u0dba\u0d9a\u0dca \u0dc4\u0db3\u0dd4\u0db1\u0dca\u0dc0\u0dcf \u0daf\u0dd9\u0dba\u0dd2. \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dc3\u0dca\u0dae\u0dbb \u0dc0\u0dbd \u0db4\u0dc5\u0db8\u0dd4 \u0db7\u0dcf\u0d9c\u0dba \u0db4\u0dc4\u0dc5\u0da7 \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2 \u0da7\u0ddd\u0d9a\u0db1 \u0dc3\u0dc4 \u0daf\u0dd9\u0dc0\u0db1 \u0db7\u0dcf\u0d9c\u0dba \u0d91\u0d9a\u0db8 \u0dc0\u0dd2\u0db7\u0dda\u0daf\u0db1\u0dba\u0dda \u0dc3\u0dca\u0dae\u0dbb \u0d85\u0dad\u0dbb \u0dc3\u0dd8\u0da2\u0dd4 \u0db8\u0d9f \u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0dda \u0dc3\u0db8\u0dca\u0db6\u0db1\u0dca\u0db0\u0dad\u0dcf \u0dc3\u0dc4\u0dd2\u0dad \u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd. \u0daf\u0dbb\u0dca\u0dc1\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0dba\u0db1\u0dca \u0dc3\u0db3\u0dc4\u0dcf \u0db8\u0dd9\u0dba <a href=\"../../diffusion/ddpm/unet.html\">\u0dba\u0dd6-\u0db1\u0dd9\u0da7\u0dca</a> \u0dc0\u0dbd\u0da7 \u0da7\u0dd2\u0d9a\u0d9a\u0dca \u0dc3\u0db8\u0dcf\u0db1 \u0dba. </p>\n<p>\u0d94\u0dc0\u0dd4\u0db1\u0dca\u0dc0\u0dd2\u0dc0\u0dd2\u0db0 \u0d89\u0dc4\u0dc5 \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca \u0dc3\u0dc4 \u0db4\u0dc4\u0dc5-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2 \u0dc1\u0dd2\u0dbd\u0dca\u0db4\u0dd3\u0dba \u0d9a\u0dca\u0dbb\u0db8 \u0d8b\u0dad\u0dca\u0dc3\u0dcf\u0dc4 \u0d9a\u0dbb\u0db1 \u0d85\u0dad\u0dbb \u0d94\u0dc0\u0dd4\u0db1\u0dca \u0db4\u0dd0\u0dba \u0dc0\u0dd3\u0daf\u0dd4\u0dbb\u0dd4 \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba \u0dbd\u0dd9\u0dc3 \u0dc4\u0db3\u0dd4\u0db1\u0dca\u0dc0\u0db1 \u0dc4\u0ddc\u0db3\u0db8 \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0d9a\u0dcf\u0dbb\u0dd3 \u0dc3\u0dc4 \u0db4\u0dc4\u0dc5 \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2 \u0dc1\u0dd2\u0dbd\u0dca\u0db4\u0dd3\u0dba \u0d9a\u0dca\u0dbb\u0db8 \u0dc3\u0dc4\u0dd2\u0dad \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba\u0d9a\u0dca \u0d9c\u0ddc\u0da9\u0db1\u0d9f\u0dba\u0dd2. </p>\n<p>\u0db8\u0dd9\u0db1\u0dca\u0db1\u0d85\u0db4\u0dd2 \u0dc3\u0dbb\u0dbd \u0db6\u0dc0 \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0dbb\u0dbd\u0db8 \u0d89\u0dc4\u0dc5 \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca \u0dc3\u0dc4 \u0db4\u0dc4\u0dc5 \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2 \u0d9a\u0dca\u0dbb\u0db8 \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dbb \u0d87\u0dad. \u0db4\u0dc3\u0dd4\u0dc0 \u0dc0\u0da9\u0dcf\u0dad\u0dca \u0dc3\u0d82\u0d9a\u0dd3\u0dbb\u0dca\u0dab (\u0dc4\u0dcf \u0dc0\u0da9\u0dcf \u0dc4\u0ddc\u0db3 \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0d9a\u0dcf\u0dbb\u0dd3) \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dca \u0d91\u0d9a\u0dad\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0d85\u0db4\u0dd2 \u0dc3\u0dbd\u0d9a\u0dcf \u0db6\u0dbd\u0db8\u0dd4. </p>\n<p>\u0db4\u0dd0\u0dba\u0dc0\u0dd3\u0daf\u0dd4\u0dbb\u0dd4 \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba \u0dc3\u0db3\u0dc4\u0dcf <a href=\"experiment.html\">\u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4 \u0d9a\u0dda\u0dad\u0dba</a> \u0db8\u0dd9\u0db1\u0dca\u0db1. </p>\n<p><a href=\"https://app.labml.ai/run/855b82363e4911ec9ae4a5b9c69d5061\"><span translate=no>_^_0_^_</span></a></p>\n",
 "<h2>Hourglass model</h2>\n<p>This model recursively adds layers to the middle while shortening the sequence by down-sampling. The shortened sequence processed by another hourglass model is sandwiched between two normal transformer layers. (A transformer layer has a <a href=\"../mha.html\">self-attention layer</a>  and a <a href=\"../feed_forward.html\">position-wise feed-forward layer</a>).</p>\n": "<h2>Hourglass\u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba</h2>\n<p>\u0db8\u0dd9\u0db8\u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba \u0db1\u0dd0\u0dc0\u0dad \u0db1\u0dd0\u0dc0\u0dad\u0dad\u0dca \u0dc3\u0dca\u0dae\u0dbb \u0db8\u0dd0\u0daf\u0da7 \u0d91\u0d9a\u0dad\u0dd4 \u0d9a\u0dbb\u0db1 \u0d85\u0dad\u0dbb \u0db4\u0dc4\u0dc5\u0da7 \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dd9\u0db1\u0dca \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dba \u0d9a\u0dd9\u0da7\u0dd2 \u0d9a\u0dbb\u0dba\u0dd2. \u0dad\u0dc0\u0dad\u0dca \u0db4\u0dd0\u0dba\u0d9a \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba\u0d9a\u0dd2\u0db1\u0dca \u0dc3\u0dd0\u0d9a\u0dc3\u0dd6 \u0d9a\u0dd9\u0da7\u0dd2 \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dba \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dc3\u0dca\u0dae\u0dbb \u0daf\u0dd9\u0d9a\u0d9a\u0dca \u0d85\u0dad\u0dbb \u0dc3\u0dd0\u0db1\u0dca\u0da9\u0dca\u0dc0\u0dd2\u0da0\u0dca \u0d9a\u0dbb \u0d87\u0dad. (\u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dc3\u0dca\u0dad\u0dbb\u0dba <a href=\"../mha.html\">\u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0d9a\u0dbb\u0db1 \u0dad\u0da7\u0dca\u0da7\u0dd4\u0dc0\u0d9a\u0dca</a> \u0dc3\u0dc4 <a href=\"../feed_forward.html\">\u0dc3\u0dca\u0dae\u0dcf\u0db1-\u0db1\u0dd0\u0dab\u0dc0\u0dad\u0dca \u0db4\u0ddd\u0dc2\u0d9a-\u0d89\u0daf\u0dd2\u0dbb\u0dd2 \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0d9a\u0dca</a> \u0d87\u0dad). </p>\n",
 "<h3>Average pool shortening</h3>\n<p>This down-samples by a given factor with average pooling</p>\n": "<h3>\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0dad\u0da7\u0dcf\u0d9a\u0dba \u0dbb\u0dc3 \u0d9a\u0dcf\u0dbb\u0d9a</h3>\n<p>\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0dad\u0da7\u0dcf\u0d9a \u0dc3\u0dc4\u0dd2\u0dad \u0daf\u0dd3 \u0d87\u0dad\u0dd2 \u0dc3\u0dcf\u0db0\u0d9a\u0dba\u0d9a\u0dca \u0db8\u0d9c\u0dd2\u0db1\u0dca \u0db8\u0dd9\u0db8 \u0db4\u0dc4\u0dc5-\u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd</p>\n",
 "<h3>Generate auto-regressive mask</h3>\n": "<h3>\u0dc3\u0dca\u0dc0\u0dba\u0d82\u0d9a\u0dca\u0dbb\u0dd3\u0dba\u0db4\u0dca\u0dbb\u0dad\u0dd2\u0d9c\u0dcf\u0db8\u0dd3 \u0dc0\u0dd9\u0dc3\u0dca \u0db8\u0dd4\u0dc4\u0dd4\u0dab\u0d9a\u0dca \u0da2\u0db1\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1</h3>\n",
 "<h3>Naive up-sampling</h3>\n<p>This up-samples by repeating</p>\n": "<h3>\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca\u0daf\u0d9a\u0dca\u0dc0\u0dcf \u0db6\u0ddc\u0dc5\u0db3</h3>\n<p>\u0db4\u0dd4\u0db1\u0dbb\u0dcf\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0dba\u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dd9\u0db1\u0dca \u0db8\u0dd9\u0db8 \u0d89\u0dc4\u0dc5 \u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd</p>\n",
 "<h3>Shift right operation</h3>\n<p>This shifts the sequence to the right by the given number of steps</p>\n": "<h3>\u0db1\u0dd2\u0dc0\u0dd0\u0dbb\u0daf\u0dd2\u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0d9a\u0dcf\u0dbb\u0dd2\u0dad\u0dca\u0dc0\u0dba \u0db8\u0dcf\u0dbb\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1</h3>\n<p>\u0db8\u0dd9\u0dba\u0dbd\u0db6\u0dcf \u0daf\u0dd3 \u0d87\u0dad\u0dd2 \u0db4\u0dd2\u0dba\u0dc0\u0dbb \u0d9c\u0dab\u0db1 \u0d85\u0db1\u0dd4\u0dc0 \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dba \u0daf\u0d9a\u0dd4\u0dab\u0da7 \u0db8\u0dcf\u0dbb\u0dd4 \u0d9a\u0dbb\u0dba\u0dd2</p>\n",
 "<h3>\ud83d\udea7 Attention based up-sampling</h3>\n<span translate=no>_^_0_^_</span><p>where <span translate=no>_^_1_^_</span></p>\n": "<h3>\ud83d\udea7\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0db4\u0daf\u0db1\u0db8\u0dca \u0d9a\u0dbb\u0d9c\u0dad\u0dca \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca</h3>\n<span translate=no>_^_0_^_</span><p>\u0d9a\u0ddc\u0dc4\u0dda\u0daf <span translate=no>_^_1_^_</span></p>\n",
 "<h3>\ud83d\udea7 Down-sampling with attention</h3>\n<span translate=no>_^_0_^_</span><p>where <span translate=no>_^_1_^_</span> is average pooling or linear pooling.</p>\n": "<h3>\ud83d\udea7\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba\u0dd9\u0db1\u0dca \u0db4\u0dc4\u0dc5\u0da7 \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8</h3>\n<span translate=no>_^_0_^_</span><p><span translate=no>_^_1_^_</span> \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba \u0dad\u0da7\u0dcf\u0d9a \u0dc4\u0ddd \u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0dad\u0da7\u0dcf\u0d9a \u0d9a\u0ddc\u0dc4\u0dda\u0daf? </p>\n",
 "<h3>\ud83d\udea7 Linear pooling for down-sampling</h3>\n<p>This concatenates the consecutive tokens embeddings that need to be merged and do a linear transformation to map it to the size of a single token embedding.</p>\n": "<h3>\ud83d\udea7\u0db4\u0dc4\u0dc5-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca \u0dc3\u0db3\u0dc4\u0dcf \u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0dad\u0da7\u0dcf\u0d9a</h3>\n<p>\u0db8\u0dd9\u0dba\u0d92\u0d9a\u0dcf\u0db6\u0daf\u0dca\u0db0 \u0d9a\u0dc5 \u0dba\u0dd4\u0dad\u0dd4 \u0d85\u0db1\u0dd4\u0dba\u0dcf\u0dad \u0da7\u0ddd\u0d9a\u0db1 \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc0\u0dbd\u0da7 \u0d85\u0db1\u0dd4\u0d9a\u0dd6\u0dbd \u0dc0\u0db1 \u0d85\u0dad\u0dbb \u0d91\u0dba \u0dad\u0db1\u0dd2 \u0da7\u0ddd\u0d9a\u0db1 \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dda \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba\u0da7 \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8\u0dca \u0d9c\u0dad \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0db4\u0dbb\u0dd2\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0dba\u0d9a\u0dca \u0dc3\u0dd2\u0daf\u0dd4 \u0d9a\u0dbb\u0dba\u0dd2. </p>\n",
 "<h3>\ud83d\udea7 Linear projection for up-sampling</h3>\n<p>Make a linear projection of dense token embeddings to a size of <span translate=no>_^_0_^_</span>.</p>\n": "<h3>\ud83d\udea7\u0daf\u0d9a\u0dca\u0dc0\u0dcf-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca \u0dc3\u0db3\u0dc4\u0dcf \u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0db4\u0dca\u0dbb\u0d9a\u0dca\u0dc2\u0dda\u0db4\u0db1\u0dba</h3>\n<p>\u0d9a\u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba\u0d9a\u0da7 \u0d9d\u0db1 \u0da7\u0ddd\u0d9a\u0db1\u0dca \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0db4\u0dca\u0dbb\u0d9a\u0dca\u0dc2\u0dda\u0db4\u0dab\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span>. </p>\n",
 "<p> </p>\n": "<p> </p>\n",
 "<p><a href=\".. / feed_forward.html\">Position wise feed-forward layers</a> </p>\n": "<p><a href=\"../feed_forward.html\">\u0db1\u0dd0\u0dab\u0dc0\u0dad\u0dca \u0db4\u0ddd\u0dc2\u0d9a \u0d89\u0daf\u0dd2\u0dbb\u0dd2 \u0dc3\u0dca\u0dae\u0dbb \u0dc3\u0dca\u0dae\u0dcf\u0db1\u0d9c\u0dad \u0d9a\u0dbb\u0db1\u0dca\u0db1</a> </p>\n",
 "<p><a href=\"../mha.html\">Multi-head attention layer</a> </p>\n": "<p><a href=\"../mha.html\">\u0db6\u0dc4\u0dd4-\u0dc4\u0dd2\u0dc3 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dca\u0dae\u0dbb\u0dba</a> </p>\n",
 "<p><a href=\"../utils.html\">Subsequent mask</a>, will mask out tokens from seeing future tokens </p>\n": "<p><a href=\"../utils.html\">\u0db4\u0dc3\u0dd4\u0d9a\u0dcf\u0dbd\u0dd3\u0db1 \u0dc0\u0dd9\u0dc3\u0dca\u0db8\u0dd4\u0dc4\u0dd4\u0dab</a>, \u0d85\u0db1\u0dcf\u0d9c\u0dad \u0da7\u0ddd\u0d9a\u0db1 \u0daf\u0dd0\u0d9a\u0dd3\u0db8\u0dd9\u0db1\u0dca \u0da7\u0ddd\u0d9a\u0db1 \u0dc0\u0dc3\u0d82 \u0d9a\u0dbb\u0db1\u0dd4 \u0d87\u0dad </p>\n",
 "<p><span translate=no>_^_0_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span> </p>\n",
 "<p>Auto-regressive mask </p>\n": "<p>\u0dc3\u0dca\u0dc0\u0dba\u0d82\u0d9a\u0dca\u0dbb\u0dd3\u0dba-\u0db4\u0dca\u0dbb\u0dad\u0dd2\u0d9c\u0dcf\u0db8\u0dd3\u0dc0\u0dd9\u0dc3\u0dca </p>\n",
 "<p>Autoregressive mask </p>\n": "<p>\u0dc3\u0dca\u0dc0\u0dba\u0d82\u0d9a\u0dca\u0dbb\u0dd3\u0dba\u0d86\u0dc0\u0dbb\u0dab </p>\n",
 "<p>Average pooling layer </p>\n": "<p>\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0dad\u0da7\u0dcf\u0d9a \u0dc3\u0dca\u0dae\u0dbb\u0dba </p>\n",
 "<p>Center transformer layer <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db8\u0db0\u0dca\u0dba\u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dba\u0dc3\u0dca\u0dae\u0dbb\u0dba \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Concatenate the zeros and truncate the right </p>\n": "<p>\u0dc1\u0dd4\u0db1\u0dca\u0dba\u0dba\u0dc3\u0d82\u0dba\u0dd4\u0d9a\u0dca\u0dad \u0d9a\u0dbb \u0d85\u0dba\u0dd2\u0dad\u0dd2\u0dba \u0da7\u0db1\u0dca\u0d9a \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Create a mask if we haven&#x27;t created or sizes have changed </p>\n": "<p>\u0d85\u0db4\u0dc0\u0dd2\u0dc3\u0dd2\u0db1\u0dca \u0db1\u0dd2\u0dbb\u0dca\u0db8\u0dcf\u0dab\u0dba \u0d9a\u0dbb \u0db1\u0ddc\u0db8\u0dd0\u0dad\u0dd2 \u0db1\u0db8\u0dca \u0dc4\u0ddd \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab \u0dc0\u0dd9\u0db1\u0dc3\u0dca \u0dc0\u0dd3 \u0d87\u0dad\u0dca\u0db1\u0db8\u0dca \u0dc0\u0dd9\u0dc3\u0dca\u0db8\u0dd4\u0dc4\u0dd4\u0dab\u0d9a\u0dca \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 </p>\n",
 "<p>Final transformer layer <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d85\u0dc0\u0dc3\u0db1\u0dca\u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dc3\u0dca\u0dae\u0dbb\u0dba <span translate=no>_^_0_^_</span> </p>\n",
 "<p>If the shift is <span translate=no>_^_0_^_</span> return the original </p>\n": "<p>\u0db8\u0dcf\u0dbb\u0dd4\u0dc0\u0db8\u0dd4\u0dbd\u0dca \u0db4\u0dd2\u0da7\u0db4\u0dad <span translate=no>_^_0_^_</span> \u0d86\u0db4\u0dc3\u0dd4 \u0dbd\u0db6\u0dcf \u0daf\u0dd9\u0db1\u0dca\u0db1\u0dda \u0db1\u0db8\u0dca </p>\n",
 "<p>If there are no more shortening (middle of the hourglass) </p>\n": "<p>\u0dad\u0dc0\u0dad\u0dca\u0d9a\u0dd9\u0da7\u0dd2 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0d9a\u0dca \u0db1\u0ddc\u0db8\u0dd0\u0dad\u0dd2 \u0db1\u0db8\u0dca (\u0db4\u0dd0\u0dba \u0dc0\u0dd3\u0daf\u0dd4\u0dbb\u0dd4\u0dc0 \u0db8\u0dd0\u0daf) </p>\n",
 "<p>If we are at the center of the hourglass, <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d85\u0db4\u0dd2\u0db4\u0dd0\u0dba \u0dc0\u0dd3\u0daf\u0dd4\u0dbb\u0dd4\u0dc0\u0dda \u0d9a\u0dda\u0db1\u0dca\u0daf\u0dca\u0dbb\u0dba\u0dda \u0dc3\u0dd2\u0da7\u0dd2\u0db1\u0dca\u0db1\u0dda \u0db1\u0db8\u0dca, <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Initial transformer layer <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d86\u0dbb\u0db8\u0dca\u0db7\u0d9a\u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dc3\u0dca\u0dae\u0dbb\u0dba <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Insert another hourglass model recursively </p>\n": "<p>\u0dad\u0dc0\u0dad\u0dca\u0db4\u0dd0\u0dba \u0dc0\u0dd3\u0daf\u0dd4\u0dbb\u0dd4 \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba\u0d9a\u0dca \u0db1\u0dd0\u0dc0\u0dad \u0db1\u0dd0\u0dc0\u0dad \u0d87\u0dad\u0dd4\u0dbd\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Pooling layer accepts shape <span translate=no>_^_0_^_</span> so we permute axes. </p>\n": "<p>\u0dad\u0da7\u0dcf\u0d9a\u0dc3\u0dca\u0dae\u0dbb\u0dba \u0dc4\u0dd0\u0da9\u0dba \u0db4\u0dd2\u0dc5\u0dd2\u0d9c\u0db1\u0dca\u0db1\u0dcf <span translate=no>_^_0_^_</span> \u0db6\u0dd0\u0dc0\u0dd2\u0db1\u0dca \u0d85\u0db4\u0dd2 \u0d85\u0d9a\u0dca\u0dc2 permute. </p>\n",
 "<p>Repeat across the sequence dimension </p>\n": "<p>\u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dd2\u0d9a\u0db8\u0dcf\u0db1\u0dba \u0dc4\u0dbb\u0dc4\u0dcf \u0db1\u0dd0\u0dc0\u0dad \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Shifting and shortening <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db8\u0dcf\u0dbb\u0dd4\u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0dc4 \u0d9a\u0dd9\u0da7\u0dd2 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Shortening or the down-sampling layer. We use the simplest form - average pooling. The paper shows that attention based down sampling works best, which we haven&#x27;t implemented yet. </p>\n": "<p>\u0d9a\u0dd9\u0da7\u0dd2\u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc4\u0ddd \u0db4\u0dc4\u0dc5-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2 \u0dc3\u0dca\u0dad\u0dbb\u0dba. \u0d85\u0db4\u0dd2 \u0dc3\u0dbb\u0dbd\u0db8 \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db8\u0dd4 - \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba \u0dad\u0da7\u0dcf\u0d9a. \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0db4\u0dd9\u0db1\u0dca\u0db1\u0dd4\u0db8\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1\u0dda \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0db4\u0daf\u0db1\u0db8\u0dca \u0d9a\u0dbb\u0d9c\u0dad\u0dca \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca \u0d85\u0db4 \u0dad\u0dc0\u0db8\u0dad\u0dca \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dbb \u0db1\u0ddc\u0db8\u0dd0\u0dad\u0dd2 \u0dc4\u0ddc\u0db3\u0db8 \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf \u0d9a\u0dbb\u0db1 \u0db6\u0dc0\u0dba\u0dd2. </p>\n",
 "<p>The center layer is another transformer layer </p>\n": "<p>\u0db8\u0dd0\u0daf\u0dc3\u0dca\u0dae\u0dbb\u0dba \u0dad\u0dc0\u0dad\u0dca \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0d9a\u0dd2 </p>\n",
 "<p>The final transformer layer after up-sampling </p>\n": "<p>\u0d89\u0dc4\u0dc5-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca\u0db4\u0dc3\u0dd4 \u0d85\u0dc0\u0dc3\u0db1\u0dca \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dc3\u0dca\u0dae\u0dbb\u0dba </p>\n",
 "<p>The shortening factor <span translate=no>_^_0_^_</span> (or the down-sampling rate) </p>\n": "<p>\u0d9a\u0dd9\u0da7\u0dd2\u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0dc3\u0dcf\u0db0\u0d9a\u0dba <span translate=no>_^_0_^_</span> (\u0dc4\u0ddd \u0db4\u0dc4\u0dc5-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2 \u0d85\u0db1\u0dd4\u0db4\u0dcf\u0dad\u0dba) </p>\n",
 "<p>The transformer layer before down-sampling </p>\n": "<p>\u0db4\u0dc4\u0dc5-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca\u0db4\u0dd9\u0dbb \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dc3\u0dca\u0dae\u0dbb\u0dba </p>\n",
 "<p>Truncate the extra embeddings at the end </p>\n": "<p>\u0d85\u0dc0\u0dc3\u0dcf\u0db1\u0dba\u0dda\u0d85\u0db8\u0dad\u0dbb \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0d89\u0dc0\u0dad\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Up-sample the shortened sequence and add a skip connection <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d9a\u0dd9\u0da7\u0dd2\u0d9a\u0dc5 \u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd \u0d89\u0dc4\u0dc5\u0da7 \u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd \u0d9a\u0dbb \u0db8\u0d9f \u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0dda \u0dc3\u0db8\u0dca\u0db6\u0db1\u0dca\u0db0\u0dad\u0dcf\u0dc0\u0dba\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Up-sampling layer. We use naive up-sampling for simplicity and the paper shows attention based up sampling works better. </p>\n": "<p>Up-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dc3\u0dca\u0dae\u0dbb\u0dba. \u0d85\u0db4\u0dd2 \u0dc3\u0dbb\u0dbd \u0db6\u0dc0 \u0dc3\u0db3\u0dc4\u0dcf \u0db6\u0ddc\u0dc5\u0db3 \u0d89\u0dc4\u0dc5 \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db1 \u0d85\u0dad\u0dbb \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0db4\u0dd9\u0db1\u0dca\u0db1\u0dd4\u0db8\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1\u0dda \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca \u0db4\u0daf\u0db1\u0db8\u0dca \u0d9a\u0dbb\u0d9c\u0dad\u0dca \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc0\u0da9\u0dcf \u0dc4\u0ddc\u0db3\u0dd2\u0db1\u0dca \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0dc0\u0db1 \u0db6\u0dc0\u0dba\u0dd2. </p>\n",
 "<p>We shift the tokens to the right by <span translate=no>_^_0_^_</span> steps to make sure information doesn&#x27;t leak from the future tokens to past tokens as a result of down-sampling and up-sampling </p>\n": "<p>\u0d85\u0db1\u0dcf\u0d9c\u0dad\u0da7\u0ddd\u0d9a\u0db1\u0dc0\u0dbd \u0dc3\u0dd2\u0da7 \u0d85\u0dad\u0dd3\u0dad \u0da7\u0ddd\u0d9a\u0db1 \u0dc0\u0dd9\u0dad \u0dad\u0ddc\u0dbb\u0dad\u0dd4\u0dbb\u0dd4 \u0d9a\u0dcf\u0db1\u0dca\u0daf\u0dd4 \u0db1\u0ddc\u0dc0\u0db1 \u0db6\u0dc0\u0da7 \u0dc0\u0d9c \u0db6\u0dbd\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0db4\u0dd2 \u0da7\u0ddd\u0d9a\u0db1 \u0daf\u0d9a\u0dd4\u0dab\u0da7 \u0db8\u0dcf\u0dbb\u0dd4 \u0d9a\u0dbb\u0db8\u0dd4. <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Zeros to be appended to the left </p>\n": "<p>Zeros\u0dc0\u0db8\u0da7 \u0d87\u0db4\u0dca\u0db4\u0dd9\u0db1\u0dca\u0da9\u0dca \u0d9a\u0dc5 \u0dba\u0dd4\u0dad\u0dd4\u0dba </p>\n",
 "<p>cannot be negative </p>\n": "<p>\u0d8d\u0dab\u0dcf\u0dad\u0dca\u0db8\u0d9a\u0dc0\u0dd2\u0dba \u0db1\u0ddc\u0dc4\u0dd0\u0d9a </p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is a tensor of shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dc4\u0dd0\u0da9\u0dba\u0dda \u0d86\u0dad\u0dad\u0dd2\u0d9a\u0dcf\u0dbb\u0dba\u0d9a\u0dd2 <span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is of shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dc4\u0dd0\u0da9\u0dba\u0dd9\u0db1\u0dca \u0dba\u0dd4\u0d9a\u0dca\u0dad \u0dc0\u0dda <span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of heads in <a href=\"../mha.html\">multi-head attention layers</a> </li>\n<li><span translate=no>_^_1_^_</span> is the size of the token embeddings </li>\n<li><span translate=no>_^_2_^_</span> is the dropout probability </li>\n<li><span translate=no>_^_3_^_</span> is the dimensionality of the hidden layer in <a href=\"../feed_forward.html\">position-wise feed-forward layers</a> </li>\n<li><span translate=no>_^_4_^_</span> is the list of shortening factors</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dba\u0db1\u0dd4 <a href=\"../mha.html\">\u0db6\u0dc4\u0dd4-\u0dc4\u0dd2\u0dc3 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0d9a\u0dbb\u0db1 \u0dc3\u0dca\u0dae\u0dbb\u0dc0\u0dbd</a> \u0dc4\u0dd2\u0dc3\u0dca \u0d9c\u0dab\u0db1 </li>\n<li><span translate=no>_^_1_^_</span> \u0da7\u0ddd\u0d9a\u0db1\u0dca \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc0\u0dbd \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba\u0dba\u0dd2 </li>\n<li><span translate=no>_^_2_^_</span> \u0d85\u0dad\u0dc4\u0dd0\u0dbb \u0daf\u0dd0\u0db8\u0dd3\u0db8\u0dda \u0dc3\u0db8\u0dca\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf\u0dc0 </li>\n<li><span translate=no>_^_3_^_</span> <a href=\"../feed_forward.html\">\u0dc3\u0dca\u0dae\u0dcf\u0db1-\u0db1\u0dd0\u0dab\u0dc0\u0dad\u0dca \u0db4\u0ddd\u0dc2\u0d9a-\u0d89\u0daf\u0dd2\u0dbb\u0dd2 \u0dc3\u0dca\u0dae\u0dbb</a> \u0dc0\u0dbd \u0dc3\u0dd0\u0d9f\u0dc0\u0dd4\u0dab\u0dd4 \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0dda \u0db8\u0dcf\u0db1\u0dba\u0db1\u0dca \u0dc0\u0dda </li>\n<li><span translate=no>_^_4_^_</span> \u0d9a\u0dd9\u0da7\u0dd2 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0dc3\u0dcf\u0db0\u0d9a \u0dbd\u0dd0\u0dba\u0dd2\u0dc3\u0dca\u0dad\u0dd4\u0dc0\u0dba\u0dd2</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of steps to shift by</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dc0\u0dd2\u0dc3\u0dd2\u0db1\u0dca \u0db8\u0dcf\u0dbb\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0db4\u0dd2\u0dba\u0dc0\u0dbb \u0d9c\u0dab\u0db1 \u0dc0\u0dda</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the shortening factor</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0d9a\u0dd9\u0da7\u0dd2 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0dc3\u0dcf\u0db0\u0d9a\u0dba\u0dba\u0dd2</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the tensor with embeddings before down-sampling </li>\n<li><span translate=no>_^_1_^_</span> is the tensor of higher density (to be up-sampled) representations</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0db4\u0dc4\u0dc5-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca \u0db4\u0dd9\u0dbb \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc3\u0db8\u0d9c tensor \u0dc0\u0dda </li>\n<li><span translate=no>_^_1_^_</span> \u0dba\u0db1\u0dd4 \u0d89\u0dc4\u0dc5 dens \u0db1\u0dad\u0dca\u0dc0\u0dba\u0dda \u0d86\u0dad\u0dad\u0dd2\u0dba\u0dba\u0dd2 (\u0d89\u0dc4\u0dc5\u0da7 \u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd \u0d9a\u0dc5 \u0dba\u0dd4\u0dad\u0dd4) \u0db1\u0dd2\u0dbb\u0dd6\u0db4\u0dab\u0dba\u0d9a\u0dd2</li></ul>\n",
 "Hierarchical Transformers Are More Efficient Language Models": "\u0db0\u0dd6\u0dbb\u0dcf\u0dc0\u0dbd\u0dd2 \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dc0\u0da9\u0dcf\u0dad\u0dca \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0d9a\u0dca\u0dc2\u0db8 \u0db7\u0dcf\u0dc2\u0dcf \u0d86\u0d9a\u0dd8\u0dad\u0dd2 \u0dc0\u0dda",
 "This is an annotated implementation/tutorial of hourglass model in PyTorch.": "\u0db8\u0dd9\u0dba PyTorch \u0dc4\u0dd2 \u0db4\u0dd0\u0dba \u0dc0\u0dd3\u0daf\u0dd4\u0dbb\u0dd4 \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba\u0dda \u0dc0\u0dd2\u0d9a\u0da7 \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8/\u0db1\u0dd2\u0db6\u0db1\u0dca\u0db0\u0db1\u0dba\u0d9a\u0dd2."
}