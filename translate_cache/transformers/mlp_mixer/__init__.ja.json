{
 "<h1>MLP-Mixer: An all-MLP Architecture for Vision</h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of the paper <a href=\"https://papers.labml.ai/paper/2105.01601\">MLP-Mixer: An all-MLP Architecture for Vision</a>.</p>\n<p>This paper applies the model on vision tasks. The model is similar to a transformer with attention layer being replaced by a MLP that is applied across the patches (or tokens in case of a NLP task).</p>\n<p>Our implementation of MLP Mixer is a drop in replacement for the <a href=\"../mha.html\">self-attention layer</a> in <a href=\"../models.html\">our transformer implementation</a>. So it&#x27;s just a couple of lines of code, transposing the tensor to apply the MLP across the sequence dimension.</p>\n<p>Although the paper applied MLP Mixer on vision tasks, we tried it on a <a href=\"../mlm/index.html\">masked language model</a>. <a href=\"experiment.html\">Here is the experiment code</a>.</p>\n": "<h1>MLP\u30df\u30ad\u30b5\u30fc:\u30d3\u30b8\u30e7\u30f3\u7528\u306e\u30aa\u30fc\u30ebMLP\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3</h1>\n<p>\u3053\u308c\u306f\u3001\u8ad6\u6587\u300c<a href=\"https://papers.labml.ai/paper/2105.01601\">MLP\u30df\u30ad\u30b5\u30fc\uff1a\u30d3\u30b8\u30e7\u30f3\u7528\u306e\u30aa\u30fc\u30ebMLP\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u300d<a href=\"https://pytorch.org\">\u3092PyTorch\u3067\u5b9f\u88c5\u3057\u305f\u3082\u306e\u3067\u3059</a></a>\u3002</p>\n<p>\u672c\u7a3f\u3067\u306f\u3001\u3053\u306e\u30e2\u30c7\u30eb\u3092\u30d3\u30b8\u30e7\u30f3\u30bf\u30b9\u30af\u306b\u9069\u7528\u3057\u307e\u3059\u3002\u3053\u306e\u30e2\u30c7\u30eb\u306f\u3001\u30a2\u30c6\u30f3\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u304c\u30d1\u30c3\u30c1\uff08NLP\u30bf\u30b9\u30af\u306e\u5834\u5408\u306f\u30c8\u30fc\u30af\u30f3\uff09\u5168\u4f53\u306b\u9069\u7528\u3055\u308c\u308bMLP\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u308b\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u306b\u4f3c\u3066\u3044\u307e\u3059</p>\u3002\n<p>MLP Mixer\u306e\u5b9f\u88c5\u306f\u3001<a href=\"../mha.html\"><a href=\"../models.html\">\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u5b9f\u88c5\u306e\u30bb\u30eb\u30d5\u30a2\u30c6\u30f3\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306b\u4ee3\u308f\u308b\u3082\u306e\u3067\u3059</a></a>\u3002\u3064\u307e\u308a\u3001\u30c6\u30f3\u30bd\u30eb\u3092\u8ee2\u7f6e\u3057\u3066\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u6b21\u5143\u5168\u4f53\u306b MLP \u3092\u9069\u7528\u3059\u308b\u3060\u3051\u306e\u30b3\u30fc\u30c9\u3067\u3059</p>\u3002\n<p>\u3053\u306e\u8ad6\u6587\u3067\u306f\u8996\u899a\u30bf\u30b9\u30af\u306bMLP Mixer\u3092\u9069\u7528\u3057\u307e\u3057\u305f\u304c\u3001<a href=\"../mlm/index.html\">\u30de\u30b9\u30af\u3055\u308c\u305f\u8a00\u8a9e\u30e2\u30c7\u30eb\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f</a>\u3002<a href=\"experiment.html\">\u3053\u308c\u304c\u5b9f\u9a13\u30b3\u30fc\u30c9\u3067\u3059</a>\u3002</p>\n",
 "<h2>MLP Mixer</h2>\n<p>This module is a drop-in replacement for <a href=\"../mha.html\">self-attention layer</a>. It transposes the input tensor before feeding it to the MLP and transposes back, so that the MLP is applied across the sequence dimension (across tokens or image patches) instead of the feature dimension.</p>\n": "<h2>MLP \u30df\u30ad\u30b5\u30fc</h2>\n<p>\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001<a href=\"../mha.html\">\u30bb\u30eb\u30d5\u30a2\u30c6\u30f3\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306b\u4ee3\u308f\u308b\u30c9\u30ed\u30c3\u30d7\u30a4\u30f3\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059</a>\u3002\u5165\u529b\u30c6\u30f3\u30bd\u30eb\u3092MLP\u306b\u30d5\u30a3\u30fc\u30c9\u3059\u308b\u524d\u306b\u8ee2\u7f6e\u3057\u3066\u623b\u3059\u306e\u3067\u3001MLP\u306f\u30d5\u30a3\u30fc\u30c1\u30e3\u30c7\u30a3\u30e1\u30f3\u30b7\u30e7\u30f3\u3067\u306f\u306a\u304f\u30b7\u30fc\u30b1\u30f3\u30b9\u30c7\u30a3\u30e1\u30f3\u30b7\u30e7\u30f3\u5168\u4f53\uff08\u30c8\u30fc\u30af\u30f3\u307e\u305f\u306f\u30a4\u30e1\u30fc\u30b8\u30d1\u30c3\u30c1\uff09\u306b\u9069\u7528\u3055\u308c\u307e\u3059</p>\u3002\n",
 "<p> </p>\n": "<p></p>\n",
 "<p> The <a href=\"../mha.html\">normal attention module</a> can be fed with different token embeddings for <span translate=no>_^_0_^_</span>,<span translate=no>_^_1_^_</span>, and <span translate=no>_^_2_^_</span> and a mask.</p>\n<p>We follow the same function signature so that we can replace it directly.</p>\n<p>For MLP mixing, <span translate=no>_^_3_^_</span> and masking is not possible. Shape of <span translate=no>_^_4_^_</span> (and <span translate=no>_^_5_^_</span> and <span translate=no>_^_6_^_</span>) is <span translate=no>_^_7_^_</span>.</p>\n": "<p><a href=\"../mha.html\">\u901a\u5e38\u306e\u30a2\u30c6\u30f3\u30b7\u30e7\u30f3\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306f</a>\u3001\u3001\u3001<span translate=no>_^_0_^_</span>\u3001<span translate=no>_^_1_^_</span>\u30de\u30b9\u30af\u306b\u3055\u307e\u3056\u307e\u306a\u30c8\u30fc\u30af\u30f3\u3092\u57cb\u3081\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<span translate=no>_^_2_^_</span></p>\n<p>\u540c\u3058\u95a2\u6570\u30b7\u30b0\u30cd\u30c1\u30e3\u306b\u5f93\u3046\u306e\u3067\u3001\u76f4\u63a5\u7f6e\u63db\u3067\u304d\u307e\u3059\u3002</p>\n<p><span translate=no>_^_3_^_</span>MLP\u30df\u30ad\u30b7\u30f3\u30b0\u7528\u3067\u3001\u30de\u30b9\u30ad\u30f3\u30b0\u306f\u3067\u304d\u307e\u305b\u3093\u3002<span translate=no>_^_4_^_</span>(<span translate=no>_^_5_^_</span>\u3068<span translate=no>_^_6_^_</span>) \u306e\u5f62\u306f\u3067\u3059<span translate=no>_^_7_^_</span>\u3002</p>\n",
 "<p><span translate=no>_^_0_^_</span>,<span translate=no>_^_1_^_</span>, and <span translate=no>_^_2_^_</span> all should be the same </p>\n": "<p><span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>\u3001\u3001<span translate=no>_^_2_^_</span>\u3059\u3079\u3066\u540c\u3058\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093</p>\n",
 "<p>Apply the MLP across tokens </p>\n": "<p>MLP \u3092\u30c8\u30fc\u30af\u30f3\u5168\u4f53\u306b\u9069\u7528</p>\n",
 "<p>Assign to <span translate=no>_^_0_^_</span> for clarity </p>\n": "<p><span translate=no>_^_0_^_</span>\u308f\u304b\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u5272\u308a\u5f53\u3066\u308b</p>\n",
 "<p>MLP mixer doesn&#x27;t support masking. i.e. all tokens will see all other token embeddings. </p>\n": "<p>MLP\u30df\u30ad\u30b5\u30fc\u306f\u30de\u30b9\u30ad\u30f3\u30b0\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u3064\u307e\u308a\u3001\u3059\u3079\u3066\u306e\u30c8\u30fc\u30af\u30f3\u306b\u4ed6\u306e\u3059\u3079\u3066\u306e\u30c8\u30fc\u30af\u30f3\u57cb\u3081\u8fbc\u307f\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002</p>\n",
 "<p>Transpose back into original form </p>\n": "<p>\u5143\u306e\u5f62\u5f0f\u306b\u623b\u3059</p>\n",
 "<p>Transpose so that the last dimension is the sequence dimension. New shape is <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6700\u5f8c\u306e\u6b21\u5143\u304c\u30b7\u30fc\u30b1\u30f3\u30b9\u6b21\u5143\u306b\u306a\u308b\u3088\u3046\u306b\u8ee2\u7f6e\u3057\u307e\u3059\u3002\u65b0\u3057\u3044\u5f62\u306f <span translate=no>_^_0_^_</span></p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the MLP module.</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u306f MLP \u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002</li></ul>\n",
 "MLP-Mixer: An all-MLP Architecture for Vision": "MLP\u30df\u30ad\u30b5\u30fc:\u30d3\u30b8\u30e7\u30f3\u7528\u306e\u30aa\u30fc\u30ebMLP\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3",
 "This is an annotated implementation/tutorial of MLP-Mixer: An all-MLP Architecture for Vision in PyTorch.": "\u3053\u308c\u306f\u3001MLP-Mixer: PyTorch\u306e\u30d3\u30b8\u30e7\u30f3\u7528\u306e\u30aa\u30fc\u30ebMLP\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u6ce8\u91c8\u4ed8\u304d\u306e\u5b9f\u88c5/\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u3059\u3002"
}