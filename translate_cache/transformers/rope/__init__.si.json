{
 "<h1>Rotary Positional Embeddings (RoPE)</h1>\n<p>This is an implementation of <a href=\"https://papers.labml.ai/paper/2104.09864\">Rotary Positional Embeddings (RoPE)</a> in <a href=\"https://pytorch.org\">PyTorch</a>.</p>\n<p>Rotary Positional Embeddings (RoPE) encode position information of tokens with a rotation matrix that naturally incorporates explicit relative position dependency.</p>\n<p>Here&#x27;s <a href=\"experiment.html\">the training code</a> for training a transformer model with RoPE  on Tiny Shakespeare dataset.</p>\n<p><a href=\"https://app.labml.ai/run/1cf508e693be11ecacc98de8b38a61fe\"><span translate=no>_^_0_^_</span></a></p>\n": "<h1>\u0dbb\u0ddc\u0da7\u0dbb\u0dd2\u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dd3\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca (\u0d9a\u0db9\u0dba)</h1>\n<p>\u0db8\u0dd9\u0dba <a href=\"https://pytorch.org\">PyTorch</a> \u0dc4\u0dd2 <a href=\"https://papers.labml.ai/paper/2104.09864\">\u0dbb\u0ddc\u0da7\u0dbb\u0dd2 \u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dd3\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca (\u0d9a\u0db9\u0dba)</a> \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dba\u0dd2. </p>\n<p>\u0dbb\u0ddc\u0da7\u0dbb\u0dd2\u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dd3\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca (\u0d9a\u0db9\u0dba) \u0da7\u0ddd\u0d9a\u0db1 \u0dc0\u0dbd \u0dc3\u0dca\u0dae\u0dcf\u0db1 \u0dad\u0ddc\u0dbb\u0dad\u0dd4\u0dbb\u0dd4 \u0db7\u0dca\u0dbb\u0db8\u0dab \u0d85\u0db1\u0dd4\u0d9a\u0dd8\u0dad\u0dd2\u0dba\u0d9a\u0dca \u0dc3\u0db8\u0d9f \u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dbb\u0db1 \u0d85\u0dad\u0dbb \u0d91\u0dba \u0dc3\u0dca\u0dc0\u0dcf\u0db7\u0dcf\u0dc0\u0dd2\u0d9a\u0dc0\u0db8 \u0db4\u0dd0\u0dc4\u0dd0\u0daf\u0dd2\u0dbd\u0dd2 \u0dc3\u0dcf\u0db4\u0dda\u0d9a\u0dca\u0dc2 \u0dc3\u0dca\u0dae\u0dcf\u0db1 \u0dba\u0dd0\u0db4\u0dd3\u0db8\u0d9a\u0dca \u0d87\u0dad\u0dd4\u0dc5\u0dad\u0dca \u0d9a\u0dbb\u0dba\u0dd2. </p>\n<p>\u0d9a\u0dd4\u0da9\u0dcf\u0dc2\u0dda\u0d9a\u0dca\u0dc3\u0dca\u0db4\u0dd2\u0dba\u0dbb\u0dca \u0daf\u0dad\u0dca\u0dad \u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba \u0db8\u0dad \u0d9a\u0db9\u0dba \u0dc3\u0dc4\u0dd2\u0dad \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba\u0d9a\u0dca \u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4 <a href=\"experiment.html\">\u0d9a\u0dda\u0dad\u0dba</a> \u0db8\u0dd9\u0db1\u0dca\u0db1. </p>\n<p><a href=\"https://app.labml.ai/run/1cf508e693be11ecacc98de8b38a61fe\"><span translate=no>_^_0_^_</span></a></p>\n",
 "<h2>Multi-head attention with rotary positional embeddings</h2>\n<p>We override <a href=\"../mha.html\">multi-head attention from original transformer</a>.</p>\n": "<h2>\u0db7\u0dca\u0dbb\u0db8\u0dab\u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dd3\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc3\u0dc4\u0dd2\u0dad \u0db6\u0dc4\u0dd4-\u0dc4\u0dd2\u0dc3 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba</h2>\n<p><a href=\"../mha.html\">\u0db8\u0dd4\u0dbd\u0dca \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dba\u0dd9\u0db1\u0dca \u0d85\u0db4\u0dd2 \u0db6\u0dc4\u0dd4-\u0dc4\u0dd2\u0dc3 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba</a>\u0d85\u0db7\u0dd2\u0db6\u0dc0\u0dcf \u0dba\u0db8\u0dd4. </p>\n",
 "<h2>RoPE module</h2>\n<p>Rotary encoding transforms pairs of features by rotating in the 2D plane. That is, it organizes the <span translate=no>_^_0_^_</span> features as <span translate=no>_^_1_^_</span> pairs. Each pair can be considered a coordinate in a 2D plane, and the encoding will rotate it by an angle depending on the position of the token.</p>\n<h3>For a pair of features</h3>\n<p>Let <span translate=no>_^_2_^_</span> and <span translate=no>_^_3_^_</span> be two features of the key or query of any head at position <span translate=no>_^_4_^_</span>. Or for simplicity assume <span translate=no>_^_5_^_</span> has only two features. Then the transformation is,</p>\n<span translate=no>_^_6_^_</span><p>where <span translate=no>_^_7_^_</span> is a constant angle. The other pairs of features are transformed similarly.</p>\n<h3>Attention is relative</h3>\n<p>For a pair of features, dot-product attention score between two positions <span translate=no>_^_8_^_</span> and <span translate=no>_^_9_^_</span> would be</p>\n<span translate=no>_^_10_^_</span><p>This shows that for dot-production attention the rotary encodings gives relative attention.</p>\n<h3>For all features</h3>\n<p>The features are grouped into pairs and handled as above. They use a different <span translate=no>_^_11_^_</span> for each pair.</p>\n<p>The paper suggests using <span translate=no>_^_12_^_</span> for the <span translate=no>_^_13_^_</span> pairs of features.</p>\n<p>We pair feature <span translate=no>_^_14_^_</span> with feature <span translate=no>_^_15_^_</span>. So for position <span translate=no>_^_16_^_</span> we transform</p>\n<span translate=no>_^_17_^_</span><p>to</p>\n<span translate=no>_^_18_^_</span>": "<h2>\u0d9a\u0db9\u0dba\u0db8\u0ddc\u0da9\u0dd2\u0dba\u0dd4\u0dbd\u0dba</h2>\n<p>\u0dbb\u0ddc\u0da7\u0dbb\u0dd2\u0d9a\u0dda\u0dad\u0dd3\u0d9a\u0dbb\u0dab\u0dba 2D \u0dad\u0dbd\u0dba \u0dad\u0dd4\u0dc5 \u0db7\u0dca\u0dbb\u0db8\u0dab\u0dba \u0dc0\u0dd3\u0db8\u0dd9\u0db1\u0dca \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0dba\u0dd4\u0d9c\u0dbd \u0db4\u0dbb\u0dd2\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0dba \u0d9a\u0dbb\u0dba\u0dd2. \u0d91\u0db1\u0db8\u0dca, \u0d91\u0dba <span translate=no>_^_0_^_</span> \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c <span translate=no>_^_1_^_</span> \u0dba\u0dd4\u0d9c\u0dbd \u0dbd\u0dd9\u0dc3 \u0dc3\u0d82\u0dc0\u0dd2\u0db0\u0dcf\u0db1\u0dba \u0d9a\u0dbb\u0dba\u0dd2. \u0dc3\u0dd1\u0db8 \u0dba\u0dd4\u0d9c\u0dbd\u0dba\u0d9a\u0dca\u0db8 2D \u0dad\u0dbd\u0dba\u0d9a \u0d9b\u0dab\u0dca\u0da9\u0dcf\u0d82\u0d9a\u0dba\u0d9a\u0dca \u0dbd\u0dd9\u0dc3 \u0dc3\u0dd0\u0dbd\u0d9a\u0dd2\u0dba \u0dc4\u0dd0\u0d9a\u0dd2 \u0d85\u0dad\u0dbb, \u0d9a\u0dda\u0dad\u0dd3\u0d9a\u0dbb\u0dab\u0dba \u0da7\u0ddd\u0d9a\u0db1\u0dba\u0dda \u0db4\u0dd2\u0dc4\u0dd2\u0da7\u0dd3\u0db8 \u0d85\u0db1\u0dd4\u0dc0 \u0d9a\u0ddd\u0dab\u0dba\u0d9a\u0dd2\u0db1\u0dca \u0d91\u0dba \u0db7\u0dca\u0dbb\u0db8\u0dab\u0dba \u0dc0\u0dda. </p>\n<h3>\u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c\u0dba\u0dd4\u0d9c\u0dbd\u0dba\u0d9a\u0dca \u0dc3\u0db3\u0dc4\u0dcf</h3>\n<p>\u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dba\u0dda <span translate=no>_^_2_^_</span> \u0dc3\u0dd2\u0da7\u0dd2\u0db1 <span translate=no>_^_3_^_</span> \u0d95\u0db1\u0dd1\u0db8 \u0db4\u0dca\u0dbb\u0db0\u0dcf\u0db1\u0dd2\u0dba\u0d9a\u0dd4\u0d9c\u0dda \u0dba\u0dad\u0dd4\u0dbb\u0dda \u0dc4\u0ddd \u0dc0\u0dd2\u0db8\u0dc3\u0dd4\u0db8\u0dda \u0dbd\u0d9a\u0dca\u0dc2\u0dab \u0daf\u0dd9\u0d9a\u0d9a\u0dca \u0dc0\u0dda\u0dc0\u0dcf <span translate=no>_^_4_^_</span>. \u0db1\u0dd0\u0dad\u0dc4\u0ddc\u0dad\u0dca \u0dc3\u0dbb\u0dbd \u0db6\u0dc0 \u0dc3\u0db3\u0dc4\u0dcf \u0d8b\u0db4\u0d9a\u0dbd\u0dca\u0db4\u0db1\u0dba <span translate=no>_^_5_^_</span> \u0d9a\u0dbb \u0d87\u0dad\u0dca\u0dad\u0dda \u0dbd\u0d9a\u0dca\u0dc2\u0dab \u0daf\u0dd9\u0d9a\u0d9a\u0dca \u0db4\u0db8\u0dab\u0dd2. \u0d91\u0dc0\u0dd2\u0da7 \u0db4\u0dbb\u0dd2\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0dba \u0dc0\u0db1\u0dca\u0db1\u0dda,</p>\n<span translate=no>_^_6_^_</span><p>\u0db1\u0dd2\u0dba\u0dad <span translate=no>_^_7_^_</span> \u0d9a\u0ddd\u0dab\u0dba\u0d9a\u0dca \u0d9a\u0ddc\u0dc4\u0dd9\u0daf? \u0d85\u0db1\u0dd9\u0d9a\u0dca \u0d85\u0d82\u0d9c \u0dba\u0dd4\u0d9c\u0dbd \u0d92 \u0dc4\u0dcf \u0dc3\u0db8\u0dcf\u0db1\u0dc0 \u0db4\u0dbb\u0dd2\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0dba \u0dc0\u0dda. </p>\n<h3>\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba\u0dc3\u0dcf\u0db4\u0dda\u0d9a\u0dca\u0dc2 \u0dc0\u0dda</h3>\n<p>\u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c\u0dba\u0dd4\u0d9c\u0dbd\u0dba\u0d9a\u0dca \u0dc3\u0db3\u0dc4\u0dcf, \u0dc3\u0dca\u0dae\u0dcf\u0db1 <span translate=no>_^_8_^_</span> \u0daf\u0dd9\u0d9a\u0d9a\u0dca \u0d85\u0dad\u0dbb \u0dad\u0dd2\u0dad\u0dca \u0db1\u0dd2\u0dc2\u0dca\u0db4\u0dcf\u0daf\u0db1 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dbd\u0d9a\u0dd4\u0dab\u0dd4 \u0d9a\u0dbb\u0dba\u0dd2 <span translate=no>_^_9_^_</span> </p>\n<span translate=no>_^_10_^_</span><p>\u0db8\u0dd9\u0dba\u0dd2\u0db1\u0dca\u0db4\u0dd9\u0db1\u0dd3 \u0dba\u0db1\u0dca\u0db1\u0dda \u0dad\u0dd2\u0dad\u0dca \u0db1\u0dd2\u0dc2\u0dca\u0db4\u0dcf\u0daf\u0db1 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0db3\u0dc4\u0dcf \u0db7\u0dca\u0dbb\u0db8\u0dab \u0d9a\u0dda\u0dad\u0dd3\u0d9a\u0dbb\u0dab \u0dc3\u0dcf\u0db4\u0dda\u0d9a\u0dca\u0dc2 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba\u0d9a\u0dca \u0dbd\u0db6\u0dcf \u0daf\u0dd9\u0db1 \u0db6\u0dc0\u0dba\u0dd2. </p>\n<h3>\u0dc3\u0dd2\u0dba\u0dbd\u0dd4\u0db8\u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0dc3\u0db3\u0dc4\u0dcf</h3>\n<p>\u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c\u0dba\u0dd4\u0d9c\u0dbd \u0dc0\u0dc1\u0dba\u0dd9\u0db1\u0dca \u0d9a\u0dcf\u0dab\u0dca\u0da9\u0d9c\u0dad \u0d9a\u0dbb \u0d89\u0dc4\u0dad \u0db4\u0dbb\u0dd2\u0daf\u0dd2 \u0dc4\u0dc3\u0dd4\u0dbb\u0dd4\u0dc0\u0db1\u0dd4 \u0dbd\u0dd0\u0db6\u0dda. \u0d94\u0dc0\u0dd4\u0db1\u0dca \u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0dba\u0dd4\u0d9c\u0dbd <span translate=no>_^_11_^_</span> \u0dc3\u0db3\u0dc4\u0dcf \u0dc0\u0dd9\u0db1\u0dc3\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0dba\u0dd2. </p>\n<p>\u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2\u0dba\u0ddd\u0da2\u0db1\u0dcf \u0d9a\u0dbb\u0db1\u0dca\u0db1\u0dda \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c <span translate=no>_^_13_^_</span> \u0dba\u0dd4\u0d9c\u0dbd <span translate=no>_^_12_^_</span> \u0dc3\u0db3\u0dc4\u0dcf \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dba\u0dd2. </p>\n<p>\u0d85\u0db4\u0dd2\u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c\u0dba <span translate=no>_^_14_^_</span> \u0dc3\u0db8\u0d9f \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c\u0dba \u0dba\u0dd4\u0d9c\u0dbd \u0d9a\u0dbb\u0db8\u0dd4 <span translate=no>_^_15_^_</span>. \u0d91\u0db6\u0dd0\u0dc0\u0dd2\u0db1\u0dca \u0db4\u0dd2\u0dc4\u0dd2\u0da7\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf <span translate=no>_^_16_^_</span> \u0d85\u0db4\u0dd2 \u0db4\u0dbb\u0dd2\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0dba \u0d9a\u0dbb\u0db8\u0dd4</p>\n<span translate=no>_^_17_^_</span><p>\u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7</p>\n<span translate=no>_^_18_^_</span>",
 "<h3>Calculate scores between queries and keys</h3>\n": "<h3>\u0dc0\u0dd2\u0db8\u0dc3\u0dd4\u0db8\u0dca\u0dc3\u0dc4 \u0dba\u0dad\u0dd4\u0dbb\u0dd4 \u0d85\u0dad\u0dbb \u0dbd\u0d9a\u0dd4\u0dab\u0dd4 \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1</h3>\n",
 "<p> </p>\n": "<p> </p>\n",
 "<p> Cache <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> values</p>\n": "<p> \u0dc4\u0dd0\u0db9\u0dd2\u0dbd\u0dd2 <span translate=no>_^_0_^_</span> \u0dc3\u0dc4 <span translate=no>_^_1_^_</span> \u0d85\u0d9c\u0dba\u0db1\u0dca</p>\n",
 "<p> Testing RoPE with a simple example</p>\n": "<p> \u0dc3\u0dbb\u0dbd\u0d8b\u0daf\u0dcf\u0dc4\u0dbb\u0dab\u0dba\u0d9a\u0dca \u0dc3\u0db8\u0d9f \u0d9a\u0db9\u0dba \u0db4\u0dbb\u0dd3\u0d9a\u0dca\u0dc2\u0dcf \u0d9a\u0dd2\u0dbb\u0dd3\u0db8</p>\n",
 "<p><span translate=no>_^_0_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span> </p>\n",
 "<p>Cache <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> values </p>\n": "<p>\u0dc4\u0dd0\u0db9\u0dd2\u0dbd\u0dd2 <span translate=no>_^_0_^_</span> \u0dc3\u0dc4 <span translate=no>_^_1_^_</span> \u0d85\u0d9c\u0dba\u0db1\u0dca </p>\n",
 "<p>Cache them </p>\n": "<p>\u0d92\u0dc0\u0dcf\u0dc4\u0dd0\u0db9\u0dd2\u0dbd\u0dd2\u0dba </p>\n",
 "<p>Calculate <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d9c\u0dab\u0db1\u0dba\u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Calculate dot-product with RoPE </p>\n": "<p>\u0d9a\u0db9\u0dba\u0dc3\u0db8\u0d9f \u0dad\u0dd2\u0dad\u0dca \u0db1\u0dd2\u0dc2\u0dca\u0db4\u0dcf\u0daf\u0db1 \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Calculate the product of position index and <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc3\u0dca\u0dae\u0dcf\u0db1\u0daf\u0dbb\u0dca\u0dc1\u0d9a\u0dba\u0dda \u0db1\u0dd2\u0dc2\u0dca\u0db4\u0dcf\u0daf\u0dd2\u0dad\u0dba \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Calculate</p>\n<span translate=no>_^_0_^_</span><p>for <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0d9c\u0dab\u0db1\u0dba\u0d9a\u0dbb\u0db1\u0dca\u0db1</p>\n<span translate=no>_^_0_^_</span><p>\u0dc3\u0db3\u0dc4\u0dcf <span translate=no>_^_1_^_</span> </p>\n",
 "<p>Concatenate so that for row <span translate=no>_^_0_^_</span> we have <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0db4\u0dda\u0dc5\u0dd2\u0dba\u0dc3\u0db3\u0dc4\u0dcf <span translate=no>_^_0_^_</span> \u0d85\u0db4\u0da7 \u0d87\u0dad\u0dd2 \u0db4\u0dbb\u0dd2\u0daf\u0dd2 \u0dc3\u0d82\u0dba\u0dd4\u0d9a\u0dca\u0dad \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_1_^_</span> </p>\n",
 "<p>Create position indexes <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc3\u0dca\u0dae\u0dcf\u0db1\u0daf\u0dbb\u0dca\u0dc1\u0d9a \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Get sequence length </p>\n": "<p>\u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dd2\u0d9a\u0daf\u0dd2\u0d9c \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Return if cache is already built </p>\n": "<p>\u0dc4\u0dd0\u0db9\u0dd2\u0dbd\u0dd2\u0dba\u0daf\u0dd0\u0db1\u0da7\u0db8\u0dad\u0dca \u0d89\u0daf\u0dd2\u0d9a\u0dbb \u0d87\u0dad\u0dca\u0db1\u0db8\u0dca \u0d86\u0db4\u0dc3\u0dd4 \u0dba\u0db1\u0dca\u0db1 </p>\n",
 "<p>Rotary positional embedding layers </p>\n": "<p>\u0db7\u0dca\u0dbb\u0db8\u0dab\u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dd3\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dda \u0dc3\u0dca\u0dae\u0dbb </p>\n",
 "<p>Split the features, we can choose to apply rotary embeddings only to a partial set of features. </p>\n": "<p>\u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c\u0db6\u0dd9\u0daf\u0db1\u0dca\u0db1, \u0d85\u0db4\u0da7 \u0db7\u0dca\u0dbb\u0db8\u0dab \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dba\u0dd9\u0daf\u0dd3\u0db8\u0da7 \u0dad\u0ddd\u0dbb\u0dcf \u0d9c\u0dad \u0dc4\u0dd0\u0d9a\u0dca\u0d9a\u0dda \u0d85\u0dbb\u0dca\u0db0 \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0dc3\u0db8\u0dd6\u0dc4\u0dba\u0d9a\u0da7 \u0db4\u0db8\u0dab\u0dd2. </p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the Tensor at the head of a key or a query with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dba\u0db1\u0dd4 \u0dba\u0dad\u0dd4\u0dbb\u0d9a \u0dc4\u0dd2\u0dc3\u0dd9\u0dc4\u0dd2 \u0da7\u0dd9\u0db1\u0dca\u0dc3\u0dbb\u0dca \u0dc4\u0ddd \u0dc4\u0dd0\u0da9\u0dba \u0dc3\u0dc4\u0dd2\u0dad \u0dc0\u0dd2\u0db8\u0dc3\u0dd4\u0db8\u0d9a\u0dd2 <span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of features <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span> is the constant used for calculating <span translate=no>_^_3_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dba\u0db1\u0dd4 \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0d9c\u0dab\u0db1 <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span> \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db1 \u0db1\u0dd2\u0dba\u0dad\u0dba <span translate=no>_^_3_^_</span></li></ul>\n",
 "Annotated implementation of RoPE from paper RoFormer: Enhanced Transformer with Rotary Position Embedding": "\u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0dbb\u0ddd\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dc0\u0dd9\u0dad\u0dd2\u0db1\u0dca \u0d9a\u0db9\u0dba \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8: \u0dbb\u0ddc\u0da7\u0dbb\u0dd2 \u0dc3\u0dca\u0dae\u0dcf\u0db1 \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8 \u0dc3\u0db8\u0d9f \u0dc0\u0dd0\u0da9\u0dd2 \u0daf\u0dd2\u0dba\u0dd4\u0dab\u0dd4 \u0d9a\u0dbb\u0db1 \u0dbd\u0daf \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca",
 "Rotary Positional Embeddings (RoPE)": "\u0dbb\u0ddc\u0da7\u0dbb\u0dd2 \u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dd3\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca (\u0d9a\u0db9\u0dba)"
}