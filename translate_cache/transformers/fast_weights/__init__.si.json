{
 "<h1>Fast weights transformer</h1>\n<p>The paper <a href=\"https://papers.labml.ai/paper/2102.11174\">Linear Transformers Are Secretly Fast Weight Memory Systems in PyTorch</a> finds similarities between linear self-attention and fast weight systems and makes modifications to self-attention update rule based on that. It also introduces a simpler, yet effective kernel function.</p>\n<p><em>The authors have provided an <a href=\"https://github.com/ischlag/fast-weight-transformers\">official implementation</a> of the paper including other variants they compare with in the paper.</em></p>\n<h2>Fast weights</h2>\n<p>Consider a sequence of inputs <span translate=no>_^_0_^_</span> or length <span translate=no>_^_1_^_</span> and each step is a vector of size <span translate=no>_^_2_^_</span>; i.e. <span translate=no>_^_3_^_</span>. The fast weight model generates a weight matrix at each step to produce output <span translate=no>_^_4_^_</span>, <span translate=no>_^_5_^_</span></p>\n<span translate=no>_^_6_^_</span><p><span translate=no>_^_7_^_</span> is the outer product (<span translate=no>_^_8_^_</span>), where elements of the two vectors are multiplied with each other to give a matrix. <span translate=no>_^_9_^_</span> is an activation function. <span translate=no>_^_10_^_</span> and <span translate=no>_^_11_^_</span> are trainable weights (parameters). <span translate=no>_^_12_^_</span> are the fast weights that are generated at each step.</p>\n<h2>Linear self-attention</h2>\n<p>Original transformer self-attention is, (omitting <span translate=no>_^_13_^_</span> for clarity)</p>\n<span translate=no>_^_14_^_</span><p>where <span translate=no>_^_15_^_</span></p>\n<p>The idea behind linearizing self attention is to replace softmax kernel <span translate=no>_^_16_^_</span> with a different kernel <span translate=no>_^_17_^_</span> so that we can calculate the denominator of the self attention function faster:</p>\n<p><span translate=no>_^_18_^_</span></p>\n<p>This gives</p>\n<span translate=no>_^_19_^_</span><p>With <span translate=no>_^_20_^_</span> and <span translate=no>_^_21_^_</span>, we can calculate them efficiently:</p>\n<span translate=no>_^_22_^_</span><p>This is quite similar to fast weights.</p>\n<p>The paper introduces a new linear attention projection function <span translate=no>_^_23_^_</span> a new update rule for <span translate=no>_^_24_^_</span> and change the normalization <span translate=no>_^_25_^_</span></p>\n<p>Here are <a href=\"experiment.html\">the training code</a> and a notebook for training a fast weights  transformer on the Tiny Shakespeare dataset.</p>\n<p><a href=\"https://colab.research.google.com/github/labmlai/annotated_deep_learning_paper_implementations/blob/master/labml_nn/transformers/fast_weights/experiment.ipynb\"><span translate=no>_^_26_^_</span></a> <a href=\"https://app.labml.ai/run/928aadc0846c11eb85710242ac1c0002\"><span translate=no>_^_27_^_</span></a></p>\n": "<h1>\u0dc0\u0dda\u0d9c\u0dba\u0dd9\u0db1\u0dca\u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0db6\u0dbb</h1>\n<p>\u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 <a href=\"https://papers.labml.ai/paper/2102.11174\">\u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0db4\u0dba\u0dd2\u0da7\u0ddd\u0dbb\u0dca\u0da0\u0dca \u0dc4\u0dd2 \u0dbb\u0dc4\u0dc3\u0dd2\u0db1\u0dca \u0dc0\u0dda\u0d9c\u0dc0\u0dad\u0dca \u0db6\u0dbb \u0db8\u0dad\u0d9a \u0db4\u0daf\u0dca\u0db0\u0dad\u0dd2</a> \u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dc4 \u0dc0\u0dda\u0d9c\u0dc0\u0dad\u0dca \u0db6\u0dbb \u0db4\u0daf\u0dca\u0db0\u0dad\u0dd2 \u0d85\u0dad\u0dbb \u0dc3\u0db8\u0dcf\u0db1\u0d9a\u0db8\u0dca \u0dc3\u0ddc\u0dba\u0dcf \u0d9c\u0db1\u0dca\u0db1\u0dcf \u0d85\u0dad\u0dbb \u0d92 \u0db8\u0dad \u0db4\u0daf\u0db1\u0db8\u0dca\u0dc0 \u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0dcf\u0dc0\u0dad\u0dca\u0d9a\u0dcf\u0dbd\u0dd3\u0db1 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0dbb\u0dd3\u0dad\u0dd2\u0dba\u0da7 \u0dc0\u0dd9\u0db1\u0dc3\u0dca \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dca \u0dc3\u0dd2\u0daf\u0dd4 \u0d9a\u0dbb\u0dba\u0dd2. \u0d91\u0dba \u0dc3\u0dbb\u0dbd, \u0db1\u0db8\u0dd4\u0dad\u0dca effective \u0dbd\u0daf\u0dcf\u0dba\u0dd3 \u0d9a\u0dbb\u0dca\u0db1\u0dbd\u0dca \u0dc1\u0dca\u0dbb\u0dd2\u0dad\u0dba\u0d9a\u0dca \u0daf \u0dc4\u0db3\u0dd4\u0db1\u0dca\u0dc0\u0dcf \u0daf\u0dd9\u0dba\u0dd2. </p>\n<p><em>\u0d9a\u0dad\u0dd4\u0dc0\u0dbb\u0dd4\u0db1\u0dca\u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0dc3\u0db8\u0d9f \u0dc3\u0d82\u0dc3\u0db1\u0dca\u0daf\u0db1\u0dba \u0d9a\u0dbb\u0db1 \u0dc0\u0dd9\u0db1\u0dad\u0dca \u0db4\u0dca\u0dbb\u0db7\u0dda\u0daf \u0d87\u0dad\u0dd4\u0dc5\u0dd4\u0dc0 \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 <a href=\"https://github.com/ischlag/fast-weight-transformers\">\u0db1\u0dd2\u0dbd \u0dc0\u0dc1\u0dba\u0dd9\u0db1\u0dca \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a</a> \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0d9a\u0dca \u0dbd\u0db6\u0dcf \u0daf\u0dd3 \u0d87\u0dad. </em></p>\n<h2>\u0dc0\u0dda\u0d9c\u0dc0\u0dad\u0dca\u0db6\u0dbb</h2>\n<p>\u0dba\u0dd9\u0daf\u0dc0\u0dd4\u0db8\u0dca <span translate=no>_^_0_^_</span> \u0dc4\u0ddd \u0daf\u0dd2\u0d9c <span translate=no>_^_1_^_</span> \u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd\u0d9a\u0dca \u0dc3\u0dbd\u0d9a\u0dcf \u0db6\u0dbd\u0db1\u0dca\u0db1. \u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0db4\u0dd2\u0dba\u0dc0\u0dbb \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba\u0dda \u0daf\u0ddb\u0dc1\u0dd2\u0d9a\u0dba\u0d9a\u0dd2 <span translate=no>_^_2_^_</span>; i.e <span translate=no>_^_3_^_</span>. \u0dc0\u0dda\u0d9c\u0dc0\u0dad\u0dca \u0db6\u0dbb \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0daf\u0dcf\u0db1\u0dba \u0db1\u0dd2\u0dc2\u0dca\u0db4\u0dcf\u0daf\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0dd1\u0db8 \u0db4\u0dd2\u0dba\u0dc0\u0dbb\u0d9a\u0daf\u0dd3\u0db8 \u0db6\u0dbb \u0d85\u0db1\u0dd4\u0d9a\u0dd8\u0dad\u0dd2\u0dba\u0d9a\u0dca \u0da2\u0db1\u0db1\u0dba \u0d9a\u0dbb\u0dba\u0dd2 <span translate=no>_^_4_^_</span>, <span translate=no>_^_5_^_</span></p>\n<span translate=no>_^_6_^_</span><p><span translate=no>_^_7_^_</span> \u0dba\u0db1\u0dd4 \u0db4\u0dd2\u0da7\u0dad \u0db1\u0dd2\u0dc2\u0dca\u0db4\u0dcf\u0daf\u0dd2\u0dad\u0dba (<span translate=no>_^_8_^_</span>), \u0d85\u0db1\u0dd4\u0d9a\u0dd8\u0dad\u0dd2\u0dba\u0d9a\u0dca \u0dbd\u0db6\u0dcf \u0daf\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0daf\u0ddb\u0dc1\u0dd2\u0d9a \u0daf\u0dd9\u0d9a\u0dda \u0db8\u0dd6\u0dbd\u0daf\u0dca\u0dbb\u0dc0\u0dca\u0dba \u0d91\u0d9a\u0dd2\u0db1\u0dd9\u0d9a\u0dcf \u0dc3\u0db8\u0d9f \u0d9c\u0dd4\u0dab \u0d9a\u0dbb\u0db1\u0dd4 \u0dbd\u0dd0\u0db6\u0dda. <span translate=no>_^_9_^_</span> \u0dba\u0db1\u0dd4 \u0dc3\u0d9a\u0dca\u0dbb\u0dd2\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0dba\u0d9a\u0dd2. <span translate=no>_^_10_^_</span> \u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4 \u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2 \u0db6\u0dbb (\u0db4\u0dbb\u0dcf\u0db8\u0dd2\u0dad\u0dd3\u0db1\u0dca) \u0dc0\u0dda. <span translate=no>_^_11_^_</span> <span translate=no>_^_12_^_</span> \u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0db4\u0dd2\u0dba\u0dc0\u0dbb\u0dda\u0daf\u0dd3 \u0da2\u0db1\u0db1\u0dba \u0dc0\u0db1 \u0dc0\u0dda\u0d9c\u0dc0\u0dad\u0dca \u0db6\u0dbb \u0dc0\u0dda. </p>\n<h2>\u0dbb\u0dda\u0d9b\u0dd3\u0dba\u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba</h2>\n<p>\u0db8\u0dd4\u0dbd\u0dca\u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0db1\u0dd4, (\u0db4\u0dd0\u0dc4\u0dd0\u0daf\u0dd2\u0dbd\u0dd2 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 <span translate=no>_^_13_^_</span> \u0dc3\u0db3\u0dc4\u0dcf \u0db8\u0d9f \u0dc4\u0dd0\u0dbb\u0dd3\u0db8)</p>\n<span translate=no>_^_14_^_</span><p>\u0d9a\u0ddc\u0dc4\u0dda\u0daf <span translate=no>_^_15_^_</span></p>\n<p>\u0dc3\u0dca\u0dc0\u0dba\u0d82\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dbb\u0dda\u0d9b\u0dd3\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0db4\u0dd2\u0da7\u0dd4\u0db4\u0dc3 \u0d87\u0dad\u0dd2 \u0d85\u0daf\u0dc4\u0dc3 \u0db1\u0db8\u0dca, \u0dc3\u0ddc\u0dc6\u0dca\u0da7\u0dca\u0db8\u0dd0\u0d9a\u0dca\u0dc3\u0dca \u0d9a\u0dbb\u0dca\u0db1\u0dbd\u0dba \u0dc0\u0dd9\u0db1\u0dad\u0dca \u0d9a\u0dbb\u0dca\u0db1\u0dbd\u0dba\u0d9a\u0dca <span translate=no>_^_16_^_</span> \u0dc3\u0db8\u0d9f \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0dc3\u0dca\u0dae\u0dcf\u0db4\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dba\u0dd2, <span translate=no>_^_17_^_</span> \u0d91\u0dc0\u0dd2\u0da7 \u0d85\u0db4\u0da7 \u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0d9a\u0dcf\u0dbb\u0dd2\u0dad\u0dca\u0dc0\u0dba\u0dda \u0dc4\u0dbb\u0dba \u0dc0\u0dda\u0d9c\u0dba\u0dd9\u0db1\u0dca \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2\u0dba:</p>\n<p><span translate=no>_^_18_^_</span></p>\n<p>\u0db8\u0dd9\u0dba\u0dbd\u0db6\u0dcf \u0daf\u0dd9\u0dba\u0dd2</p>\n<span translate=no>_^_19_^_</span><p>\u0d85\u0db4\u0da7\u0d92\u0dc0\u0dcf \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0d9a\u0dca\u0dc2\u0db8\u0dc0 \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2\u0dba: <span translate=no>_^_20_^_</span> <span translate=no>_^_21_^_</span></p>\n<span translate=no>_^_22_^_</span><p>\u0db8\u0dd9\u0dba\u0dc0\u0dda\u0d9c\u0dc0\u0dad\u0dca \u0db6\u0dbb\u0da7 \u0db6\u0dd9\u0dc4\u0dd9\u0dc0\u0dd2\u0db1\u0dca \u0dc3\u0db8\u0dcf\u0db1 \u0dba. </p>\n<p>\u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2\u0db1\u0dc0 \u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0db4\u0dca\u0dbb\u0d9a\u0dca\u0dc2\u0dda\u0db4\u0dab <span translate=no>_^_23_^_</span> \u0dc1\u0dca\u0dbb\u0dd2\u0dad\u0dba\u0d9a\u0dca \u0dc4\u0db3\u0dd4\u0db1\u0dca\u0dc0\u0dcf \u0daf\u0dd9\u0db1 <span translate=no>_^_24_^_</span> \u0d85\u0dad\u0dbb \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0dc0\u0dd9\u0db1\u0dc3\u0dca \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0db1\u0dc0 \u0dba\u0dcf\u0dc0\u0dad\u0dca\u0d9a\u0dcf\u0dbd\u0dd3\u0db1 \u0dbb\u0dd3\u0dad\u0dd2\u0dba\u0d9a\u0dca <span translate=no>_^_25_^_</span></p>\n<p>\u0d9a\u0dd4\u0da9\u0dcf\u0dc2\u0dda\u0d9a\u0dca\u0dc3\u0dca\u0db4\u0dd2\u0dba\u0dbb\u0dca \u0daf\u0dad\u0dca\u0dad <a href=\"experiment.html\">\u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba\u0dd9\u0dc4\u0dd2 \u0dc0\u0dda\u0d9c\u0dc0\u0dad\u0dca \u0db6\u0dbb \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dba\u0d9a\u0dca \u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4 \u0d9a\u0dda\u0dad\u0dba</a> \u0dc3\u0dc4 \u0dc3\u0da7\u0dc4\u0db1\u0dca \u0db4\u0ddc\u0dad\u0d9a\u0dca \u0db8\u0dd9\u0db1\u0dca\u0db1. </p>\n<p><a href=\"https://colab.research.google.com/github/labmlai/annotated_deep_learning_paper_implementations/blob/master/labml_nn/transformers/fast_weights/experiment.ipynb\"><span translate=no>_^_26_^_</span></a> <a href=\"https://app.labml.ai/run/928aadc0846c11eb85710242ac1c0002\"> <span translate=no>_^_27_^_</span></a></p>\n",
 "<h2>Deterministic Parameter Free Project (DPFP)</h2>\n<p>This is the new projection function <span translate=no>_^_0_^_</span> introduced in the paper. DPFP projects <span translate=no>_^_1_^_</span> of dimensionality <span translate=no>_^_2_^_</span> to dimensionality <span translate=no>_^_3_^_</span>, where <span translate=no>_^_4_^_</span> is a hyper-parameter.</p>\n<p><span translate=no>_^_5_^_</span></p>\n<p>where <span translate=no>_^_6_^_</span> is the concatenation of <span translate=no>_^_7_^_</span> and <span translate=no>_^_8_^_</span> to give a vector of size <span translate=no>_^_9_^_</span>, <span translate=no>_^_10_^_</span>, and <span translate=no>_^_11_^_</span>. <span translate=no>_^_12_^_</span> is the <span translate=no>_^_13_^_</span>-th element of vector <span translate=no>_^_14_^_</span> and is rolled around if <span translate=no>_^_15_^_</span> is larger than the number of elements in <span translate=no>_^_16_^_</span>.</p>\n<p>Basically, it creates a new vector by multiplying elements of <span translate=no>_^_17_^_</span> shifted by <span translate=no>_^_18_^_</span>.</p>\n<p>This produces projections that are sparse (only a few elements of <span translate=no>_^_19_^_</span> are non-zero) and orthogonal (<span translate=no>_^_20_^_</span> for most <span translate=no>_^_21_^_</span> unless <span translate=no>_^_22_^_</span> and <span translate=no>_^_23_^_</span> are very similar.</p>\n<h3>Normalization</h3>\n<p>Paper introduces a simple normalization for <span translate=no>_^_24_^_</span>,</p>\n<p><span translate=no>_^_25_^_</span></p>\n<p><em>Check the paper for derivation.</em></p>\n": "<h2>\u0db1\u0dd2\u0dbb\u0dca\u0db1\u0dc0\u0dcf\u0daf\u0dd3\u0db4\u0dbb\u0dcf\u0db8\u0dd2\u0dad\u0dd2 \u0db1\u0dd2\u0daf\u0dc4\u0dc3\u0dca \u0dc0\u0dca\u0dba\u0dcf\u0db4\u0dd8\u0dad\u0dd2\u0dba (DPFP)</h2>\n<p>\u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2\u0dad\u0dd4\u0dc5 <span translate=no>_^_0_^_</span> \u0dc4\u0db3\u0dd4\u0db1\u0dca\u0dc0\u0dcf \u0daf\u0dd3 \u0d87\u0dad\u0dd2 \u0db1\u0dc0 \u0db4\u0dca\u0dbb\u0d9a\u0dca\u0dc2\u0dda\u0db4\u0dab \u0dc1\u0dca\u0dbb\u0dd2\u0dad\u0dba \u0db8\u0dd9\u0dba\u0dba\u0dd2. \u0da9\u0dd3\u0db4\u0dd3\u0d91\u0dc6\u0dca\u0db4\u0dd3 \u0dc0\u0dca\u0dba\u0dcf\u0db4\u0dd8\u0dad\u0dd2 <span translate=no>_^_1_^_</span> <span translate=no>_^_2_^_</span> \u0db8\u0dcf\u0db1\u0dba\u0db1\u0dca\u0dc4\u0dd2 \u0db8\u0dcf\u0db1\u0dba\u0db1\u0dca\u0dc4\u0dd2 \u0db8\u0dcf\u0db1\u0dba\u0db1\u0dca <span translate=no>_^_3_^_</span>, \u0d85\u0db0\u0dd2-\u0db4\u0dbb\u0dcf\u0db8\u0dd2\u0dad\u0dd2\u0dba\u0d9a\u0dca \u0d9a\u0ddc\u0dc4\u0dd9\u0daf? <span translate=no>_^_4_^_</span> </p>\n<p><span translate=no>_^_5_^_</span></p>\n<p>\u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba\u0dda\u0daf\u0ddb\u0dc1\u0dd2\u0d9a\u0dba\u0d9a\u0dca \u0dbd\u0db6\u0dcf <span translate=no>_^_8_^_</span> \u0daf\u0dd3\u0db8 <span translate=no>_^_7_^_</span> \u0dc3\u0dc4 <span translate=no>_^_6_^_</span> \u0d9a\u0ddc\u0dad\u0dd0\u0db1\u0daf <span translate=no>_^_9_^_</span><span translate=no>_^_10_^_</span>, \u0dc3\u0dc4 <span translate=no>_^_11_^_</span>. <span translate=no>_^_12_^_</span> \u0dba\u0db1\u0dd4 \u0daf\u0ddb\u0dc1\u0dd2\u0d9a\u0dba\u0dda <span translate=no>_^_13_^_</span>-th \u0db8\u0dd6\u0dbd\u0daf\u0dca\u0dbb\u0dc0\u0dca\u0dba\u0dba \u0dc0\u0db1 <span translate=no>_^_14_^_</span> \u0d85\u0dad\u0dbb \u0d91\u0dba \u0db8\u0dd6\u0dbd\u0daf\u0dca\u0dbb\u0dc0\u0dca\u0dba \u0d9c\u0dab\u0db1\u0da7 \u0dc0\u0da9\u0dcf \u0dc0\u0dd2\u0dc1\u0dcf\u0dbd \u0db1\u0db8\u0dca <span translate=no>_^_15_^_</span> \u0dc0\u0da7\u0dcf \u0dbb\u0ddd\u0dbd\u0dca \u0d9a\u0dbb \u0d87\u0dad <span translate=no>_^_16_^_</span>. </p>\n<p>\u0db8\u0dd6\u0dbd\u0dd2\u0d9a\u0dc0\u0dc1\u0dba\u0dd9\u0db1\u0dca, \u0d91\u0dba <span translate=no>_^_17_^_</span> \u0db8\u0dcf\u0dbb\u0dd4 \u0d9a\u0dbb\u0db1 \u0dbd\u0daf \u0db8\u0dd6\u0dbd\u0daf\u0dca\u0dbb\u0dc0\u0dca\u0dba \u0d9c\u0dd4\u0dab \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dd9\u0db1\u0dca \u0db1\u0dc0 \u0daf\u0ddb\u0dc1\u0dd2\u0d9a\u0dba\u0d9a\u0dca \u0db1\u0dd2\u0dbb\u0dca\u0db8\u0dcf\u0dab\u0dba \u0d9a\u0dbb\u0dba\u0dd2 <span translate=no>_^_18_^_</span>. </p>\n<p>\u0db8\u0dd9\u0dba\u0dc0\u0dd2\u0dbb\u0dbd (\u0dc1\u0dd4\u0db1\u0dca\u0dba \u0db1\u0ddc\u0dc0\u0db1 \u0db8\u0dd6\u0dbd\u0daf\u0dca\u0dbb\u0dc0\u0dca\u0dba \u0d9a\u0dd2\u0dc4\u0dd2\u0db4\u0dba\u0d9a\u0dca \u0db4\u0db8\u0dab\u0dd2) \u0dc3\u0dc4 \u0dc0\u0dd2\u0d9a\u0dbd\u0dcf\u0d82\u0d9c (<span translate=no>_^_20_^_</span> \u0db6\u0ddc\u0dc4\u0ddd \u0dc0\u0dd2\u0da7 <span translate=no>_^_21_^_</span> \u0db8\u0dd2\u0dc3 <span translate=no>_^_22_^_</span> \u0dc3\u0dc4 <span translate=no>_^_19_^_</span> <span translate=no>_^_23_^_</span> \u0d89\u0dad\u0dcf \u0dc3\u0db8\u0dcf\u0db1 \u0dba. </p>\n<h3>\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u200d\u0dba\u0d9a\u0dbb\u0dab\u0dba</h3>\n<p>\u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2\u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0dbb\u0dbd \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba\u0d9a\u0dca \u0dc4\u0db3\u0dd4\u0db1\u0dca\u0dc0\u0dcf \u0daf\u0dd9\u0dba\u0dd2 <span translate=no>_^_24_^_</span>,</p>\n<p><span translate=no>_^_25_^_</span></p>\n<p><em>\u0dc0\u0dca\u0dba\u0dd4\u0dad\u0dca\u0db4\u0db1\u0dca\u0db1\u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0db4\u0dbb\u0dd3\u0d9a\u0dca\u0dc2\u0dcf \u0d9a\u0dbb\u0db1\u0dca\u0db1. </em></p>\n",
 "<h2>Fast Weights Attention</h2>\n<p>The paper introduces a new update rule for calculating <span translate=no>_^_0_^_</span>. The model first retrieves the current value <span translate=no>_^_1_^_</span> paired with the key <span translate=no>_^_2_^_</span>. Then stores a combination <span translate=no>_^_3_^_</span> of the retrieved value <span translate=no>_^_4_^_</span> and the input <span translate=no>_^_5_^_</span>.</p>\n<span translate=no>_^_6_^_</span><p>where <span translate=no>_^_7_^_</span> is a trainable parameter and <span translate=no>_^_8_^_</span> is the sigmoid function.</p>\n<p>Note that we don&#x27;t need the normalization term <span translate=no>_^_9_^_</span> because <span translate=no>_^_10_^_</span> is normalized.</p>\n": "<h2>\u0dc0\u0dda\u0d9c\u0dc0\u0dad\u0dca\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0db6\u0dbb</h2>\n<p>\u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2\u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0db1\u0dc0 \u0dba\u0dcf\u0dc0\u0dad\u0dca\u0d9a\u0dcf\u0dbd\u0dd3\u0db1 \u0dbb\u0dd3\u0dad\u0dd2\u0dba\u0d9a\u0dca \u0dc4\u0db3\u0dd4\u0db1\u0dca\u0dc0\u0dcf \u0daf\u0dd9\u0dba\u0dd2 <span translate=no>_^_0_^_</span>. \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba \u0db8\u0dd4\u0dbd\u0dd2\u0db1\u0dca\u0db8 \u0dba\u0dad\u0dd4\u0dbb \u0dc3\u0db8\u0d9f <span translate=no>_^_1_^_</span> \u0dba\u0dd4\u0d9c\u0dbd\u0db1\u0dba \u0d9a\u0dbb\u0db1 \u0dbd\u0daf \u0dc0\u0dad\u0dca\u0db8\u0db1\u0dca \u0d85\u0d9c\u0dba \u0dbd\u0db6\u0dcf <span translate=no>_^_2_^_</span>\u0d9c\u0db1\u0dd3. \u0d89\u0db1\u0dca\u0db4\u0dc3\u0dd4 \u0db1\u0dd0\u0dc0\u0dad \u0dbd\u0db6\u0dcf \u0d9c\u0dad\u0dca \u0d85\u0d9c\u0dba <span translate=no>_^_4_^_</span> \u0dc3\u0dc4 <span translate=no>_^_3_^_</span> \u0d86\u0daf\u0dcf\u0db1\u0dba\u0dda \u0dc3\u0d82\u0dba\u0ddd\u0da2\u0db1\u0dba\u0d9a\u0dca \u0d9c\u0db6\u0da9\u0dcf <span translate=no>_^_5_^_</span>\u0d9a\u0dbb\u0dba\u0dd2. </p>\n<span translate=no>_^_6_^_</span><p>\u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4\u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2 \u0db4\u0dbb\u0dcf\u0db8\u0dd2\u0dad\u0dd2\u0dba\u0d9a\u0dca <span translate=no>_^_8_^_</span> \u0dc0\u0db1 \u0d85\u0dad\u0dbb \u0dc3\u0dd2\u0d9c\u0dca\u0db8\u0ddd\u0dba\u0dd2\u0da9\u0dca \u0dc1\u0dca\u0dbb\u0dd2\u0dad\u0dba \u0dc0\u0dda. <span translate=no>_^_7_^_</span> </p>\n<p>\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba\u0dc0\u0dd3 \u0d87\u0dad\u0dd2 <span translate=no>_^_9_^_</span> \u0db1\u0dd2\u0dc3\u0dcf \u0d85\u0db4\u0da7 \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab \u0db4\u0daf\u0dba \u0d85\u0dc0\u0dc1\u0dca\u0dba <span translate=no>_^_10_^_</span> \u0db1\u0ddc\u0dc0\u0db1 \u0db6\u0dc0 \u0dc3\u0dbd\u0d9a\u0db1\u0dca\u0db1. </p>\n",
 "<p> </p>\n": "<p> </p>\n",
 "<p> <span translate=no>_^_0_^_</span></p>\n": "<p> <span translate=no>_^_0_^_</span></p>\n",
 "<p> This is a general transformer layer that combines self attention and feedforward network.</p>\n": "<p> \u0db8\u0dd9\u0dba\u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dc4 \u0db4\u0ddd\u0dc2\u0d9a \u0da2\u0dcf\u0dbd\u0dba \u0d92\u0d9a\u0dcf\u0db6\u0daf\u0dca\u0db0 \u0d9a\u0dbb\u0db1 \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0d9a\u0dd2. </p>\n",
 "<p> This is a general transformer module with multiple transformer layers</p>\n": "<p> \u0db8\u0dd9\u0dba\u0db6\u0dc4\u0dd4 \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dc3\u0dca\u0dae\u0dbb \u0dc3\u0dc4\u0dd2\u0dad \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0db8\u0ddc\u0da9\u0dd2\u0dba\u0dd4\u0dbd\u0dba\u0d9a\u0dd2</p>\n",
 "<p><span translate=no>_^_0_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span> </p>\n",
 "<p><span translate=no>_^_0_^_</span> for all steps and heads </p>\n": "<p><span translate=no>_^_0_^_</span> \u0dc3\u0dd2\u0dba\u0dbd\u0dd4 \u0db4\u0dd2\u0dba\u0dc0\u0dbb \u0dc3\u0dc4 \u0dc4\u0dd2\u0dc3\u0dca \u0dc3\u0db3\u0dc4\u0dcf </p>\n",
 "<p>Add the feed-forward results back </p>\n": "<p>\u0db4\u0dca\u0dbb\u0dad\u0dd2\u0db4\u0ddd\u0dc2\u0dab\u0d89\u0daf\u0dd2\u0dbb\u0dd2 \u0db4\u0dca\u0dbb\u0dad\u0dd2 results \u0dbd \u0db1\u0dd0\u0dc0\u0dad \u0d91\u0d9a\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Add the self attention results </p>\n": "<p>\u0dc3\u0dca\u0dc0\u0dba\u0d82\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0db5\u0dbd \u0d91\u0d9a\u0dad\u0dd4 </p>\n",
 "<p>Calculate fast weights self attention </p>\n": "<p>\u0dc0\u0dda\u0d9c\u0dc0\u0dad\u0dca\u0db6\u0dbb \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 \u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba </p>\n",
 "<p>Concatenate copies of <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db4\u0dd2\u0da7\u0db4\u0dad\u0dca\u0dc3\u0d82\u0dba\u0dd4\u0d9a\u0dca\u0dad \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Concatenate to get <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dbd\u0db6\u0dcf\u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0da7 \u0d91\u0d9a\u0d9f \u0dc0\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Dropout </p>\n": "<p>\u0dc4\u0dd0\u0dbd\u0dd3\u0db8 </p>\n",
 "<p>Dropout layer </p>\n": "<p>\u0dc4\u0dd0\u0dbd\u0dd9\u0db1\u0dc3\u0dca\u0dae\u0dbb\u0dba </p>\n",
 "<p>Fast weights attention module </p>\n": "<p>\u0dc0\u0dda\u0d9c\u0dc0\u0dad\u0dca\u0db6\u0dbb \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0db8\u0ddc\u0da9\u0dd2\u0dba\u0dd4\u0dbd\u0dba </p>\n",
 "<p>Feed-forward network </p>\n": "<p>Feed-\u0d89\u0daf\u0dd2\u0dbb\u0dd2\u0da2\u0dcf\u0dbd\u0dba </p>\n",
 "<p>Final normalization layer </p>\n": "<p>\u0d85\u0dc0\u0dc3\u0dcf\u0db1\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab \u0dc3\u0dca\u0dad\u0dbb\u0dba </p>\n",
 "<p>Get <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dbd\u0db6\u0dcf\u0d9c\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Get layer output </p>\n": "<p>\u0dc3\u0dca\u0dae\u0dbb\u0db4\u0dca\u0dbb\u0dad\u0dd2\u0daf\u0dcf\u0db1\u0dba \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get the number of steps <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db4\u0dd2\u0dba\u0dc0\u0dbb\u0d9c\u0dab\u0db1 \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Interpolation weight function <span translate=no>_^_0_^_</span> for each head </p>\n": "<p>\u0d91\u0d9a\u0dca\u0d91\u0d9a\u0dca \u0dc4\u0dd2\u0dc3 <span translate=no>_^_0_^_</span> \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0db1\u0dca\u0dad\u0dbb\u0dca\u0db1\u0dd2\u0dc0\u0dda\u0dc2\u0dab\u0dba \u0db6\u0dbb \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0dba </p>\n",
 "<p>Iterate through steps </p>\n": "<p>\u0db4\u0dd2\u0dba\u0dc0\u0dbb\u0dc4\u0dbb\u0dc4\u0dcf \u0db1\u0dd0\u0dc0\u0dad \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>List to store outputs <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db4\u0dca\u0dbb\u0dad\u0dd2\u0daf\u0dcf\u0db1\u0dba\u0db1\u0dca\u0d9c\u0db6\u0da9\u0dcf \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0dbd\u0dd0\u0dba\u0dd2\u0dc3\u0dca\u0dad\u0dd4\u0dc0 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Make copies of the transformer layer </p>\n": "<p>\u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca\u0dc3\u0dca\u0dae\u0dbb\u0dba\u0dda \u0db4\u0dd2\u0da7\u0db4\u0dad\u0dca \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 </p>\n",
 "<p>Merge multiple heads and append to <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db6\u0dc4\u0dd4\u0dc4\u0dd2\u0dc3\u0dca \u0d92\u0d9a\u0dcf\u0db6\u0daf\u0dca\u0db0 \u0d9a\u0dbb \u0d8a\u0da7 \u0dc3\u0db8\u0dca\u0db6\u0db1\u0dca\u0db0 \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Multiply them, <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d92\u0dc0\u0dcf\u0d9c\u0dd4\u0dab \u0d9a\u0dbb\u0db1\u0dca\u0db1, <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Normalization layers </p>\n": "<p>\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba\u0dc3\u0dca\u0dae\u0dbb </p>\n",
 "<p>Normalize by <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc0\u0dd2\u0dc3\u0dd2\u0db1\u0dca\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Normalize for feed-forward </p>\n": "<p>\u0db4\u0ddd\u0dc2\u0dab\u0dba\u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Normalize the output </p>\n": "<p>\u0db4\u0dca\u0dbb\u0dad\u0dd2\u0daf\u0dcf\u0db1\u0dba\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Number of features per head <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc4\u0dd2\u0dc3\u0d9a\u0da7\u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0d9c\u0dab\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Number of heads </p>\n": "<p>\u0dc4\u0dd2\u0dc3\u0dca\u0d9c\u0dab\u0db1 </p>\n",
 "<p>Output layer </p>\n": "<p>\u0db4\u0dca\u0dbb\u0dad\u0dd2\u0daf\u0dcf\u0db1\u0dc3\u0dca\u0dae\u0dbb\u0dba </p>\n",
 "<p>Pass through the feed-forward network </p>\n": "<p>Feed-forward\u0da2\u0dcf\u0dbd\u0dba \u0dc4\u0dbb\u0dc4\u0dcf \u0d9c\u0db8\u0db1\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Shift and roll by <span translate=no>_^_0_^_</span>, to get <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0dbd\u0db6\u0dcf\u0d9c\u0dd0\u0db1\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0db8\u0dcf\u0dbb\u0dd4\u0dc0\u0dd3\u0db8 \u0dc3\u0dc4 \u0dbb\u0ddd\u0dbd\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span> </p>\n",
 "<p>Stack outputs at each step into a single tensor </p>\n": "<p>\u0d91\u0d9a\u0dca\u0d91\u0d9a\u0dca \u0db4\u0dd2\u0dba\u0dc0\u0dbb\u0dda\u0daf\u0dd3 \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0daf\u0dcf\u0db1\u0dba\u0db1\u0dca \u0dad\u0db1\u0dd2 \u0da7\u0dd9\u0db1\u0dca\u0dc3\u0dbb\u0dba\u0d9a\u0da7 \u0d9c\u0ddc\u0da9\u0d9c\u0dc3\u0db1\u0dca\u0db1 </p>\n",
 "<p>These transform the <span translate=no>_^_0_^_</span>, <span translate=no>_^_1_^_</span> and <span translate=no>_^_2_^_</span> multi-headed attention. </p>\n": "<p>\u0db8\u0dda\u0dc0\u0dcf\u0db4\u0dbb\u0dd2\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0dba \u0d9a\u0dbb\u0dba\u0dd2 <span translate=no>_^_0_^_</span>, <span translate=no>_^_1_^_</span> \u0dc3\u0dc4 <span translate=no>_^_2_^_</span> \u0db6\u0dc4\u0dd4-\u0dc4\u0dd2\u0dc3 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba. </p>\n",
 "<p>Transformer size <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca\u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba <span translate=no>_^_0_^_</span> </p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the hyper-parameter <span translate=no>_^_1_^_</span>. </li>\n<li><span translate=no>_^_2_^_</span> is the small value used to make sure there is no division-by-zero when normalizing.</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0d85\u0db0\u0dd2-\u0db4\u0dbb\u0dcf\u0db8\u0dd2\u0dad\u0dd2\u0dba <span translate=no>_^_1_^_</span>\u0dc0\u0dda. </li>\n<li><span translate=no>_^_2_^_</span> \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda\u0daf\u0dd3 \u0db6\u0dd9\u0daf\u0dd3\u0db8\u0dca \u0dc1\u0dd4\u0db1\u0dca\u0dba \u0db1\u0ddc\u0dc0\u0db1 \u0db6\u0dc0\u0da7 \u0dc0\u0d9c \u0db6\u0dbd\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db1 \u0d9a\u0dd4\u0da9\u0dcf \u0d85\u0d9c\u0dba\u0dba\u0dd2. </li></ul>\n",
 "Linear Transformers Are Secretly Fast Weight Memory Systems": "\u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0dbb\u0dc4\u0dc3\u0dd2\u0db1\u0dca \u0dc0\u0dda\u0d9c\u0dc0\u0dad\u0dca \u0db6\u0dbb \u0db8\u0dad\u0d9a \u0db4\u0daf\u0dca\u0db0\u0dad\u0dd2 \u0dc0\u0dda",
 "This is an annotated implementation/tutorial of Linear Transformers Are Secretly Fast Weight Memory Systems in PyTorch.": "\u0db8\u0dd9\u0dba \u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0db4\u0dba\u0dd2\u0da7\u0ddd\u0da0\u0dca \u0dc4\u0dd2 \u0dbb\u0dc4\u0dc3\u0dd2\u0db1\u0dca \u0dc0\u0dda\u0d9c\u0dc0\u0dad\u0dca \u0db6\u0dbb \u0db8\u0dad\u0d9a \u0db4\u0daf\u0dca\u0db0\u0dad\u0dd2 \u0dc0\u0dda."
}