{
 "<h1><a href=\"index.html\">Masked Language Model (MLM)</a> Experiment</h1>\n<p>This is an annotated PyTorch experiment to train a <a href=\"index.html\">Masked Language Model</a>.</p>\n": "<h1><a href=\"index.html\">\u63a9\u7801\u8bed\u8a00\u6a21\u578b (MLM)</a> \u5b9e\u9a8c</h1>\n<p>\u8fd9\u662f\u4e00\u4e2a\u5e26\u6ce8\u91ca\u7684 PyTorch \u5b9e\u9a8c\uff0c\u7528\u4e8e\u8bad\u7ec3\u4e00\u4e2a<a href=\"index.html\">\u8499\u7248\u8bed\u8a00\u6a21\u578b</a>\u3002</p>\n",
 "<h1>Transformer based model for MLM</h1>\n": "<h1>\u57fa\u4e8e\u53d8\u538b\u5668\u7684\u4f20\u9500\u6a21\u578b</h1>\n",
 "<h2>Configurations</h2>\n<p>This inherits from <a href=\"../../experiments/nlp_autoregression.html\"><span translate=no>_^_0_^_</span></a> because it has the data pipeline implementations that we reuse here. We have implemented a custom training step form MLM.</p>\n": "<h2>\u914d\u7f6e</h2>\n<p>\u8fd9\u7ee7\u627f\u81ea\uff0c<a href=\"../../experiments/nlp_autoregression.html\"><span translate=no>_^_0_^_</span></a>\u56e0\u4e3a\u5b83\u6709\u6211\u4eec\u5728\u8fd9\u91cc\u91cd\u7528\u7684\u6570\u636e\u7ba1\u9053\u5b9e\u73b0\u3002\u6211\u4eec\u5df2\u7ecf\u5b9e\u65bd\u4e86 MLM \u7684\u81ea\u5b9a\u4e49\u8bad\u7ec3\u6b65\u9aa4\u3002</p>\n",
 "<h3>Initialization</h3>\n": "<h3>\u521d\u59cb\u5316</h3>\n",
 "<h3>Sampling function to generate samples periodically while training</h3>\n": "<h3>\u91c7\u6837\u529f\u80fd\u53ef\u5728\u8bad\u7ec3\u65f6\u5b9a\u671f\u751f\u6210\u6837\u672c</h3>\n",
 "<h3>Training or validation step</h3>\n": "<h3>\u57f9\u8bad\u6216\u9a8c\u8bc1\u6b65\u9aa4</h3>\n",
 "<h3>Transformer configurations</h3>\n": "<h3>\u53d8\u538b\u5668\u914d\u7f6e</h3>\n",
 "<p> </p>\n": "<p></p>\n",
 "<p> Create classification model</p>\n": "<p>\u521b\u5efa\u5206\u7c7b\u6a21\u578b</p>\n",
 "<p> Number of tokens including <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span></p>\n": "<p>\u5305\u62ec<span translate=no>_^_0_^_</span>\u548c\u5728\u5185\u7684\u4ee3\u5e01\u6570\u91cf<span translate=no>_^_1_^_</span></p>\n",
 "<p><a href=\"index.html\">Masked Language Model (MLM) class</a> to generate the mask </p>\n": "<p>\u7528\u4e8e\u751f\u6210<a href=\"index.html\">\u63a9\u7801\u7684\u63a9\u7801\u8bed\u8a00\u6a21\u578b (MLM) \u7c7b</a></p>\n",
 "<p><span translate=no>_^_0_^_</span> token </p>\n": "<p><span translate=no>_^_0_^_</span>\u4ee4\u724c</p>\n",
 "<p>Accuracy metric (ignore the labels equal to <span translate=no>_^_0_^_</span>) </p>\n": "<p>\u7cbe\u5ea6\u5ea6\u91cf\u5ea6\uff08\u5ffd\u7565\u7b49\u4e8e\u7684\u6807\u7b7e<span translate=no>_^_0_^_</span>\uff09</p>\n",
 "<p>Add the prompts one by one </p>\n": "<p>\u9010\u4e2a\u6dfb\u52a0\u63d0\u793a</p>\n",
 "<p>Add to the tensor </p>\n": "<p>\u6dfb\u52a0\u5230\u5f20\u91cf\u4e2d</p>\n",
 "<p>Batch size </p>\n": "<p>\u6279\u91cf\u5927\u5c0f</p>\n",
 "<p>Calculate and log accuracy </p>\n": "<p>\u8ba1\u7b97\u548c\u8bb0\u5f55\u7cbe\u5ea6</p>\n",
 "<p>Calculate and log the loss </p>\n": "<p>\u8ba1\u7b97\u5e76\u8bb0\u5f55\u635f\u5931</p>\n",
 "<p>Calculate gradients </p>\n": "<p>\u8ba1\u7b97\u68af\u5ea6</p>\n",
 "<p>Clear the gradients </p>\n": "<p>\u6e05\u9664\u6e10\u53d8</p>\n",
 "<p>Clip gradients </p>\n": "<p>\u526a\u8f91\u6e10\u53d8</p>\n",
 "<p>Collect output from printing </p>\n": "<p>\u4ece\u6253\u5370\u4e2d\u6536\u96c6\u8f93\u51fa</p>\n",
 "<p>Correct prediction </p>\n": "<p>\u6b63\u786e\u7684\u9884\u6d4b</p>\n",
 "<p>Create configs </p>\n": "<p>\u521b\u5efa\u914d\u7f6e</p>\n",
 "<p>Create experiment </p>\n": "<p>\u521b\u5efa\u5b9e\u9a8c</p>\n",
 "<p>Cross entropy loss (ignore the labels equal to <span translate=no>_^_0_^_</span>) </p>\n": "<p>\u4ea4\u53c9\u71b5\u635f\u5931\uff08\u5ffd\u7565\u7b49\u4e8e\u7684\u6807\u7b7e<span translate=no>_^_0_^_</span>\uff09</p>\n",
 "<p>Embedding size </p>\n": "<p>\u5d4c\u5165\u5927\u5c0f</p>\n",
 "<p>Empty tensor for data filled with <span translate=no>_^_0_^_</span>. </p>\n": "<p>\u586b\u5145\u7684\u6570\u636e\u4e3a\u7a7a\u5f20\u91cf<span translate=no>_^_0_^_</span>\u3002</p>\n",
 "<p>For each token </p>\n": "<p>\u5bf9\u4e8e\u6bcf\u4e2a\u4ee3\u5e01</p>\n",
 "<p>Get masked input and labels </p>\n": "<p>\u83b7\u53d6\u5c4f\u853d\u7684\u8f93\u5165\u548c\u6807\u7b7e</p>\n",
 "<p>Get model outputs </p>\n": "<p>\u83b7\u53d6\u6a21\u578b\u8f93\u51fa</p>\n",
 "<p>Get model outputs. It&#x27;s returning a tuple for states when using RNNs. This is not implemented yet. </p>\n": "<p>\u83b7\u53d6\u6a21\u578b\u8f93\u51fa\u3002\u5b83\u5728\u4f7f\u7528 RNN \u65f6\u8fd4\u56de\u72b6\u6001\u7684\u5143\u7ec4\u3002\u8fd9\u5c1a\u672a\u5b9e\u73b0\u3002</p>\n",
 "<p>Get the masked input and labels </p>\n": "<p>\u83b7\u53d6\u5c4f\u853d\u7684\u8f93\u5165\u548c\u6807\u7b7e</p>\n",
 "<p>Get the prediction </p>\n": "<p>\u83b7\u53d6\u9884\u6d4b</p>\n",
 "<p>Get the token embeddings with positional encodings </p>\n": "<p>\u4f7f\u7528\u4f4d\u7f6e\u7f16\u7801\u83b7\u53d6\u4ee4\u724c\u5d4c\u5165</p>\n",
 "<p>Get token indexes </p>\n": "<p>\u83b7\u53d6\u4ee3\u5e01\u7d22\u5f15</p>\n",
 "<p>If it&#x27;s a printable character </p>\n": "<p>\u5982\u679c\u662f\u53ef\u6253\u5370\u7684\u5b57\u7b26</p>\n",
 "<p>If it&#x27;s not a printable character </p>\n": "<p>\u5982\u679c\u5b83\u4e0d\u662f\u53ef\u6253\u5370\u7684\u5b57\u7b26</p>\n",
 "<p>If the label is <span translate=no>_^_0_^_</span> (unmasked) print the original. </p>\n": "<p>\u5982\u679c\u6807\u7b7e\u662f<span translate=no>_^_0_^_</span>\uff08\u672a\u906e\u7f69\uff09\uff0c\u8bf7\u6253\u5370\u539f\u4ef6\u3002</p>\n",
 "<p>If the label is not <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5982\u679c\u6807\u7b7e\u4e0d\u662f<span translate=no>_^_0_^_</span></p>\n",
 "<p>Incorrect prediction </p>\n": "<p>\u9884\u6d4b\u4e0d\u6b63\u786e</p>\n",
 "<p>Log the model parameters and gradients on last batch of every epoch </p>\n": "<p>\u8bb0\u5f55\u6bcf\u4e2a\u7eaa\u5143\u6700\u540e\u4e00\u6279\u7684\u6a21\u578b\u53c2\u6570\u548c\u68af\u5ea6</p>\n",
 "<p>Logits for the output </p>\n": "<p>\u8f93\u51fa\u7684\u5bf9\u6570</p>\n",
 "<p>MLM model </p>\n": "<p>\u4f20\u9500\u6a21\u578b</p>\n",
 "<p>Move the input to the device </p>\n": "<p>\u5c06\u8f93\u5165\u79fb\u81f3\u8bbe\u5907</p>\n",
 "<p>Move the tensor to current device </p>\n": "<p>\u5c06\u5f20\u91cf\u79fb\u5230\u5f53\u524d\u8bbe\u5907</p>\n",
 "<p>Number of tokens </p>\n": "<p>\u4ee3\u5e01\u6570\u91cf</p>\n",
 "<p>Override configurations </p>\n": "<p>\u8986\u76d6\u914d\u7f6e</p>\n",
 "<p>Print </p>\n": "<p>\u6253\u5370</p>\n",
 "<p>Print the samples generated </p>\n": "<p>\u6253\u5370\u751f\u6210\u7684\u6837\u672c</p>\n",
 "<p>Probability of masking a token </p>\n": "<p>\u63a9\u76d6\u4ee3\u5e01\u7684\u6982\u7387</p>\n",
 "<p>Probability of replacing the mask with a random token </p>\n": "<p>\u7528\u968f\u673a\u4ee4\u724c\u66ff\u6362\u63a9\u7801\u7684\u6982\u7387</p>\n",
 "<p>Probability of replacing the mask with original token </p>\n": "<p>\u7528\u539f\u59cb\u4ee4\u724c\u66ff\u6362\u63a9\u7801\u7684\u6982\u7387</p>\n",
 "<p>Prompt to sample </p>\n": "<p>\u63d0\u793a\u91c7\u6837</p>\n",
 "<p>Return results (second value is for state, since our trainer is used with RNNs also) </p>\n": "<p>\u8fd4\u56de\u7ed3\u679c\uff08\u7b2c\u4e8c\u4e2a\u503c\u7528\u4e8e\u72b6\u6001\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u8bad\u7ec3\u5668\u4e5f\u4e0e RNN \u4e00\u8d77\u4f7f\u7528\uff09</p>\n",
 "<p>Run training </p>\n": "<p>\u8dd1\u6b65\u8bad\u7ec3</p>\n",
 "<p>Save the tracked metrics </p>\n": "<p>\u4fdd\u5b58\u8ddf\u8e2a\u7684\u6307\u6807</p>\n",
 "<p>Sequence length of <span translate=no>_^_0_^_</span>. We use a short sequence length to train faster. Otherwise it takes forever to train. </p>\n": "\u7684@@ <p>\u5e8f\u5217\u957f\u5ea6<span translate=no>_^_0_^_</span>\u3002\u6211\u4eec\u4f7f\u7528\u8f83\u77ed\u7684\u5e8f\u5217\u957f\u5ea6\u6765\u66f4\u5feb\u5730\u8bad\u7ec3\u3002\u5426\u5219\u8bad\u7ec3\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002</p>\n",
 "<p>Set models for saving and loading </p>\n": "<p>\u8bbe\u7f6e\u7528\u4e8e\u4fdd\u5b58\u548c\u52a0\u8f7d\u7684\u6a21\u578b</p>\n",
 "<p>Set the vocabulary sizes for embeddings and generating logits </p>\n": "<p>\u8bbe\u7f6e\u5d4c\u5165\u548c\u751f\u6210 logit \u7684\u8bcd\u6c47\u91cf\u5927\u5c0f</p>\n",
 "<p>Start the experiment </p>\n": "<p>\u5f00\u59cb\u5b9e\u9a8c</p>\n",
 "<p>Switch between training and validation for <span translate=no>_^_0_^_</span> times per epoch </p>\n": "<p>\u5728\u8bad\u7ec3\u548c\u9a8c\u8bc1\u4e4b\u95f4\u5207\u6362\u6bcf\u4e2a\u7eaa\u5143\u7684<span translate=no>_^_0_^_</span>\u6b21\u6570</p>\n",
 "<p>Take optimizer step </p>\n": "<p>\u91c7\u53d6\u4f18\u5316\u5668\u6b65\u9aa4</p>\n",
 "<p>Tokens that shouldn&#x27;t be masked </p>\n": "<p>\u4e0d\u5e94\u8be5\u88ab\u63a9\u76d6\u7684\u4ee3\u5e01</p>\n",
 "<p>Train for 1024 epochs. </p>\n": "<p>\u8bad\u7ec3 1024 \u4e2a\u65f6\u4ee3\u3002</p>\n",
 "<p>Train the model </p>\n": "<p>\u8bad\u7ec3\u6a21\u578b</p>\n",
 "<p>Transformer </p>\n": "<p>\u53d8\u538b\u5668</p>\n",
 "<p>Transformer configurations (same as defaults) </p>\n": "<p>\u53d8\u538b\u5668\u914d\u7f6e\uff08\u4e0e\u9ed8\u8ba4\u503c\u76f8\u540c\uff09</p>\n",
 "<p>Transformer encoder </p>\n": "<p>\u53d8\u538b\u5668\u7f16\u7801</p>\n",
 "<p>Update global step (number of tokens processed) when in training mode </p>\n": "<p>\u5728\u8bad\u7ec3\u6a21\u5f0f\u4e0b\u66f4\u65b0\u5168\u5c40\u6b65\u957f\uff08\u5904\u7406\u7684\u4ee4\u724c\u6570\uff09</p>\n",
 "<p>Use <a href=\"../../optimizers/noam.html\">Noam optimizer</a> </p>\n": "<p>\u4f7f\u7528 <a href=\"../../optimizers/noam.html\">Noam \u4f18\u5316\u5668</a></p>\n",
 "<p>We use our <a href=\"../configs.html#TransformerConfigs\">configurable transformer implementation</a> </p>\n": "<p>\u6211\u4eec\u4f7f\u7528\u6211\u4eec\u7684<a href=\"../configs.html#TransformerConfigs\">\u53ef\u914d\u7f6e\u53d8\u538b\u5668\u5b9e\u73b0</a></p>\n",
 "<p>Whether to capture model outputs </p>\n": "<p>\u662f\u5426\u6355\u83b7\u6a21\u578b\u8f93\u51fa</p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the transformer <a href=\"../models.html#Encoder\">Encoder</a> </li>\n<li><span translate=no>_^_1_^_</span> is the token <a href=\"../models.html#EmbeddingsWithLearnedPositionalEncoding\">embedding module (with positional encodings)</a> </li>\n<li><span translate=no>_^_2_^_</span> is the <a href=\"../models.html#Generator\">final fully connected layer</a> that gives the logits.</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u53d8\u538b\u5668<a href=\"../models.html#Encoder\">\u7f16\u7801\u5668</a></li>\n<li><span translate=no>_^_1_^_</span>\u662f\u4ee4\u724c<a href=\"../models.html#EmbeddingsWithLearnedPositionalEncoding\">\u5d4c\u5165\u6a21\u5757\uff08\u5e26\u6709\u4f4d\u7f6e\u7f16\u7801\uff09</a></li>\n<li><span translate=no>_^_2_^_</span>\u662f\u7ed9<a href=\"../models.html#Generator\">\u51fa logit \u7684\u6700\u540e\u4e00\u4e2a\u5b8c\u5168\u8fde\u63a5\u7684\u5c42</a>\u3002</li></ul>\n",
 "Masked Language Model Experiment": "\u8499\u9762\u8bed\u8a00\u6a21\u578b\u5b9e\u9a8c",
 "This experiment trains Masked Language Model (MLM) on Tiny Shakespeare dataset.": "\u672c\u5b9e\u9a8c\u5728 Tiny Shakespeare \u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u8499\u7248\u8bed\u8a00\u6a21\u578b\uff08MLM\uff09\u3002"
}