{
 "<h1><a href=\"https://nn.labml.ai/transformers/mlm/index.html\">Masked Language Model (MLM)</a></h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of Masked Language Model (MLM)  used to pre-train the BERT model introduced in the paper <a href=\"https://papers.labml.ai/paper/1810.04805\">BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding</a>.</p>\n<h2>BERT Pretraining</h2>\n<p>BERT model is a transformer model. The paper pre-trains the model using MLM and with next sentence prediction. We have only implemented MLM here.</p>\n<h3>Next sentence prediction</h3>\n<p>In <em>next sentence prediction</em>, the model is given two sentences <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> and the model makes a binary prediction whether <span translate=no>_^_2_^_</span> is the sentence that follows <span translate=no>_^_3_^_</span> in the actual text. The model is fed with actual sentence pairs 50% of the time and random pairs 50% of the time. This classification is done while applying MLM. <em>We haven&#x27;t implemented this here.</em></p>\n<h2>Masked LM</h2>\n<p>This masks a percentage of tokens at random and trains the model to predict the masked tokens. They <strong>mask 15% of the tokens</strong> by replacing them with a special <span translate=no>_^_4_^_</span> token.</p>\n<p>The loss is computed on predicting the masked tokens only. This causes a problem during fine-tuning and actual usage since there are no <span translate=no>_^_5_^_</span> tokens  at that time. Therefore we might not get any meaningful representations.</p>\n<p>To overcome this <strong>10% of the masked tokens are replaced with the original token</strong>, and another <strong>10% of the masked tokens are replaced with a random token</strong>. This trains the model to give representations about the actual token whether or not the input token at that position is a <span translate=no>_^_6_^_</span>. And replacing with a random token causes it to give a representation that has information from the context as well; because it has to use the context to fix randomly replaced tokens.</p>\n<h2>Training</h2>\n<p>MLMs are harder to train than autoregressive models because they have a smaller training signal. i.e. only a small percentage of predictions are trained per sample.</p>\n<p>Another problem is since the model is bidirectional, any token can see any other token. This makes the &quot;credit assignment&quot; harder. Let&#x27;s say you have the character level model trying to predict <span translate=no>_^_7_^_</span>. At least during the early stages of the training, it&#x27;ll be super hard to figure out why the replacement for <span translate=no>_^_8_^_</span> should be <span translate=no>_^_9_^_</span>, it could be anything from the whole sentence. Whilst, in an autoregressive setting the model will only have to use <span translate=no>_^_10_^_</span> to predict <span translate=no>_^_11_^_</span> and <span translate=no>_^_12_^_</span> to predict <span translate=no>_^_13_^_</span> and so on. So the model will initially start predicting with a shorter context first and then learn to use longer contexts later. Since MLMs have this problem it&#x27;s a lot faster to train if you start with a smaller sequence length initially and then use a longer sequence length later.</p>\n<p>Here is <a href=\"https://nn.labml.ai/transformers/mlm/experiment.html\">the training code</a> for a simple MLM model. </p>\n": "<h1><a href=\"https://nn.labml.ai/transformers/mlm/index.html\">\u30de\u30b9\u30af\u30c9\u30fb\u30e9\u30f3\u30b2\u30fc\u30b8\u30fb\u30e2\u30c7\u30eb (MLM)</a></h1>\n<p>\u3053\u308c\u306f\u3001\u8ad6\u6587\u300cBERT<a href=\"https://papers.labml.ai/paper/1810.04805\">\uff1a\u8a00\u8a9e\u7406\u89e3\u306e\u305f\u3081\u306e\u30c7\u30a3\u30fc\u30d7\u53cc\u65b9\u5411\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u306e\u4e8b\u524d\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u300d\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308bBERT\u30e2\u30c7\u30eb\u306e\u4e8b\u524d\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306b\u4f7f\u7528\u3055\u308c\u308b\u3001\u30de\u30b9\u30af\u30c9\u30fb\u30e9\u30f3\u30b2\u30fc\u30b8\u30fb\u30e2\u30c7\u30eb\uff08MLM\uff09<a href=\"https://pytorch.org\">\u306ePyTorch\u5b9f\u88c5\u3067\u3059</a></a>\u3002</p>\n<h2>BERT \u30d7\u30ec\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0</h2>\n<p>BERT \u30e2\u30c7\u30eb\u306f\u30c8\u30e9\u30f3\u30b9\u30e2\u30c7\u30eb\u3067\u3059\u3002\u3053\u306e\u8ad6\u6587\u3067\u306f\u3001MLM\u3068\u6b21\u306e\u6587\u7ae0\u4e88\u6e2c\u3092\u4f7f\u7528\u3057\u3066\u30e2\u30c7\u30eb\u3092\u4e8b\u524d\u306b\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u3053\u3067\u306fMLM\u3092\u5b9f\u88c5\u3057\u305f\u3060\u3051\u3067\u3059</p>\u3002\n<h3>\u6b21\u306e\u6587\u306e\u4e88\u6e2c</h3>\n<p><em>\u6b21\u306e\u6587\u4e88\u6e2c\u3067\u306f</em>\u3001<span translate=no>_^_0_^_</span>\u30e2\u30c7\u30eb\u306b2\u3064\u306e\u6587\u304c\u4e0e\u3048\u3089\u308c\u3001<span translate=no>_^_2_^_</span><span translate=no>_^_3_^_</span>\u30e2\u30c7\u30eb\u304c\u5b9f\u969b\u306e\u30c6\u30ad\u30b9\u30c8\u306b\u7d9a\u304f\u6587\u304b\u3069\u3046\u304b\u3092\u30d0\u30a4\u30ca\u30ea\u4e88\u6e2c\u3057\u307e\u3059\u3002<span translate=no>_^_1_^_</span>\u30e2\u30c7\u30eb\u306b\u306f\u300150% \u306e\u78ba\u7387\u3067\u5b9f\u969b\u306e\u6587\u306e\u30da\u30a2\u304c\u5165\u529b\u3055\u308c\u300150% \u306e\u78ba\u7387\u3067\u30e9\u30f3\u30c0\u30e0\u306a\u30da\u30a2\u304c\u5165\u529b\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u5206\u985e\u306fMLM\u3092\u9069\u7528\u3059\u308b\u969b\u306b\u884c\u308f\u308c\u307e\u3059\u3002<em>\u3053\u3053\u3067\u306f\u3053\u308c\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u305b\u3093\u3002</em></p>\n<h2>\u30de\u30b9\u30af\u30c9LM</h2>\n<p>\u3053\u308c\u306b\u3088\u308a\u3001\u30c8\u30fc\u30af\u30f3\u306e\u30d1\u30fc\u30bb\u30f3\u30c6\u30fc\u30b8\u304c\u30e9\u30f3\u30c0\u30e0\u306b\u30de\u30b9\u30af\u3055\u308c\u3001\u30de\u30b9\u30af\u3055\u308c\u305f\u30c8\u30fc\u30af\u30f3\u3092\u4e88\u6e2c\u3059\u308b\u3088\u3046\u306b\u30e2\u30c7\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u307e\u3059\u3002<strong><span translate=no>_^_4_^_</span>\u30c8\u30fc\u30af\u30f3\u306e15\uff05\u3092\u7279\u5225\u306a\u30c8\u30fc\u30af\u30f3\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u3067\u30de\u30b9\u30af\u3057\u307e\u3059</strong>\u3002</p>\n<p>\u640d\u5931\u306f\u3001\u30de\u30b9\u30af\u3055\u308c\u305f\u30c8\u30fc\u30af\u30f3\u306e\u4e88\u6e2c\u306e\u307f\u306b\u57fa\u3065\u3044\u3066\u8a08\u7b97\u3055\u308c\u307e\u3059\u3002<span translate=no>_^_5_^_</span>\u305d\u306e\u6642\u70b9\u3067\u306f\u30c8\u30fc\u30af\u30f3\u304c\u306a\u3044\u305f\u3081\u3001\u5fae\u8abf\u6574\u3084\u5b9f\u969b\u306e\u4f7f\u7528\u4e2d\u306b\u554f\u984c\u304c\u767a\u751f\u3057\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u610f\u5473\u306e\u3042\u308b\u8868\u73fe\u304c\u5f97\u3089\u308c\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059</p>\u3002\n<p>\u3053\u308c\u3092\u514b\u670d\u3059\u308b\u306b\u306f\u3001<strong>\u30de\u30b9\u30af\u3055\u308c\u305f\u30c8\u30fc\u30af\u30f3\u306e 10% \u304c\u5143\u306e\u30c8\u30fc\u30af\u30f3\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c</strong>\u3001<strong>\u3055\u3089\u306b 10% \u306e\u30de\u30b9\u30af\u3055\u308c\u305f\u30c8\u30fc\u30af\u30f3\u304c\u30e9\u30f3\u30c0\u30e0\u306a\u30c8\u30fc\u30af\u30f3\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u307e\u3059</strong>\u3002\u3053\u308c\u306b\u3088\u308a\u3001<span translate=no>_^_6_^_</span>\u305d\u306e\u4f4d\u7f6e\u306e\u5165\u529b\u30c8\u30fc\u30af\u30f3\u304ca\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u306b\u95a2\u4fc2\u306a\u304f\u3001\u5b9f\u969b\u306e\u30c8\u30fc\u30af\u30f3\u306b\u3064\u3044\u3066\u8868\u73fe\u3059\u308b\u3088\u3046\u306b\u30e2\u30c7\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u30e9\u30f3\u30c0\u30e0\u306a\u30c8\u30fc\u30af\u30f3\u306b\u7f6e\u304d\u63db\u3048\u308b\u3068\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u306e\u60c5\u5831\u3082\u542b\u3080\u8868\u73fe\u306b\u306a\u308a\u307e\u3059\u3002\u30e9\u30f3\u30c0\u30e0\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u305f\u30c8\u30fc\u30af\u30f3\u3092\u4fee\u6b63\u3059\u308b\u306b\u306f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3067\u3059\u3002</p>\n<h2>\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0</h2>\n<p>MLM \u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u4fe1\u53f7\u304c\u5c0f\u3055\u3044\u305f\u3081\u3001\u81ea\u5df1\u56de\u5e30\u30e2\u30c7\u30eb\u3088\u308a\u3082\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u304c\u56f0\u96e3\u3067\u3059\u3002\u3064\u307e\u308a\u3001\u30b5\u30f3\u30d7\u30eb\u3054\u3068\u306b\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3055\u308c\u308b\u4e88\u6e2c\u306e\u5272\u5408\u306f\u3054\u304f\u308f\u305a\u304b\u3067\u3059\u3002</p>\n<p>\u3082\u3046\u4e00\u3064\u306e\u554f\u984c\u306f\u3001\u30e2\u30c7\u30eb\u304c\u53cc\u65b9\u5411\u306a\u306e\u3067\u3001\u3069\u306e\u30c8\u30fc\u30af\u30f3\u3082\u4ed6\u306e\u30c8\u30fc\u30af\u30f3\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u300c\u30af\u30ec\u30b8\u30c3\u30c8\u306e\u5272\u308a\u5f53\u3066\u300d\u304c\u96e3\u3057\u304f\u306a\u308a\u307e\u3059\u3002\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u30ec\u30d9\u30eb\u306e\u30e2\u30c7\u30eb\u304c\u4e88\u6e2c\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u3068\u3057\u307e\u3057\u3087\u3046<span translate=no>_^_7_^_</span>\u3002\u5c11\u306a\u304f\u3068\u3082\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u521d\u671f\u6bb5\u968e\u3067\u306f\u3001\u306a\u305c\u7f6e\u63db\u304c\u5fc5\u8981\u306a\u306e\u304b\u3092\u7406\u89e3\u3059\u308b\u306e\u306f\u975e\u5e38\u306b\u96e3\u3057\u3044\u3067\u3057\u3087\u3046\u3002\u6587\u7ae0\u5168\u4f53\u304b\u3089\u4f55\u3067\u3082\u304b\u307e\u3044\u307e\u305b\u3093\u3002<span translate=no>_^_8_^_</span> <span translate=no>_^_9_^_</span>\u4e00\u65b9\u3001\u81ea\u5df1\u56de\u5e30\u8a2d\u5b9a\u3067\u306f\u3001<span translate=no>_^_10_^_</span><span translate=no>_^_11_^_</span><span translate=no>_^_12_^_</span>\u30e2\u30c7\u30eb\u306f\u4e88\u6e2c\u3084\u4e88\u6e2c\u306a\u3069\u306b\u4f7f\u7528\u3059\u308b\u3060\u3051\u3067\u6e08\u307f\u307e\u3059<span translate=no>_^_13_^_</span>\u3002\u305d\u306e\u305f\u3081\u3001\u30e2\u30c7\u30eb\u306f\u6700\u521d\u306b\u77ed\u3044\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u4e88\u6e2c\u3092\u958b\u59cb\u3057\u3001\u5f8c\u3067\u9577\u3044\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u4f7f\u7528\u65b9\u6cd5\u3092\u5b66\u7fd2\u3057\u307e\u3059\u3002MLM\u306b\u306f\u3053\u306e\u554f\u984c\u304c\u3042\u308b\u305f\u3081\u3001\u6700\u521d\u306f\u77ed\u3044\u30b7\u30fc\u30b1\u30f3\u30b9\u9577\u304b\u3089\u59cb\u3081\u3066\u3001\u5f8c\u3067\u9577\u3044\u30b7\u30fc\u30b1\u30f3\u30b9\u9577\u3092\u4f7f\u7528\u3059\u308b\u65b9\u304c\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u304c\u306f\u308b\u304b\u306b\u901f\u304f\u306a\u308a\u307e\u3059</p>\u3002\n<p><a href=\"https://nn.labml.ai/transformers/mlm/experiment.html\">\u30b7\u30f3\u30d7\u30eb\u306aMLM\u30e2\u30c7\u30eb\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059</a>\u3002</p>\n",
 "Masked Language Model (MLM)": "\u30de\u30b9\u30af\u30c9\u30fb\u30e9\u30f3\u30b2\u30fc\u30b8\u30fb\u30e2\u30c7\u30eb (MLM)"
}