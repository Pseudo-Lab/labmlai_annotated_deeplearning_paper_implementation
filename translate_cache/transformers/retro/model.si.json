{
 "<h1>RETRO model</h1>\n<p>This is the model definition for  <a href=\"index.html\">RETRO</a>.</p>\n<p><a href=\"https://app.labml.ai/run/3113dd3ea1e711ec85ee295d18534021\"><span translate=no>_^_0_^_</span></a></p>\n": "<h1>\u0dbb\u0dd9\u0da7\u0dca\u0dbb\u0ddd\u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba</h1>\n<p><a href=\"index.html\">RETRO</a>\u0dc3\u0db3\u0dc4\u0dcf \u0d86\u0daf\u0dbb\u0dca\u0dc1 \u0d85\u0dbb\u0dca\u0dae \u0daf\u0dd0\u0d9a\u0dca\u0dc0\u0dd3\u0db8 \u0db8\u0dd9\u0dba\u0dba\u0dd2. </p>\n<p><a href=\"https://app.labml.ai/run/3113dd3ea1e711ec85ee295d18534021\"><span translate=no>_^_0_^_</span></a></p>\n",
 "<h2><a href=\"../rope/index.html\">RoPE embeddings</a></h2>\n<p><em>We use rotary position embeddings in self-attention layers. We assume the positional information gets embedded in embeddings and therefore not use them in causal attention. <a href=\"https://papers.labml.ai/paper/3999902edc8511eba3db37f65e372566\">Non-causal self-attention needs explicit positional information  because it cannot infer it</a>.</em></p>\n": "<h2><a href=\"../rope/index.html\">\u0d9a\u0db9\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca</a></h2>\n<p><em>\u0d85\u0db4\u0dd2\u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dca\u0dae\u0dbb \u0db7\u0db8\u0dab \u0dad\u0dad\u0dca\u0dad\u0dca\u0dc0\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db1\u0dca\u0db1. \u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dd3\u0dba \u0dad\u0ddc\u0dbb\u0dad\u0dd4\u0dbb\u0dd4 \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dad\u0dd4\u0dc5\u0da7 \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dd3 \u0d87\u0dad\u0dd2 \u0d85\u0dad\u0dbb \u0d91\u0db8 \u0db1\u0dd2\u0dc3\u0dcf \u0d92\u0dc0\u0dcf \u0db4\u0ddc\u0daf\u0dd4 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba\u0da7 \u0dbd\u0d9a\u0dca \u0db1\u0ddc\u0d9a\u0dbb\u0db8\u0dd4. <a href=\"https://papers.labml.ai/paper/3999902edc8511eba3db37f65e372566\">\u0dc4\u0dda\u0dad\u0dd4 \u0db1\u0ddc\u0dc0\u0db1 \u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba\u0da7 \u0db4\u0dd0\u0dc4\u0dd0\u0daf\u0dd2\u0dbd\u0dd2 \u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dd3\u0dba \u0dad\u0ddc\u0dbb\u0dad\u0dd4\u0dbb\u0dd4 \u0d85\u0dc0\u0dc1\u0dca\u0dba \u0dc0\u0db1\u0dca\u0db1\u0dda \u0d91\u0dba\u0da7 \u0d85\u0db1\u0dd4\u0db8\u0dcf\u0db1 \u0d9a\u0dc5 \u0db1\u0ddc\u0dc4\u0dd0\u0d9a\u0dd2 \u0db6\u0dd0\u0dc0\u0dd2\u0db1\u0dd2</a>. </em></p>\n",
 "<h2>Chunked Cross-Attention Layer <span translate=no>_^_0_^_</span></h2>\n<p>This is similar to the cross-attention layer defined above.</p>\n<p>This is used in the decoder to pay attention to the retrieved neighbor chunks.</p>\n<p><em>We do not use any explicit positional embeddings here. We assume that the model can represent positional information in the embeddings implicitly.</em></p>\n": "<h2>\u0dad\u0dd0\u0dc5\u0dd4\u0dab\u0dd4\u0dc4\u0dbb\u0dc3\u0dca \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dca\u0dae\u0dbb\u0dba <span translate=no>_^_0_^_</span></h2>\n<p>\u0db8\u0dd9\u0dba\u0d89\u0dc4\u0dad \u0d85\u0dbb\u0dca\u0dae \u0daf\u0d9a\u0dca\u0dc0\u0dcf \u0d87\u0dad\u0dd2 \u0dc4\u0dbb\u0dc3\u0dca \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0da7 \u0dc3\u0db8\u0dcf\u0db1 \u0dc0\u0dda. </p>\n<p>\u0db8\u0dd9\u0dba\u0db1\u0dd0\u0dc0\u0dad \u0dbd\u0db6\u0dcf \u0d9c\u0dad\u0dca \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0dcf \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 \u0dc0\u0dd9\u0dad \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a\u0dba \u0dad\u0dd4\u0dc5 \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0dc0\u0dda. </p>\n<p><em>\u0d85\u0db4\u0dd2\u0db8\u0dd9\u0dc4\u0dd2 \u0d9a\u0dd2\u0dc3\u0dd2\u0daf\u0dd4 \u0db4\u0dd0\u0dc4\u0dd0\u0daf\u0dd2\u0dbd\u0dd2 \u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dd3\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0d9a\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0db1\u0ddc\u0d9a\u0dbb\u0db8\u0dd4. \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba\u0da7 \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc0\u0dbd \u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dd3\u0dba \u0dad\u0ddc\u0dbb\u0dad\u0dd4\u0dbb\u0dd4 \u0dc0\u0dca\u0dba\u0d82\u0d9c\u0dba\u0dd9\u0db1\u0dca \u0db1\u0dd2\u0dba\u0ddd\u0da2\u0db1\u0dba \u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2 \u0dba\u0dd0\u0dba\u0dd2 \u0d85\u0db4\u0dd2 \u0d8b\u0db4\u0d9a\u0dbd\u0dca\u0db4\u0db1\u0dba \u0d9a\u0dbb\u0db8\u0dd4. </em></p>\n",
 "<h2>Cross-Attention Layer <span translate=no>_^_0_^_</span></h2>\n<p>This is similar to the self-attention layer defined above, except that it gets keys and values from a different set of embeddings than the queries.</p>\n<p>This is used in the encoder to encode the retrieved chunks based on the input chunks.</p>\n<p><em>We do not use any explicit positional embeddings here. We assume that the model can represent positional information in the embeddings implicitly.</em></p>\n": "<h2>\u0dc4\u0dbb\u0dc3\u0dca\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dca\u0dae\u0dbb\u0dba <span translate=no>_^_0_^_</span></h2>\n<p>\u0db8\u0dd9\u0dba\u0d89\u0dc4\u0dad \u0d85\u0dbb\u0dca\u0dae \u0daf\u0d9a\u0dca\u0dc0\u0dcf \u0d87\u0dad\u0dd2 \u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0da7 \u0dc3\u0db8\u0dcf\u0db1 \u0dc0\u0dda, \u0d91\u0dba \u0dc0\u0dd2\u0db8\u0dc3\u0dd4\u0db8\u0dca \u0dc0\u0dbd\u0da7 \u0dc0\u0da9\u0dcf \u0dc0\u0dd9\u0db1\u0dc3\u0dca \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba\u0d9a\u0dd2\u0db1\u0dca \u0dba\u0dad\u0dd4\u0dbb\u0dd4 \u0dc3\u0dc4 \u0d85\u0d9c\u0dba\u0db1\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dd3. </p>\n<p>\u0d86\u0daf\u0dcf\u0db1\u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 \u0db8\u0dad \u0db4\u0daf\u0db1\u0db8\u0dca\u0dc0 \u0db1\u0dd0\u0dc0\u0dad \u0dbd\u0db6\u0dcf \u0d9c\u0dad\u0dca \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 \u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0db8\u0dd9\u0dba \u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dba\u0dda \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0dc0\u0dda. </p>\n<p><em>\u0d85\u0db4\u0dd2\u0db8\u0dd9\u0dc4\u0dd2 \u0d9a\u0dd2\u0dc3\u0dd2\u0daf\u0dd4 \u0db4\u0dd0\u0dc4\u0dd0\u0daf\u0dd2\u0dbd\u0dd2 \u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dd3\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0d9a\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0db1\u0ddc\u0d9a\u0dbb\u0db8\u0dd4. \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba\u0da7 \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc0\u0dbd \u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dd3\u0dba \u0dad\u0ddc\u0dbb\u0dad\u0dd4\u0dbb\u0dd4 \u0dc0\u0dca\u0dba\u0d82\u0d9c\u0dba\u0dd9\u0db1\u0dca \u0db1\u0dd2\u0dba\u0ddd\u0da2\u0db1\u0dba \u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2 \u0dba\u0dd0\u0dba\u0dd2 \u0d85\u0db4\u0dd2 \u0d8b\u0db4\u0d9a\u0dbd\u0dca\u0db4\u0db1\u0dba \u0d9a\u0dbb\u0db8\u0dd4. </em></p>\n",
 "<h2>Nearest Neighbor Encoder <span translate=no>_^_0_^_</span></h2>\n<p>This module encodes the retrieved nearest neighbors</p>\n": "<h2>\u0dc5\u0d9f\u0db8\u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2 \u0d86\u0d9a\u0dda\u0dad\u0d9a\u0dba <span translate=no>_^_0_^_</span></h2>\n<p>\u0db8\u0dd9\u0db8\u0db8\u0ddc\u0da9\u0dd2\u0dba\u0dd4\u0dbd\u0dba \u0dbd\u0db6\u0dcf \u0d9c\u0dad\u0dca \u0d86\u0dc3\u0db1\u0dca\u0db1\u0dad\u0db8 \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0db1\u0dca \u0dc3\u0d82\u0d9a\u0dda\u0dad\u0dc0\u0dad\u0dca \u0d9a\u0dbb\u0dba\u0dd2</p>\n",
 "<h2>Retro Model</h2>\n<p>This is the Retro decoder</p>\n": "<h2>\u0dbb\u0dd9\u0da7\u0dca\u0dbb\u0ddd\u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba</h2>\n<p>\u0db8\u0dd9\u0dba\u0dbb\u0dd9\u0da7\u0dca\u0dbb\u0ddd \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a\u0dba</p>\n",
 "<h2>Self-Attention Layer <span translate=no>_^_0_^_</span></h2>\n<p>This applies causal and non-causal <a href=\"../mha.html\">multi-headed self-attention</a>.</p>\n": "<h2>\u0dc3\u0dca\u0dc0\u0dba\u0d82\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dca\u0dae\u0dbb\u0dba <span translate=no>_^_0_^_</span></h2>\n<p>\u0db8\u0dd9\u0dba\u0dc4\u0dda\u0dad\u0dd4 \u0dc3\u0dc4 \u0dc4\u0dda\u0dad\u0dd4 \u0db1\u0ddc\u0dc0\u0db1 <a href=\"../mha.html\">\u0db6\u0dc4\u0dd4-\u0dc4\u0dd2\u0dc3 \u0dc3\u0dc4\u0dd2\u0dad \u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba</a>\u0d85\u0daf\u0dcf\u0dc5 \u0dc0\u0dda. </p>\n",
 "<h3>Mask the attention layer for causal attention</h3>\n<ul><li><span translate=no>_^_0_^_</span> is the attention matrix of shape <span translate=no>_^_1_^_</span></li></ul>\n": "<h3>\u0dc4\u0dda\u0dad\u0dd4\u0d9a\u0dcf\u0dbb\u0d9a\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0dc3\u0dca\u0dad\u0dbb\u0dba \u0d86\u0dc0\u0dbb\u0dab\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1</h3>\n<ul><li><span translate=no>_^_0_^_</span> \u0dc4\u0dd0\u0da9\u0dba\u0dda \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0d85\u0db1\u0dd4\u0d9a\u0dd8\u0dad\u0dd2\u0dba\u0d9a\u0dd2 <span translate=no>_^_1_^_</span></li></ul>\n",
 "<h3>Position-wise Feed Forward Layer <span translate=no>_^_0_^_</span></h3>\n<p>This consists of two linear layers and an activation in the middle.</p>\n": "<h3>\u0dc3\u0dca\u0dae\u0dcf\u0db1-\u0db1\u0dd0\u0dab\u0dc0\u0dad\u0dca\u0db4\u0ddd\u0dc2\u0dab\u0dba \u0d89\u0daf\u0dd2\u0dbb\u0dd2 \u0dc3\u0dca\u0dae\u0dbb\u0dba <span translate=no>_^_0_^_</span></h3>\n<p>\u0db8\u0dd9\u0dba\u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0dc3\u0dca\u0dae\u0dbb \u0daf\u0dd9\u0d9a\u0d9a\u0dca \u0dc3\u0dc4 \u0db8\u0dd0\u0daf \u0dc3\u0d9a\u0dca\u0dbb\u0dd2\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0d9a\u0dd2\u0db1\u0dca \u0dc3\u0db8\u0db1\u0dca\u0dc0\u0dd2\u0dad \u0dc0\u0dda. </p>\n",
 "<h3>Test the model with fake data</h3>\n": "<h3>\u0dc0\u0dca\u0dba\u0dcf\u0da2\u0daf\u0dad\u0dca\u0dad \u0dc3\u0db8\u0d9f \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba \u0db4\u0dbb\u0dd3\u0d9a\u0dca\u0dc2\u0dcf \u0d9a\u0dbb\u0db1\u0dca\u0db1</h3>\n",
 "<p> </p>\n": "<p> </p>\n",
 "<p> <span translate=no>_^_0_^_</span> are the embeddings of shape <span translate=no>_^_1_^_</span></p>\n": "<p> <span translate=no>_^_0_^_</span> \u0dc4\u0dd0\u0da9\u0dba\u0dda \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc0\u0dda <span translate=no>_^_1_^_</span></p>\n",
 "<p> <span translate=no>_^_0_^_</span> are the input embeddings of shape <span translate=no>_^_1_^_</span> <span translate=no>_^_2_^_</span> are the retrieved nearest neighbors of shape <span translate=no>_^_3_^_</span></p>\n": "<p> <span translate=no>_^_0_^_</span> \u0dc4\u0dd0\u0da9\u0dba\u0dda \u0d86\u0daf\u0dcf\u0db1 <span translate=no>_^_1_^_</span> <span translate=no>_^_2_^_</span> \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dba\u0db1\u0dd4 \u0dc4\u0dd0\u0da9\u0dba\u0dda \u0d86\u0dc3\u0db1\u0dca\u0db1\u0dad\u0db8 \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0db1\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0dad \u0dc4\u0dd0\u0d9a\u0dd2\u0dba <span translate=no>_^_3_^_</span></p>\n",
 "<p><span translate=no>_^_0_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span> </p>\n",
 "<p><span translate=no>_^_0_^_</span></p>\n<p>We passed the embeddings of <span translate=no>_^_1_^_</span> to encoder. </p>\n": "<p><span translate=no>_^_0_^_</span></p>\n<p>\u0d85\u0db4\u0dd2 <span translate=no>_^_1_^_</span> \u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dba\u0da7 \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc3\u0db8\u0dca\u0db8\u0dad \u0d9a\u0dc5\u0dd9\u0db8\u0dd4. </p>\n",
 "<p>Activation </p>\n": "<p>\u0dc3\u0d9a\u0dca\u200d\u0dbb\u0dd3\u0dba\u0d9a\u0dd2\u0dbb\u0dd3\u0db8 </p>\n",
 "<p>Add residual connection </p>\n": "<p>\u0d85\u0dc0\u0dc1\u0dda\u0dc2\u0dc3\u0db8\u0dca\u0db6\u0db1\u0dca\u0db0\u0dad\u0dcf\u0dc0\u0dba \u0d91\u0d9a\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Add the residual connection </p>\n": "<p>\u0d85\u0dc0\u0dc1\u0dda\u0dc2\u0dc3\u0db8\u0dca\u0db6\u0db1\u0dca\u0db0\u0dad\u0dcf\u0dc0\u0dba \u0d91\u0d9a\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Append <span translate=no>_^_0_^_</span> zero embedding to the left; i.e. right shift it back </p>\n": "<p>\u0dc0\u0db8\u0da7 <span translate=no>_^_0_^_</span> \u0dc1\u0dd4\u0db1\u0dca\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8 \u0d91\u0d9a\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1; \u0d91\u0db1\u0db8\u0dca \u0daf\u0d9a\u0dd4\u0dab\u0dd4 \u0d91\u0dba \u0d86\u0db4\u0dc3\u0dd4 \u0db8\u0dcf\u0dbb\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Append empty embeddings to the end to be able to split the input into chunks </p>\n": "<p>\u0d86\u0daf\u0dcf\u0db1\u0dba\u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 \u0dc0\u0dbd\u0da7 \u0db6\u0dd9\u0daf\u0dd3\u0db8\u0da7 \u0dc4\u0dd0\u0d9a\u0dd2\u0dc0\u0db1 \u0db4\u0dbb\u0dd2\u0daf\u0dd2 \u0dc4\u0dd2\u0dc3\u0dca \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0d85\u0dc0\u0dc3\u0dcf\u0db1\u0dba \u0daf\u0d9a\u0dca\u0dc0\u0dcf \u0d91\u0d9a\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Apply final linear layer. The result will have shape <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d85\u0dc0\u0dc3\u0dcf\u0db1\u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0dc3\u0dca\u0dae\u0dbb\u0dba \u0dba\u0ddc\u0daf\u0db1\u0dca\u0db1. \u0db4\u0dca\u0dbb\u0dad\u0dd2 result \u0dbd\u0dba \u0dc4\u0dd0\u0da9\u0dba \u0d87\u0dad <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Apply masks if it&#x27;s causal attention </p>\n": "<p>\u0d91\u0dba\u0dc4\u0dda\u0dad\u0dd4 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba\u0d9a\u0dca \u0db1\u0db8\u0dca \u0dc0\u0dd9\u0dc3\u0dca \u0db8\u0dd4\u0dc4\u0dd4\u0dab\u0dd4 \u0dba\u0ddc\u0daf\u0db1\u0dca\u0db1 </p>\n",
 "<p>Apply rotary positional embeddings </p>\n": "<p>\u0db7\u0dca\u0dbb\u0db8\u0dab\u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dd3\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dba\u0ddc\u0daf\u0db1\u0dca\u0db1 </p>\n",
 "<p>Apply softmax over the last two dimensions <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d85\u0dc0\u0dc3\u0dcf\u0db1\u0db8\u0dcf\u0db1\u0dba\u0db1\u0dca \u0daf\u0dd9\u0d9a\u0da7 \u0dc0\u0da9\u0dcf \u0dc3\u0ddc\u0dc6\u0dca\u0da7\u0dca\u0db8\u0dd0\u0d9a\u0dca\u0dc3\u0dca \u0dba\u0ddc\u0daf\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Attention layers <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba\u0dc3\u0dca\u0dae\u0dbb <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Bi-directional self attention <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0daf\u0dca\u0dc0\u0dd2-\u0daf\u0dd2\u0dc1\u0dcf\u0db1\u0dd4\u0d9c\u0dad\u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Bi-directional self attention layers </p>\n": "<p>\u0daf\u0dca\u0dc0\u0dd2-\u0daf\u0dd2\u0dc1\u0dcf\u0db1\u0dd4\u0d9c\u0dad\u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dca\u0dae\u0dbb </p>\n",
 "<p>Calculate <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d9c\u0dab\u0db1\u0dba\u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Calculate attention probabilities </p>\n": "<p>\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba\u0dc3\u0db8\u0dca\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf\u0dc0 \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Calculate attention scores for all chunks. Each retrieved neighbor will pay attention to the original chunk that retrieved it. This will have shape <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc3\u0dd2\u0dba\u0dbd\u0dd4\u0db8\u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dbd\u0d9a\u0dd4\u0dab\u0dd4 \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1. \u0dbd\u0db6\u0dcf \u0d9c\u0dad\u0dca \u0dc3\u0dd1\u0db8 \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0dd9\u0d9a\u0dd4\u0db8 \u0d91\u0dba \u0db1\u0dd0\u0dc0\u0dad \u0dbd\u0db6\u0dcf \u0d9c\u0dad\u0dca \u0db8\u0dd4\u0dbd\u0dca \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2\u0dba \u0d9a\u0dd9\u0dbb\u0dd9\u0dc4\u0dd2 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0d9a\u0dbb\u0db1\u0dd4 \u0d87\u0dad. \u0db8\u0dd9\u0db8 \u0dc4\u0dd0\u0da9\u0dba \u0d87\u0dad <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Calculate attention scores for input chunks. Each chunk will pay attention to neighbors retrieved by the previous chunk. This will have shape <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d86\u0daf\u0dcf\u0db1\u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dbd\u0d9a\u0dd4\u0dab\u0dd4 \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1. \u0dc3\u0dd1\u0db8 \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2\u0dba\u0d9a\u0dca\u0db8 \u0d9a\u0dbd\u0dd2\u0db1\u0dca \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2\u0dba \u0dc0\u0dd2\u0dc3\u0dd2\u0db1\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1\u0dcf \u0dbd\u0daf \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0db1\u0dca \u0d9a\u0dd9\u0dbb\u0dd9\u0dc4\u0dd2 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0d9a\u0dbb\u0db1\u0dd4 \u0d87\u0dad. \u0db8\u0dd9\u0db8 \u0dc4\u0dd0\u0da9\u0dba \u0d87\u0dad <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Calculate attentions </p>\n": "<p>\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba\u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Calculate softmax across the last dimension </p>\n": "<p>\u0d85\u0dc0\u0dc3\u0dcf\u0db1\u0db8\u0dcf\u0db1\u0dba \u0dc4\u0dbb\u0dc4\u0dcf \u0dc3\u0ddc\u0dc6\u0dca\u0da7\u0dca\u0db8\u0dd0\u0d9a\u0dca\u0dc3\u0dca \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Calculate the product of position index and <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc3\u0dca\u0dae\u0dcf\u0db1\u0daf\u0dbb\u0dca\u0dc1\u0d9a\u0dba\u0dda \u0db1\u0dd2\u0dc2\u0dca\u0db4\u0dcf\u0daf\u0dd2\u0dad\u0dba \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Calculate</p>\n<span translate=no>_^_0_^_</span><p>for <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0d9c\u0dab\u0db1\u0dba\u0d9a\u0dbb\u0db1\u0dca\u0db1</p>\n<span translate=no>_^_0_^_</span><p>\u0dc3\u0db3\u0dc4\u0dcf <span translate=no>_^_1_^_</span> </p>\n",
 "<p>Causal self attention <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc4\u0dda\u0dad\u0dd4\u0d9a\u0dcf\u0dbb\u0d9a\u0dc3\u0dca\u0dc0\u0dba\u0d82 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Change from shape <span translate=no>_^_0_^_</span> to <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0dc4\u0dd0\u0da9\u0dba\u0dd9\u0db1\u0dca\u0dc0\u0dd9\u0db1\u0dc3\u0dca <span translate=no>_^_0_^_</span> \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_1_^_</span> </p>\n",
 "<p>Chunked cross attention layers <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d9a\u0db4\u0db1\u0dbd\u0daf \u0dc4\u0dbb\u0dc3\u0dca \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dca\u0dae\u0dbb <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Chunked-cross attention if <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d9a\u0dd4\u0dbb\u0dd4\u0dc3-\u0dc4\u0dbb\u0dc3\u0dca\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0db1\u0db8\u0dca <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Concatenate so that for row <span translate=no>_^_0_^_</span> we have <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0db4\u0dda\u0dc5\u0dd2\u0dba\u0dc3\u0db3\u0dc4\u0dcf <span translate=no>_^_0_^_</span> \u0d85\u0db4\u0da7 \u0d87\u0dad\u0dd2 \u0db4\u0dbb\u0dd2\u0daf\u0dd2 \u0dc3\u0d82\u0dba\u0dd4\u0d9a\u0dca\u0dad \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_1_^_</span> </p>\n",
 "<p>Create a triangular mask </p>\n": "<p>\u0dad\u0dca\u0dbb\u0dd2\u0d9a\u0ddd\u0dab\u0dcf\u0d9a\u0dcf\u0dbb\u0dc0\u0dd9\u0dc3\u0dca \u0db8\u0dd4\u0dc4\u0dd4\u0dab\u0d9a\u0dca \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 </p>\n",
 "<p>Create position indexes <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc3\u0dca\u0dae\u0dcf\u0db1\u0daf\u0dbb\u0dca\u0dc1\u0d9a \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Cross attention if <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc4\u0dbb\u0dc3\u0dca\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1\u0dda \u0db1\u0db8\u0dca <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Cross-attention layers </p>\n": "<p>\u0dc4\u0dbb\u0dc3\u0dca\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dca\u0dae\u0dbb </p>\n",
 "<p>Embeddings of the retrieved neighbors <span translate=no>_^_0_^_</span>.</p>\n<p>We use same embeddings for both input and neighbors </p>\n": "<p>\u0dbd\u0db6\u0dcf\u0d9c\u0dad\u0dca \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dcf\u0dc3\u0dd3\u0db1\u0dca\u0d9c\u0dda \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca <span translate=no>_^_0_^_</span>. </p>\n<p>\u0d86\u0daf\u0dcf\u0db1\u0dc3\u0dc4 \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0db1\u0dca \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0db4\u0dd2 \u0d91\u0d9a\u0db8 \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db8\u0dd4 </p>\n",
 "<p>Extract the shape </p>\n": "<p>\u0dc4\u0dd0\u0da9\u0dba\u0d8b\u0db4\u0dd4\u0da7\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Feed forward layer <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d89\u0daf\u0dd2\u0dbb\u0dd2\u0dc3\u0dca\u0dae\u0dbb\u0dba \u0db4\u0ddd\u0dc2\u0dab\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Feed forward layers </p>\n": "<p>\u0d89\u0daf\u0dd2\u0dbb\u0dd2\u0dc3\u0dca\u0dae\u0dbb \u0db4\u0ddd\u0dc2\u0dab\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Feed forward layers <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d89\u0daf\u0dd2\u0dbb\u0dd2\u0dc3\u0dca\u0dae\u0dbb \u0db4\u0ddd\u0dc2\u0dab\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Filter by the mask </p>\n": "<p>\u0dc0\u0dd9\u0dc3\u0dca\u0db8\u0dd4\u0dc4\u0dd4\u0dab\u0db8\u0d9c\u0dd2\u0db1\u0dca \u0db4\u0dd9\u0dbb\u0dc4\u0db1\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Final linear layer </p>\n": "<p>\u0d85\u0dc0\u0dc3\u0dcf\u0db1\u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0dc3\u0dca\u0dae\u0dbb\u0dba </p>\n",
 "<p>First linear layer </p>\n": "<p>\u0db4\u0dc5\u0db8\u0dd4\u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0dc3\u0dca\u0dae\u0dbb\u0dba </p>\n",
 "<p>For all layers <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc3\u0dd2\u0dba\u0dbd\u0dd4\u0db8\u0dc3\u0dca\u0dae\u0dbb \u0dc3\u0db3\u0dc4\u0dcf <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Gather values </p>\n": "<p>\u0dc0\u0da7\u0dd2\u0db1\u0dcf\u0d9a\u0db8\u0dca\u0d91\u0d9a\u0dad\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get encoder embeddings before the first <span translate=no>_^_0_^_</span> layer, when <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0db4\u0dc5\u0db8\u0dd4 <span translate=no>_^_0_^_</span> \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0da7 \u0db4\u0dd9\u0dbb \u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dca \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 <span translate=no>_^_1_^_</span> </p>\n",
 "<p>Get input embeddings <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d86\u0daf\u0dcf\u0db1\u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Get keys and values from the input chunks </p>\n": "<p>\u0d86\u0daf\u0dcf\u0db1\u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 \u0dc0\u0dbd\u0dd2\u0db1\u0dca \u0dba\u0dad\u0dd4\u0dbb\u0dd4 \u0dc3\u0dc4 \u0d85\u0d9c\u0dba\u0db1\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get keys and values from the retrieved neighbors </p>\n": "<p>\u0dbd\u0db6\u0dcf\u0d9c\u0dad\u0dca \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0db1\u0dca\u0d9c\u0dd9\u0db1\u0dca \u0dba\u0dad\u0dd4\u0dbb\u0dd4 \u0dc3\u0dc4 \u0dc0\u0da7\u0dd2\u0db1\u0dcf\u0d9a\u0db8\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get query from the input </p>\n": "<p>\u0d86\u0daf\u0dcf\u0db1\u0dba\u0dd9\u0db1\u0dca\u0dc0\u0dd2\u0db8\u0dc3\u0dd4\u0db8 \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get query from the retrieved chunks </p>\n": "<p>\u0dbd\u0db6\u0dcf\u0d9c\u0dad\u0dca \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 \u0dc0\u0dbd\u0dd2\u0db1\u0dca \u0dc0\u0dd2\u0db8\u0dc3\u0dd4\u0db8 \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get query, key, and values and split them in to heads. These will have shapes <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc0\u0dd2\u0db8\u0dc3\u0dd4\u0db8, \u0dba\u0dad\u0dd4\u0dbb \u0dc3\u0dc4 \u0d85\u0d9c\u0dba\u0db1\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0dd9\u0db1 \u0d92\u0dc0\u0dcf \u0dc4\u0dd2\u0dc3\u0dca \u0dc0\u0dbd\u0da7 \u0db6\u0dd9\u0daf\u0db1\u0dca\u0db1. \u0db8\u0dda\u0dc0\u0dcf\u0da7 \u0dc4\u0dd0\u0da9\u0dba\u0db1\u0dca \u0d87\u0dad <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Get shape </p>\n": "<p>\u0dc4\u0dd0\u0da9\u0dba\u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get values </p>\n": "<p>\u0dc0\u0da7\u0dd2\u0db1\u0dcf\u0d9a\u0db8\u0dca\u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Increment chunked cross-attention index </p>\n": "<p>\u0dc0\u0dbb\u0dca\u0db0\u0d9a\u0d9a\u0db4\u0db1 \u0dbd\u0daf \u0dc4\u0dbb\u0dc3\u0dca \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0daf\u0dbb\u0dca\u0dc1\u0d9a\u0dba </p>\n",
 "<p>Incremnt the cross attention index </p>\n": "<p>\u0dc4\u0dbb\u0dc3\u0dca\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0daf\u0dbb\u0dca\u0dc1\u0d9a\u0dba \u0dc0\u0dd0\u0da9\u0dd2 \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Keep index of the chunked cross attention layer </p>\n": "<p>\u0d9a\u0db4\u0db1\u0dbd\u0daf \u0dc4\u0dbb\u0dc3\u0dca \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0dda \u0daf\u0dbb\u0dca\u0dc1\u0d9a\u0dba \u0dad\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Keep the index of the cross attention layer </p>\n": "<p>\u0dc4\u0dbb\u0dc3\u0dca\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0dda \u0daf\u0dbb\u0dca\u0dc1\u0d9a\u0dba \u0dad\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Linear layers for query, key and value heads. </p>\n": "<p>\u0dc0\u0dd2\u0db8\u0dc3\u0dd4\u0db8, \u0dba\u0dad\u0dd4\u0dbb\u0dd4 \u0dc3\u0dc4 \u0d85\u0d9c\u0dba \u0dc4\u0dd2\u0dc3\u0dca \u0dc3\u0db3\u0dc4\u0dcf \u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0dc3\u0dca\u0dae\u0dbb. </p>\n",
 "<p>No attention if there are no chunks (for short inputs when sampling) </p>\n": "<p>\u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2\u0db1\u0ddc\u0db8\u0dd0\u0dad\u0dd2 \u0db1\u0db8\u0dca \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0db1\u0ddc\u0d9a\u0dbb\u0dba\u0dd2 (\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dda\u0daf\u0dd3 \u0d9a\u0dd9\u0da7\u0dd2 \u0dba\u0dd9\u0daf\u0dc0\u0dd4\u0db8\u0dca \u0dc3\u0db3\u0dc4\u0dcf) </p>\n",
 "<p>No masking for non-causal attention </p>\n": "<p>\u0dc4\u0dda\u0dad\u0dd4\u0db1\u0ddc\u0dc0\u0db1 \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0db3\u0dc4\u0dcf \u0d86\u0dc0\u0dbb\u0dab \u0db1\u0ddc\u0db8\u0dd0\u0dad </p>\n",
 "<p>Normalize encoder embeddings </p>\n": "<p>\u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dca\u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Normalize retrieved chunks </p>\n": "<p>\u0dbd\u0db6\u0dcf\u0d9c\u0dad\u0dca \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Pre-norm </p>\n": "<p>\u0db4\u0dd6\u0dbb\u0dca\u0dc0\u0dc3\u0db8\u0dca\u0db8\u0dad\u0dba </p>\n",
 "<p>Pre-norm layer </p>\n": "<p>\u0db4\u0dd9\u0dbb-\u0dc3\u0db8\u0dca\u0db8\u0dad\u0dc3\u0dca\u0dad\u0dbb\u0dba </p>\n",
 "<p>Pre-norm layer for the query embeddings. The paper uses RMSNorm instead. </p>\n": "<p>\u0dc0\u0dd2\u0db8\u0dc3\u0dd4\u0db8\u0dca\u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc3\u0db3\u0dc4\u0dcf \u0db4\u0dd6\u0dbb\u0dca\u0dc0 \u0dc3\u0db8\u0dca\u0db8\u0dad \u0dc3\u0dca\u0dad\u0dbb\u0dba. \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0dc0\u0dd9\u0db1\u0dd4\u0dc0\u0da7 RMSNorm \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0dba\u0dd2. </p>\n",
 "<p>Pre-norm layer. The paper uses RMSNorm instead. </p>\n": "<p>\u0db4\u0dd6\u0dbb\u0dca\u0dc0\u0dc3\u0db8\u0dca\u0db8\u0dad \u0dc3\u0dca\u0dad\u0dbb\u0dba. \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0dc0\u0dd9\u0db1\u0dd4\u0dc0\u0da7 RMSNorm \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0dba\u0dd2. </p>\n",
 "<p>Pre-normalization </p>\n": "<p>\u0db4\u0dd6\u0dbb\u0dca\u0dc0\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba </p>\n",
 "<p>Pre-normalization layer for <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc3\u0db3\u0dc4\u0dcf\u0db4\u0dd6\u0dbb\u0dca\u0dc0 \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab \u0dc3\u0dca\u0dad\u0dbb\u0dba <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Pre-normalization layer for nearest neighbor embeddings from <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d86\u0dc3\u0db1\u0dca\u0db1\u0dad\u0db8\u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0dcf\u0d9c\u0dda \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc3\u0db3\u0dc4\u0dcf \u0db4\u0dd6\u0dbb\u0dca\u0dc0 \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab \u0dc3\u0dca\u0dad\u0dbb\u0dba <span translate=no>_^_0_^_</span> </p>\n",
 "<p>ReLU Activation </p>\n": "<p>Relu\u0dc3\u0d9a\u0dca\u0dbb\u0dd2\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 </p>\n",
 "<p>Readout layer <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d9a\u0dd2\u0dba\u0dc0\u0dd3\u0db8\u0dda\u0dc3\u0dca\u0dae\u0dbb\u0dba <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Remove the first <span translate=no>_^_0_^_</span> embeddings. The input pays attention to neighbors retrieved and encoded using the past tokens only; so that there is no information leakage. That is the retrieved neighbors from the first chunks will have information from the first chunk. So by shifting the sequence to the left by <span translate=no>_^_1_^_</span> we make sure that information only flows to the right. </p>\n": "<p>\u0db4\u0dc5\u0db8\u0dd4 <span translate=no>_^_0_^_</span> \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0d89\u0dc0\u0dad\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1. \u0d85\u0dad\u0dd3\u0dad \u0da7\u0ddd\u0d9a\u0db1 \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dba\u0dd9\u0db1\u0dca \u0db4\u0db8\u0dab\u0d9a\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0dad\u0dca \u0dc3\u0dc4 \u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dbb \u0d87\u0dad\u0dd2 \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0db1\u0dca \u0d9a\u0dd9\u0dbb\u0dd9\u0dc4\u0dd2 \u0d86\u0daf\u0dcf\u0db1\u0dba \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0d9a\u0dbb\u0dba\u0dd2; \u0d91\u0dc0\u0dd2\u0da7 \u0dad\u0ddc\u0dbb\u0dad\u0dd4\u0dbb\u0dd4 \u0d9a\u0dcf\u0db1\u0dca\u0daf\u0dd4 \u0dc0\u0dd3\u0db8\u0d9a\u0dca \u0dc3\u0dd2\u0daf\u0dd4 \u0db1\u0ddc\u0dc0\u0dda. \u0db4\u0dc5\u0db8\u0dd4 \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2\u0dba\u0dda \u0dc3\u0dd2\u0da7 \u0dbd\u0db6\u0dcf\u0d9c\u0dad\u0dca \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0db1\u0dca \u0db4\u0dc5\u0db8\u0dd4 \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2\u0dba\u0dd9\u0db1\u0dca \u0dad\u0ddc\u0dbb\u0dad\u0dd4\u0dbb\u0dd4 \u0dbd\u0dd0\u0db6\u0dd9\u0db1\u0dd4 \u0d87\u0dad. \u0d91\u0db6\u0dd0\u0dc0\u0dd2\u0db1\u0dca \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dba \u0dc0\u0db8\u0da7 \u0db8\u0dcf\u0dbb\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dd9\u0db1\u0dca \u0dad\u0ddc\u0dbb\u0dad\u0dd4\u0dbb\u0dd4 \u0db4\u0db8\u0dab\u0d9a\u0dca \u0daf\u0d9a\u0dd4\u0dab\u0da7 \u0d9c\u0dbd\u0dcf \u0dba\u0db1 \u0db6\u0dc0\u0da7 <span translate=no>_^_1_^_</span> \u0d85\u0db4\u0dd2 \u0dc0\u0d9c \u0db6\u0dbd\u0dcf \u0d9c\u0db1\u0dd2\u0db8\u0dd4. </p>\n",
 "<p>Reshape the input into chunks. </p>\n": "<p>\u0d86\u0daf\u0dcf\u0db1\u0dba\u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 \u0db6\u0dc0\u0da7 \u0db1\u0dd0\u0dc0\u0dad \u0dc3\u0d9a\u0dc3\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1. </p>\n",
 "<p>Residual </p>\n": "<p>\u0d85\u0dc0\u0dc1\u0dda\u0dc2 </p>\n",
 "<p>Residual connection </p>\n": "<p>\u0d85\u0dc0\u0dc1\u0dda\u0dc2\u0dc3\u0db8\u0dca\u0db6\u0db1\u0dca\u0db0\u0dad\u0dcf\u0dc0\u0dba </p>\n",
 "<p>Rotary positional embeddings </p>\n": "<p>\u0dbb\u0ddc\u0da7\u0dbb\u0dd2\u0dc3\u0dca\u0dae\u0dcf\u0db1\u0dd3\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca </p>\n",
 "<p>Scale attention scores </p>\n": "<p>\u0db4\u0dbb\u0dd2\u0db8\u0dcf\u0dab\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dbd\u0d9a\u0dd4\u0dab\u0dd4 </p>\n",
 "<p>Scale it by <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc0\u0dd2\u0dc3\u0dd2\u0db1\u0dca\u0d91\u0dba \u0db4\u0dbb\u0dd2\u0db8\u0dcf\u0dab\u0dba <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Second linear layer </p>\n": "<p>\u0daf\u0dd9\u0dc0\u0db1\u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0dc3\u0dca\u0dae\u0dbb\u0dba </p>\n",
 "<p>Softmax for attention probabilities </p>\n": "<p>\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba\u0dc3\u0db8\u0dca\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf\u0dc0 \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0ddc\u0dc6\u0dca\u0da7\u0dca\u0db8\u0dd0\u0d9a\u0dca\u0dc3\u0dca </p>\n",
 "<p>The two linear layers </p>\n": "<p>\u0dbb\u0dda\u0d9b\u0dd3\u0dba\u0dc3\u0dca\u0dae\u0dbb \u0daf\u0dd9\u0d9a </p>\n",
 "<p>To scale attentions before softmax by <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc3\u0ddc\u0dc6\u0dca\u0da7\u0dca\u0db8\u0dd0\u0d9a\u0dca\u0dc3\u0dca\u0dc0\u0dbd\u0da7 \u0db4\u0dd9\u0dbb \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0db4\u0dbb\u0dd2\u0db8\u0dcf\u0dab\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Token embedding layer </p>\n": "<p>\u0da7\u0ddd\u0d9a\u0db1\u0dca\u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8 \u0dc3\u0dca\u0dae\u0dbb\u0dba </p>\n",
 "<p>Truncate and add the residual connection </p>\n": "<p>\u0d85\u0dc0\u0dc1\u0dda\u0dc2\u0dc3\u0db8\u0dca\u0db6\u0db1\u0dca\u0db0\u0dad\u0dcf\u0dc0\u0dba \u0d89\u0dc0\u0dad\u0dca \u0d9a\u0dbb \u0d91\u0d9a\u0dad\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>return <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d86\u0db4\u0dc3\u0dd4 <span translate=no>_^_0_^_</span> </p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> are the retrieved nearest neighbor chunk embeddings with shape  <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span> are the input chunks from which the nearest neighbors were retrieved with shape  <span translate=no>_^_3_^_</span>. This is already normalized.</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dc4\u0dd0\u0da9\u0dba\u0dd9\u0db1\u0dca \u0dba\u0dd4\u0dad\u0dca \u0dc5\u0d9f\u0db8 \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0dcf\u0d9c\u0dda \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0dad \u0dc4\u0dd0\u0d9a\u0dd2\u0dba <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span> \u0d86\u0dc3\u0db1\u0dca\u0db1\u0dad\u0db8 \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0db1\u0dca \u0dc4\u0dd0\u0da9\u0dba\u0dd9\u0db1\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1\u0dcf \u0dbd\u0daf \u0d86\u0daf\u0dcf\u0db1 \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 <span translate=no>_^_3_^_</span>\u0dc0\u0dda. \u0db8\u0dd9\u0dba \u0daf\u0dd0\u0db1\u0da7\u0db8\u0dad\u0dca \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0dc0\u0dd3 \u0d87\u0dad. </li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> are token embeddings of the retrieved nearest neighbors,  <span translate=no>_^_1_^_</span>  of shape <span translate=no>_^_2_^_</span></li></ul>\n<ul><li><span translate=no>_^_3_^_</span> is are the input token embeddings, <span translate=no>_^_4_^_</span>  of shape <span translate=no>_^_5_^_</span></li></ul>\n<p><em>The chunks <span translate=no>_^_6_^_</span> and neighbors <span translate=no>_^_7_^_</span> are processed in parallel.</em></p>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dbd\u0db6\u0dcf \u0d9c\u0dad\u0dca \u0dc5\u0d9f\u0db8 \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0db1\u0dca\u0d9c\u0dda \u0da7\u0ddd\u0d9a\u0db1\u0dca \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca, <span translate=no>_^_1_^_</span> \u0dc4\u0dd0\u0da9\u0dba\u0dd9\u0db1\u0dca <span translate=no>_^_2_^_</span></li></ul>\n<ul><li><span translate=no>_^_3_^_</span> \u0dba\u0db1\u0dd4 \u0d86\u0daf\u0dcf\u0db1 \u0da7\u0ddd\u0d9a\u0db1 \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca, <span translate=no>_^_4_^_</span> \u0dc4\u0dd0\u0da9\u0dba\u0dd9\u0db1\u0dca <span translate=no>_^_5_^_</span></li></ul>\n<p><em>\u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 <span translate=no>_^_6_^_</span> \u0dc3\u0dc4 \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dcf\u0dc3\u0dd3\u0db1\u0dca \u0dc3\u0db8\u0dcf\u0db1\u0dca\u0dad\u0dbb\u0dc0 \u0dc3\u0d9a\u0dc3\u0dca <span translate=no>_^_7_^_</span> \u0d9a\u0dbb\u0db1\u0dd4 \u0dbd\u0dd0\u0db6\u0dda. </em></p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the Tensor at the head of a key or a query with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dba\u0db1\u0dd4 \u0dba\u0dad\u0dd4\u0dbb\u0d9a \u0dc4\u0dd2\u0dc3\u0dd9\u0dc4\u0dd2 \u0da7\u0dd9\u0db1\u0dca\u0dc3\u0dbb\u0dca \u0dc4\u0ddd \u0dc4\u0dd0\u0da9\u0dba \u0dc3\u0dc4\u0dd2\u0dad \u0dc0\u0dd2\u0db8\u0dc3\u0dd4\u0db8\u0d9a\u0dd2 <span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the input sequence, <span translate=no>_^_1_^_</span> of shape <span translate=no>_^_2_^_</span> </li>\n<li><span translate=no>_^_3_^_</span> are the retrieved neighbors  <span translate=no>_^_4_^_</span>  of shape <span translate=no>_^_5_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0d86\u0daf\u0dcf\u0db1 \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dba, <span translate=no>_^_1_^_</span> \u0dc4\u0dd0\u0da9\u0dba\u0dd9\u0db1\u0dca <span translate=no>_^_2_^_</span> </li>\n<li><span translate=no>_^_3_^_</span> \u0dc4\u0dd0\u0da9\u0dba\u0dd9\u0db1\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0dad\u0dca \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0db1\u0dca <span translate=no>_^_4_^_</span> \u0dc0\u0dda <span translate=no>_^_5_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the length of a chunk </li>\n<li><span translate=no>_^_1_^_</span> is the number of layers in the encoder <span translate=no>_^_2_^_</span> </li>\n<li><span translate=no>_^_3_^_</span> are the layers with cross attention <span translate=no>_^_4_^_</span> </li>\n<li><span translate=no>_^_5_^_</span> is the number of features in embeddings </li>\n<li><span translate=no>_^_6_^_</span> is the number of heads in attention layers </li>\n<li><span translate=no>_^_7_^_</span> is the size of attention heads </li>\n<li><span translate=no>_^_8_^_</span> is the size of the feed-forward networks hidden layers</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dba\u0db1\u0dd4 \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2\u0dba\u0d9a \u0daf\u0dd2\u0d9c </li>\n<li><span translate=no>_^_1_^_</span> \u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dba\u0dda \u0dc3\u0dca\u0dae\u0dbb \u0d9c\u0dab\u0db1 <span translate=no>_^_2_^_</span> </li>\n<li><span translate=no>_^_3_^_</span> \u0dc4\u0dbb\u0dc3\u0dca \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0d87\u0dad\u0dd2 \u0dc3\u0dca\u0dae\u0dbb \u0dc0\u0dda <span translate=no>_^_4_^_</span> </li>\n<li><span translate=no>_^_5_^_</span> \u0dba\u0db1\u0dd4 \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc0\u0dbd \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0d9c\u0dab\u0db1 </li>\n<li><span translate=no>_^_6_^_</span> \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0dc3\u0dca\u0dae\u0dbb \u0dc0\u0dbd \u0dc4\u0dd2\u0dc3\u0dca \u0d9c\u0dab\u0db1 </li>\n<li><span translate=no>_^_7_^_</span> \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0db4\u0dca\u0dbb\u0db0\u0dcf\u0db1\u0dd3\u0db1\u0dca \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba </li>\n<li><span translate=no>_^_8_^_</span> \u0dba\u0db1\u0dd4 \u0db4\u0ddd\u0dc2\u0d9a \u0d89\u0daf\u0dd2\u0dbb\u0dd2 \u0da2\u0dcf\u0dbd\u0dba\u0dda \u0dc3\u0dd0\u0d9f\u0dc0\u0dd4\u0dab\u0dd4 \u0dc3\u0dca\u0dae\u0dbb \u0dc0\u0dbd \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba\u0dba\u0dd2</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of features <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span> is the constant used for calculating <span translate=no>_^_3_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dba\u0db1\u0dd4 \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0d9c\u0dab\u0db1 <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span> \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db1 \u0db1\u0dd2\u0dba\u0dad\u0dba <span translate=no>_^_3_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of features in transformer embeddings </li>\n<li><span translate=no>_^_1_^_</span> is the number features in the hidden layer</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc0\u0dbd \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0d9c\u0dab\u0db1 \u0dc0\u0dda </li>\n</ul><li><span translate=no>_^_1_^_</span> \u0dc3\u0dd0\u0d9f\u0dc0\u0dd4\u0dab\u0dd4 \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0dda \u0d85\u0d82\u0d9a \u0dbd\u0d9a\u0dca\u0dc2\u0dab \u0dc0\u0dda</li>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of features in transformer embeddings </li>\n<li><span translate=no>_^_1_^_</span> is the number of attention heads </li>\n<li><span translate=no>_^_2_^_</span> is the number of features per head </li>\n<li><span translate=no>_^_3_^_</span> indicates whether this is causal attention (masked)</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc0\u0dbd \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0d9c\u0dab\u0db1 \u0dc0\u0dda </li>\n<li><span translate=no>_^_1_^_</span> \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0db4\u0dca\u0dbb\u0db0\u0dcf\u0db1\u0dd3\u0db1\u0dca \u0dc3\u0d82\u0d9b\u0dca\u0dba\u0dcf\u0dc0 \u0dc0\u0dda </li>\n<li><span translate=no>_^_2_^_</span> \u0dba\u0db1\u0dd4 \u0dc4\u0dd2\u0dc3\u0d9a\u0da7 \u0d87\u0dad\u0dd2 \u0dbd\u0d9a\u0dca\u0dc2\u0dab \u0d9c\u0dab\u0db1 </li>\n<li><span translate=no>_^_3_^_</span> \u0db8\u0dd9\u0dba \u0dc4\u0dda\u0dad\u0dd4\u0d9a\u0dcf\u0dbb\u0d9a \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba (\u0db8\u0dd0\u0dc3\u0dca\u0dc3\u0dd9\u0da9\u0dca) \u0dba\u0db1\u0dca\u0db1 \u0db4\u0dd9\u0db1\u0dca\u0db1\u0dd4\u0db8\u0dca \u0d9a\u0dbb\u0dba\u0dd2</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of features in transformer embeddings </li>\n<li><span translate=no>_^_1_^_</span> is the number of attention heads </li>\n<li><span translate=no>_^_2_^_</span> is the number of features per head </li>\n<li><span translate=no>_^_3_^_</span> is the length of a chunk</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc0\u0dbd \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0d9c\u0dab\u0db1 \u0dc0\u0dda </li>\n<li><span translate=no>_^_1_^_</span> \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0db4\u0dca\u0dbb\u0db0\u0dcf\u0db1\u0dd3\u0db1\u0dca \u0dc3\u0d82\u0d9b\u0dca\u0dba\u0dcf\u0dc0 \u0dc0\u0dda </li>\n<li><span translate=no>_^_2_^_</span> \u0dba\u0db1\u0dd4 \u0dc4\u0dd2\u0dc3\u0d9a\u0da7 \u0d87\u0dad\u0dd2 \u0dbd\u0d9a\u0dca\u0dc2\u0dab \u0d9c\u0dab\u0db1 </li>\n<li><span translate=no>_^_3_^_</span> \u0dba\u0db1\u0dd4 \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2\u0dba\u0d9a \u0daf\u0dd2\u0d9c</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of features in transformer embeddings </li>\n<li><span translate=no>_^_1_^_</span> is the number of attention heads </li>\n<li><span translate=no>_^_2_^_</span> is the number of features per head</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc0\u0dbd \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0d9c\u0dab\u0db1 \u0dc0\u0dda </li>\n<li><span translate=no>_^_1_^_</span> \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0db4\u0dca\u0dbb\u0db0\u0dcf\u0db1\u0dd3\u0db1\u0dca \u0dc3\u0d82\u0d9b\u0dca\u0dba\u0dcf\u0dc0 \u0dc0\u0dda </li>\n<li><span translate=no>_^_2_^_</span> \u0dba\u0db1\u0dd4 \u0dc4\u0dd2\u0dc3\u0d9a\u0da7 \u0d87\u0dad\u0dd2 \u0dbd\u0d9a\u0dca\u0dc2\u0dab \u0d9c\u0dab\u0db1</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of tokens in the vocabulary </li>\n<li><span translate=no>_^_1_^_</span> is the number of features in embeddings </li>\n<li><span translate=no>_^_2_^_</span> is the number of layers in the decoder <span translate=no>_^_3_^_</span> </li>\n<li><span translate=no>_^_4_^_</span> are the layers with cross attention <span translate=no>_^_5_^_</span> </li>\n<li><span translate=no>_^_6_^_</span> is the length of a chunk </li>\n<li><span translate=no>_^_7_^_</span> is the number of heads in attention layers </li>\n<li><span translate=no>_^_8_^_</span> is the size of attention heads </li>\n<li><span translate=no>_^_9_^_</span> is the size of the feed-forward networks hidden layers </li>\n<li><span translate=no>_^_10_^_</span> is the nearest neighbor encoder</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dba\u0db1\u0dd4 \u0dc0\u0da0\u0db1 \u0db8\u0dcf\u0dbd\u0dcf\u0dc0\u0dda \u0da7\u0ddd\u0d9a\u0db1 \u0d9c\u0dab\u0db1 </li>\n<li><span translate=no>_^_1_^_</span> \u0dba\u0db1\u0dd4 \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc0\u0dbd \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0d9c\u0dab\u0db1 </li>\n<li><span translate=no>_^_2_^_</span> \u0dba\u0db1\u0dd4 \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a\u0dba\u0dda \u0dc3\u0dca\u0dae\u0dbb \u0d9c\u0dab\u0db1 <span translate=no>_^_3_^_</span> </li>\n<li><span translate=no>_^_4_^_</span> \u0dc4\u0dbb\u0dc3\u0dca \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0d87\u0dad\u0dd2 \u0dc3\u0dca\u0dae\u0dbb \u0dc0\u0dda <span translate=no>_^_5_^_</span> </li>\n<li><span translate=no>_^_6_^_</span> \u0dba\u0db1\u0dd4 \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2\u0dba\u0d9a \u0daf\u0dd2\u0d9c </li>\n<li><span translate=no>_^_7_^_</span> \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0dc3\u0dca\u0dae\u0dbb \u0dc0\u0dbd \u0dc4\u0dd2\u0dc3\u0dca \u0d9c\u0dab\u0db1 </li>\n<li><span translate=no>_^_8_^_</span> \u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0db4\u0dca\u0dbb\u0db0\u0dcf\u0db1\u0dd3\u0db1\u0dca \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba </li>\n<li><span translate=no>_^_9_^_</span> \u0dba\u0db1\u0dd4 \u0db4\u0ddd\u0dc2\u0d9a \u0d89\u0daf\u0dd2\u0dbb\u0dd2 \u0da2\u0dcf\u0dbd\u0dba\u0dda \u0dc3\u0dd0\u0d9f\u0dc0\u0dd4\u0dab\u0dd4 \u0dc3\u0dca\u0dae\u0dbb \u0dc0\u0dbd \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba\u0dba\u0dd2 </li>\n<li><span translate=no>_^_10_^_</span> \u0dc5\u0d9f\u0db8 \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0dcf \u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dba\u0dba\u0dd2</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the transformer embeddings of shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dba\u0db1\u0dd4 \u0dc4\u0dd0\u0da9\u0dba\u0dda \u0da7\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dc3\u0dca\u0dc6\u0ddd\u0db8\u0dbb\u0dca \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dc0\u0dda <span translate=no>_^_1_^_</span></li></ul>\n",
 "RETRO model": "\u0dbb\u0dd9\u0da7\u0dca\u0dbb\u0ddd \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba",
 "RETRO model with encoder for neighbors and autoregressive decoder": "\u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0db1\u0dca \u0dc3\u0db3\u0dc4\u0dcf \u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dba \u0dc3\u0dc4 \u0dc3\u0dca\u0dc0\u0dba\u0d82\u0d9a\u0dca\u0dbb\u0dd3\u0dba \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0d9c\u0dcf\u0db8\u0dd3 \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a\u0dba \u0dc3\u0dc4\u0dd2\u0dad \u0dbb\u0dd9\u0da7\u0dca\u0dbb\u0ddd \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba"
}