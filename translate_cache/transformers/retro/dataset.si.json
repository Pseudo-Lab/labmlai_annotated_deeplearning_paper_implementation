{
 "<h1>RETRO training dataset</h1>\n<p>We pre-retrieve nearest neighbors from the <a href=\"database.html\">key-value database</a>  and create the dataset to train the <a href=\"index.html\">RETRO</a>  <a href=\"model.html\">model</a>.</p>\n": "<h1>\u0dbb\u0dd9\u0da7\u0dca\u0dbb\u0ddd\u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4 \u0daf\u0dad\u0dca\u0dad \u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba</h1>\n<p>\u0d85\u0db4\u0dd2\u0dc5\u0d9f\u0db8 \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0db1\u0dca \u0db4\u0dca\u0dbb\u0db0\u0dcf\u0db1 <a href=\"database.html\">\u0dc0\u0da7\u0dd2\u0db1\u0dcf\u0d9a\u0db8\u0dca \u0daf\u0dad\u0dca\u0dad \u0d9c\u0db6\u0da9\u0dcf\u0dc0\u0dd9\u0db1\u0dca</a> \u0db4\u0dd6\u0dbb\u0dca\u0dc0 \u0dbd\u0db6\u0dcf \u0d9c\u0dd9\u0db1 <a href=\"index.html\">RETRO</a> <a href=\"model.html\">\u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba</a> \u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0daf\u0dad\u0dca\u0dad \u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba \u0db1\u0dd2\u0dbb\u0dca\u0db8\u0dcf\u0dab\u0dba \u0d9a\u0dbb\u0db8\u0dd4. </p>\n",
 "<h2>Build the dataset</h2>\n<ul><li><span translate=no>_^_0_^_</span> is the chunk length </li>\n<li><span translate=no>_^_1_^_</span> is the number of chunks per training sample </li>\n<li><span translate=no>_^_2_^_</span> is the maximum number of characters to skip between two samples.  We skip a few characters between samples to make sure the samples  aren&#x27;t aligned perfectly with the chunks in the <a href=\"database.html\">database</a></li></ul>\n": "<h2>\u0daf\u0dad\u0dca\u0dad\u0dc3\u0db8\u0dd4\u0daf\u0dcf\u0dba \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1</h2>\n<ul><li><span translate=no>_^_0_^_</span> \u0d9a\u0dd4\u0da7\u0dd2\u0dba\u0dda \u0daf\u0dd2\u0d9c \u0dc0\u0dda </li>\n<li><span translate=no>_^_1_^_</span> \u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4 \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba\u0d9a\u0da7 \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 \u0d9c\u0dab\u0db1 </li>\n<li><span translate=no>_^_2_^_</span> \u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd \u0daf\u0dd9\u0d9a\u0d9a\u0dca \u0d85\u0dad\u0dbb \u0db8\u0d9f \u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0da7 \u0d8b\u0db4\u0dbb\u0dd2\u0db8 \u0d85\u0d9a\u0dca\u0dc2\u0dbb \u0d9c\u0dab\u0db1 \u0dc0\u0dda. \u0d85\u0db4\u0dd2 \u0db8\u0d9f \u0d9a\u0dd2\u0dc4\u0dd2\u0db4\u0dba\u0d9a\u0dca \u0da0\u0dbb\u0dd2\u0dad \u0d85\u0dad\u0dbb \u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd \u0db6\u0dc0\u0da7 \u0dc0\u0d9c \u0db6\u0dbd\u0dcf \u0d9c\u0db1\u0dca\u0db1 \u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd \u0db4\u0dd9\u0dbd\u0d9c\u0dd0\u0dc3\u0dd3 \u0db1\u0ddc\u0db8\u0dd0\u0dad \u0dc3\u0db8\u0d9c \u0dc4\u0ddc\u0db3\u0dd2\u0db1\u0dca \u0d9a\u0dd0\u0db6\u0dbd\u0dd2 \u0daf\u0dd3 <a href=\"database.html\">\u0daf\u0dad\u0dca\u0dad \u0dc3\u0db8\u0dd4\u0daf\u0dcf\u0dba</a></li></ul>\n",
 "<h2>Dataset</h2>\n<p>This is the PyTorch dataset that loads the dataset created by <span translate=no>_^_0_^_</span>.</p>\n": "<h2>\u0daf\u0dad\u0dca\u0dad\u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba</h2>\n<p>\u0dc0\u0dd2\u0dc3\u0dd2\u0db1\u0dca\u0db1\u0dd2\u0dbb\u0dca\u0db8\u0dcf\u0dab\u0dba \u0d9a\u0dbb\u0db1 \u0dbd\u0daf \u0daf\u0dad\u0dca\u0dad \u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba \u0db4\u0da7\u0dc0\u0db1 PyTorch \u0daf\u0dad\u0dca\u0dad \u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba \u0db8\u0dd9\u0dba\u0dba\u0dd2 <span translate=no>_^_0_^_</span>. </p>\n",
 "<p> </p>\n": "<p> </p>\n",
 "<p> Get a sample</p>\n": "<p> \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba\u0d9a\u0dca\u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1</p>\n",
 "<p> Number of samples</p>\n": "<p> \u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd\u0d9c\u0dab\u0db1</p>\n",
 "<p>Add to list of samples </p>\n": "<p>\u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd\u0dbd\u0dd0\u0dba\u0dd2\u0dc3\u0dca\u0dad\u0dd4\u0dc0\u0da7 \u0d91\u0d9a\u0dad\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Break it into chunks </p>\n": "<p>\u0d91\u0dba\u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 \u0dc0\u0dbd\u0da7 \u0d9a\u0da9\u0db1\u0dca\u0db1 </p>\n",
 "<p>Collect the offset </p>\n": "<p>\u0d95\u0dc6\u0dca\u0dc3\u0dd9\u0da7\u0dca\u0d91\u0d9a\u0dad\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Cursor for the text </p>\n": "<p>\u0db4\u0dd9\u0dc5\u0dc3\u0db3\u0dc4\u0dcf \u0d9a\u0dbb\u0dca\u0dc3\u0dbb\u0dba </p>\n",
 "<p>For samples </p>\n": "<p>\u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd\u0dc3\u0db3\u0dc4\u0dcf </p>\n",
 "<p>Get neighbor texts. The neighbor length is twice the <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0dcf\u0d9c\u0dda\u0db4\u0dd9\u0dc5 \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1. \u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0dcf\u0d9c\u0dda \u0daf\u0dd2\u0d9c \u0db8\u0dd9\u0db1\u0dca \u0daf\u0dd9\u0d9c\u0dd4\u0dab\u0dba\u0d9a\u0dca \u0dc0\u0dda <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Get the sample </p>\n": "<p>\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba\u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get the sample including an extra character (for prediction) </p>\n": "<p>\u0d85\u0db8\u0dad\u0dbb\u0da0\u0dbb\u0dd2\u0dad\u0dba\u0d9a\u0dca \u0d87\u0dad\u0dd4\u0dc5\u0dd4\u0dc0 \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 (\u0d85\u0db1\u0dcf\u0dc0\u0dd0\u0d9a\u0dd2\u0dba \u0dc3\u0db3\u0dc4\u0dcf) </p>\n",
 "<p>Increment the cursor </p>\n": "<p>\u0d9a\u0dbb\u0dca\u0dc3\u0dbb\u0dba\u0dc0\u0dd0\u0da9\u0dd2 \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Iterate through sample offsets </p>\n": "<p>\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0d95\u0dc6\u0dca\u0dc3\u0dd9\u0da7\u0dca \u0dc4\u0dbb\u0dc4\u0dcf \u0db1\u0dd0\u0dc0\u0dad \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Load the index for retrieving neighbors </p>\n": "<p>\u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0db1\u0dca\u0dbd\u0db6\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0daf\u0dbb\u0dca\u0dc1\u0d9a\u0dba \u0db4\u0da7\u0dc0\u0db1\u0dca\u0db1 </p>\n",
 "<p>Load the samples </p>\n": "<p>\u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd\u0db4\u0dd6\u0dbb\u0dab\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Load the text file </p>\n": "<p>\u0db4\u0dd9\u0dc5\u0d9c\u0ddc\u0db1\u0dd4\u0dc0 \u0db4\u0dd6\u0dbb\u0dab\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Retrieve nearest neighbors </p>\n": "<p>\u0dc5\u0d9f\u0db8\u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0db1\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Save the samples in JSON. We don&#x27;t need to use complex dataset storage mechanisms or pre-tokenize since our dataset is small. </p>\n": "<p>JSON\u0dc4\u0dd2 \u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd \u0dc3\u0dd4\u0dbb\u0d9a\u0dd2\u0db1\u0dca\u0db1. \u0d85\u0db4\u0d9c\u0dda \u0daf\u0dad\u0dca\u0dad \u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba \u0d9a\u0dd4\u0da9\u0dcf \u0db6\u0dd0\u0dc0\u0dd2\u0db1\u0dca \u0d85\u0db4\u0da7 \u0dc3\u0d82\u0d9a\u0dd3\u0dbb\u0dca\u0dab \u0daf\u0dad\u0dca\u0dad \u0d9a\u0da7\u0dca\u0da7\u0dbd \u0d9c\u0db6\u0da9\u0dcf \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0dba\u0dcf\u0db1\u0dca\u0dad\u0dca\u0dbb\u0dab \u0dc4\u0ddd \u0db4\u0dd6\u0dbb\u0dca\u0dc0 \u0da7\u0ddd\u0d9a\u0dd3\u0d9a\u0dbb\u0dab\u0dba \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0d85\u0dc0\u0dc1\u0dca\u0dba \u0db1\u0ddc\u0dc0\u0dda. </p>\n",
 "<p>Skip a few characters to make sure it&#x27;s not aligned with the neighbors </p>\n": "<p>\u0d85\u0dc3\u0dbd\u0dca\u0dc0\u0dd0\u0dc3\u0dd2\u0dba\u0db1\u0dca\u0dc3\u0db8\u0d9f \u0db4\u0dd9\u0dbd\u0d9c\u0dd0\u0dc3\u0dd3 \u0db1\u0ddc\u0db8\u0dd0\u0dad\u0dd2 \u0db6\u0dc0\u0da7 \u0dc0\u0d9c \u0db6\u0dbd\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0da0\u0dbb\u0dd2\u0dad \u0d9a\u0dd2\u0dc4\u0dd2\u0db4\u0dba\u0d9a\u0dca \u0db8\u0d9f \u0dc4\u0dbb\u0dd2\u0db1\u0dca\u0db1 </p>\n",
 "<p>Stop if we&#x27;ve reached the end of the text </p>\n": "<p>\u0d85\u0db4\u0dd2\u0db4\u0dd9\u0dc5\u0dd9\u0dc4\u0dd2 \u0d85\u0dc0\u0dc3\u0dcf\u0db1\u0dba\u0da7 \u0db4\u0dd0\u0db8\u0dd2\u0dab \u0d87\u0dad\u0dca\u0db1\u0db8\u0dca \u0db1\u0dc0\u0dad\u0dca\u0dc0\u0db1\u0dca\u0db1 </p>\n",
 "<p>The chunk offsets </p>\n": "<p>\u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2\u0dba\u0d95\u0dc6\u0dca\u0dc3\u0dd9\u0da7\u0dca </p>\n",
 "<p>The input </p>\n": "<p>\u0d86\u0daf\u0dcf\u0db1\u0dba </p>\n",
 "<p>The input sample offsets </p>\n": "<p>\u0d86\u0daf\u0dcf\u0db1\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2 \u0d95\u0dc6\u0dca\u0dc3\u0dd9\u0da7\u0dca </p>\n",
 "<p>Tokenize </p>\n": "<p>\u0da7\u0ddd\u0d9a\u0db1\u0dba\u0dd2\u0dc3\u0dca\u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Training portion of it </p>\n": "<p>\u0d91\u0dc4\u0dd2\u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4 \u0d9a\u0ddc\u0da7\u0dc3 </p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the path of the saved JSON file </li>\n<li><span translate=no>_^_1_^_</span> is the <span translate=no>_^_2_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dc3\u0dd4\u0dbb\u0d9a\u0dd2\u0db1 \u0dbd\u0daf JSON \u0d9c\u0ddc\u0db1\u0dd4\u0dc0\u0dda \u0db8\u0dcf\u0dbb\u0dca\u0d9c\u0dba\u0dba\u0dd2 </li>\n</ul><li><span translate=no>_^_1_^_</span> \u0dc0\u0dda <span translate=no>_^_2_^_</span></li>\n",
 "Create a dataset for RETRO model training": "RETRO \u0d86\u0daf\u0dbb\u0dca\u0dc1 \u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4\u0dc0 \u0dc3\u0db3\u0dc4\u0dcf \u0daf\u0dad\u0dca\u0dad \u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba\u0d9a\u0dca \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1",
 "Training dataset for RETRO": "RETRO \u0dc3\u0db3\u0dc4\u0dcf \u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4 \u0daf\u0dad\u0dca\u0dad \u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba"
}