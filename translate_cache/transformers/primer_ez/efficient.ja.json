{
 "<h2>Multi-DConv-Head Attention (MDHA)</h2>\n<p>We extend our original implementation of <a href=\"../mha.html#MHA\">Multi-Head Attention</a> and add the spatial depth-wise convolution to query, key and value projections.</p>\n": "<h2>\u30de\u30eb\u30c1\u30b3\u30f3\u30d0\u30fc\u30c1\u30f3\u30b0\u30d8\u30c3\u30c9\u30a2\u30c6\u30f3\u30b7\u30e7\u30f3 (MDHA)</h2>\n<p><a href=\"../mha.html#MHA\">Multi-Head</a> Attention\u306e\u5f53\u521d\u306e\u5b9f\u88c5\u3092\u62e1\u5f35\u3057\u3001\u30af\u30a8\u30ea\u3001\u30ad\u30fc\u3001\u30d0\u30ea\u30e5\u30fc\u30d7\u30ed\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306b\u7a7a\u9593\u6df1\u5ea6\u65b9\u5411\u306e\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002</p>\n",
 "<h2>Spatial Depth Wise Convolution</h2>\n<p>This is actually slower</p>\n": "<h2>\u7a7a\u9593\u6df1\u5ea6\u5358\u4f4d\u306e\u7573\u307f\u8fbc\u307f</h2>\n<p>\u3053\u308c\u306f\u5b9f\u969b\u306b\u306f\u9045\u3044\u3067\u3059</p>\n",
 "<p> <span translate=no>_^_0_^_</span> has shape <span translate=no>_^_1_^_</span></p>\n": "<p><span translate=no>_^_0_^_</span>\u5f62\u304c\u3042\u308b <span translate=no>_^_1_^_</span></p>\n",
 "<p><a href=\"../mha.html#MHA\">Multi-Head Attention</a> will create query, key and value projection modules <span translate=no>_^_0_^_</span>, <span translate=no>_^_1_^_</span>, and <span translate=no>_^_2_^_</span>.</p>\n<p>We combine a spatial depth-wise convolution layer to each of them and replace <span translate=no>_^_3_^_</span>, <span translate=no>_^_4_^_</span>, and <span translate=no>_^_5_^_</span>. </p>\n": "<p><a href=\"../mha.html#MHA\">Multi-Head Attention</a> \u306f\u3001\u30af\u30a8\u30ea\u3001\u30ad\u30fc\u3001\u30d0\u30ea\u30e5\u30fc\u30d7\u30ed\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u30e2\u30b8\u30e5\u30fc\u30eb<span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>\u3001\u304a\u3088\u3073\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002<span translate=no>_^_2_^_</span></p>\n<p>\u305d\u308c\u305e\u308c\u306b\u7a7a\u9593\u6df1\u5ea6\u65b9\u5411\u306e\u7573\u307f\u8fbc\u307f\u5c64\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u3001\u3001\u3092\u7f6e\u304d\u63db\u3048\u307e\u3059<span translate=no>_^_3_^_</span>\u3002<span translate=no>_^_4_^_</span> <span translate=no>_^_5_^_</span></p>\n",
 "<p>We use PyTorch&#x27;s <span translate=no>_^_0_^_</span> module. We set the number of groups to be equal to the number of channels so that it does a separate convolution (with different kernels) for each channel. We add padding to both sides and later crop the right most <span translate=no>_^_1_^_</span> results </p>\n": "<p><span translate=no>_^_0_^_</span>PyTorch\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u30b0\u30eb\u30fc\u30d7\u306e\u6570\u3092\u30c1\u30e3\u30cd\u30eb\u6570\u3068\u540c\u3058\u306b\u306a\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3001\u30c1\u30e3\u30cd\u30eb\u3054\u3068\u306b (\u7570\u306a\u308b\u30ab\u30fc\u30cd\u30eb\u3067) \u500b\u5225\u306e\u7573\u307f\u8fbc\u307f\u3092\u884c\u3044\u307e\u3059\u3002\u4e21\u5074\u306b\u30d1\u30c7\u30a3\u30f3\u30b0\u3092\u8ffd\u52a0\u3057\u3001<span translate=no>_^_1_^_</span>\u5f8c\u3067\u4e00\u756a\u9069\u5207\u306a\u7d50\u679c\u306b\u306a\u308b\u3088\u3046\u306b\u30c8\u30ea\u30df\u30f3\u30b0\u3057\u307e\u3059</p>\u3002\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of channels in each head</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u306f\u5404\u30d8\u30c3\u30c9\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570</li></ul>\n",
 "efficient.py": "efficient.py"
}