{
 "<h1>Autoencoder for <a href=\"../index.html\">Stable Diffusion</a></h1>\n<p>This implements the auto-encoder model used to map between image space and latent space.</p>\n<p>We have kept to the model definition and naming unchanged from <a href=\"https://github.com/CompVis/stable-diffusion\">CompVis/stable-diffusion</a> so that we can load the checkpoints directly.</p>\n": "<h1><a href=\"../index.html\">\u0dc3\u0dca\u0dae\u0dcf\u0dc0\u0dbb \u0dc0\u0dd2\u0dc3\u0dbb\u0dab\u0dba</a> \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0dca\u0dc0\u0dba\u0d82\u0d9a\u0dca\u0dbb\u0dd3\u0dba \u0d86\u0d9a\u0dda\u0dad\u0d9a\u0dba</h1>\n<p>\u0dbb\u0dd6\u0db4 \u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba \u0dc3\u0dc4 \u0d9c\u0dd4\u0db4\u0dca\u0dad \u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba \u0d85\u0dad\u0dbb \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8\u0dca \u0d9c\u0dad \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db1 \u0dc3\u0dca\u0dc0\u0dba\u0d82\u0d9a\u0dca\u0dbb\u0dd3\u0dba \u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dca \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba \u0db8\u0dd9\u0dba \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dbb\u0dba\u0dd2.</p>\n<p>\u0d85\u0db4\u0dd2 \u0d86\u0daf\u0dbb\u0dca\u0dc1 \u0d85\u0dbb\u0dca\u0dae \u0daf\u0dd0\u0d9a\u0dca\u0dc0\u0dd3\u0db8 \u0dad\u0db6\u0dcf \u0d87\u0dad\u0dd2 \u0d85\u0dad\u0dbb <a href=\"https://github.com/CompVis/stable-diffusion\">\u0d9a\u0ddc\u0db8\u0dca\u0dc0\u0dd2\u0dc3\u0dca/\u0dc3\u0dca\u0dae\u0dcf\u0dc0\u0dbb \u0dc0\u0dd2\u0dc3\u0dbb\u0dab</a> \u0dc3\u0dd2\u0da7 \u0db1\u0ddc\u0dc0\u0dd9\u0db1\u0dc3\u0dca\u0dc0 \u0db1\u0db8\u0dca \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0d85\u0db4\u0da7 \u0db8\u0dd4\u0dbb\u0db4\u0ddc\u0dbd\u0dc0\u0dbd\u0dca \u0d9a\u0dd9\u0dbd\u0dd2\u0db1\u0dca\u0db8 \u0db4\u0dd0\u0da7\u0dc0\u0dd2\u0dba \u0dc4\u0dd0\u0d9a\u0dd2 \u0dc0\u0db1 \u0db4\u0dbb\u0dd2\u0daf\u0dd2.</p>\n",
 "<h2>Attention block</h2>\n": "<h2>\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc0\u0dcf\u0dbb\u0dab</h2>\n",
 "<h2>Autoencoder</h2>\n<p>This consists of the encoder and decoder modules.</p>\n": "<h2>\u0d94\u0da7\u0ddd\u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dba</h2>\n<p>\u0db8\u0dd9\u0dba \u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dba \u0dc3\u0dc4 \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a \u0db8\u0ddc\u0da9\u0dd2\u0dba\u0dd4\u0dbd \u0dc0\u0dbd\u0dd2\u0db1\u0dca \u0dc3\u0db8\u0db1\u0dca\u0dc0\u0dd2\u0dad \u0dc0\u0dda.</p>\n",
 "<h2>Decoder module</h2>\n": "<h2>\u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a \u0db8\u0ddc\u0da9\u0dd2\u0dba\u0dd4\u0dbd\u0dba</h2>\n",
 "<h2>Down-sampling layer</h2>\n": "<h2>\u0db4\u0dc4\u0dc5-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2 \u0dc3\u0dca\u0dae\u0dbb\u0dba</h2>\n",
 "<h2>Encoder module</h2>\n": "<h2>\u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dca \u0db8\u0ddc\u0da9\u0dd2\u0dba\u0dd4\u0dbd\u0dba</h2>\n",
 "<h2>Gaussian Distribution</h2>\n": "<h2>\u0d9c\u0dc0\u0dd4\u0dc3\u0dd2\u0dba\u0dcf\u0db1\u0dd4 \u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0dca</h2>\n",
 "<h2>ResNet Block</h2>\n": "<h2>\u0dbb\u0dd9\u0dc3\u0dca\u0db1\u0dd9\u0da7\u0dca \u0db6\u0dca\u0dbd\u0ddc\u0d9a\u0dca</h2>\n",
 "<h2>Up-sampling layer</h2>\n": "<h2>\u0daf\u0d9a\u0dca\u0dc0\u0dcf-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca \u0dc3\u0dca\u0dae\u0dbb\u0dba</h2>\n",
 "<h3>Decode images from latent representation</h3>\n<ul><li><span translate=no>_^_0_^_</span>  is the latent representation with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<h3>\u0d9c\u0dd4\u0db4\u0dca\u0dad \u0db1\u0dd2\u0dbb\u0dd6\u0db4\u0dab\u0dba\u0dd9\u0db1\u0dca \u0dbb\u0dd6\u0db4 \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1</h3>\n<ul><li><span translate=no>_^_0_^_</span>\u0dc4\u0dd0\u0da9\u0dba \u0dc3\u0dc4\u0dd2\u0dad \u0d9c\u0dd4\u0db4\u0dca\u0dad \u0db1\u0dd2\u0dbb\u0dd6\u0db4\u0dab\u0dba\u0dba\u0dd2<span translate=no>_^_1_^_</span></li></ul>\n",
 "<h3>Encode images to latent representation</h3>\n<ul><li><span translate=no>_^_0_^_</span>  is the image tensor with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<h3>\u0d9c\u0dd4\u0db4\u0dca\u0dad \u0db1\u0dd2\u0dbb\u0dd6\u0db4\u0dab\u0dba\u0da7 \u0dbb\u0dd6\u0db4 \u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1</h3>\n<ul><li><span translate=no>_^_0_^_</span>\u0dc4\u0dd0\u0da9\u0dba \u0dc3\u0dc4\u0dd2\u0dad \u0dbb\u0dd6\u0db4 \u0da7\u0dd9\u0db1\u0dca\u0dc3\u0dbb\u0dba\u0dba\u0dd2<span translate=no>_^_1_^_</span></li></ul>\n",
 "<h3>Group normalization</h3>\n<p>This is a helper function, with fixed number of groups and <span translate=no>_^_0_^_</span>.</p>\n": "<h3>\u0d9a\u0dab\u0dca\u0da9\u0dcf\u0dba\u0db8\u0dca \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba</h3>\n<p>\u0db8\u0dd9\u0dba \u0d8b\u0db4\u0d9a\u0dcf\u0dbb\u0d9a \u0dc1\u0dca\u0dbb\u0dd2\u0dad\u0dba\u0d9a\u0dca \u0dc0\u0db1 \u0d85\u0dad\u0dbb \u0dc3\u0dca\u0dae\u0dcf\u0dc0\u0dbb \u0d9a\u0dab\u0dca\u0da9\u0dcf\u0dba\u0db8\u0dca \u0d9c\u0dab\u0db1 \u0dc3\u0dc4<span translate=no>_^_0_^_</span>.</p>\n",
 "<h3>Swish activation</h3>\n<p><span translate=no>_^_0_^_</span></p>\n": "<h3>\u0dc3\u0dca\u0dc0\u0dd2\u0dc2\u0dca \u0dc3\u0d9a\u0dca\u0dbb\u0dd2\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8</h3>\n<p><span translate=no>_^_0_^_</span></p>\n",
 "<p> </p>\n": "<p></p>\n",
 "<p><span translate=no>_^_0_^_</span> convolution mapping </p>\n": "<p><span translate=no>_^_0_^_</span>\u0d9a\u0dd0\u0da7\u0dd2 \u0d9c\u0dd0\u0dc3\u0dd3\u0db8\u0dda \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8\u0dca\u0d9a\u0dbb\u0dab\u0dba</p>\n",
 "<p><span translate=no>_^_0_^_</span> convolution with stride length of <span translate=no>_^_1_^_</span> to down-sample by a factor of <span translate=no>_^_2_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span>\u0d9a \u0dc3\u0dcf\u0db0\u0d9a\u0dba\u0d9a\u0dca \u0dc0\u0dd2\u0dc3\u0dd2\u0db1\u0dca \u0db4\u0dc4\u0dc5-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2<span translate=no>_^_1_^_</span> \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 stride \u0daf\u0dd2\u0d9c \u0dc3\u0db8\u0d9c convolution<span translate=no>_^_2_^_</span></p>\n",
 "<p><span translate=no>_^_0_^_</span> to <span translate=no>_^_1_^_</span> mapping layer for residual connection </p>\n": "<p><span translate=no>_^_0_^_</span>\u0d85\u0dc0\u0dc1\u0dda\u0dc2 \u0dc3\u0db8\u0dca\u0db6\u0db1\u0dca\u0db0\u0dad\u0dcf\u0dc0\u0dba \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0dca\u0dad\u0dbb\u0dba<span translate=no>_^_1_^_</span> \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8\u0dca\u0d9c\u0dad \u0d9a\u0dd2\u0dbb\u0dd3\u0db8</p>\n",
 "<p>Add ResNet Blocks </p>\n": "<p>\u0dbb\u0dd9\u0dc3\u0dca\u0db1\u0dd9\u0da7\u0dca \u0db6\u0dca\u0dbd\u0ddc\u0d9a\u0dca \u0d91\u0d9a\u0dad\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1</p>\n",
 "<p>Add padding </p>\n": "<p>\u0db4\u0dd1\u0da9\u0dd2\u0db1\u0dca \u0d91\u0d9a\u0dad\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1</p>\n",
 "<p>Add residual connection </p>\n": "<p>\u0d85\u0dc0\u0dc1\u0dda\u0dc2 \u0dc3\u0db8\u0dca\u0db6\u0db1\u0dca\u0db0\u0dad\u0dcf\u0dc0\u0dba \u0d91\u0d9a\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1</p>\n",
 "<p>Apply convolution </p>\n": "<p>\u0d9a\u0dd0\u0da7\u0dd2 \u0d9c\u0dd0\u0dc3\u0dd2\u0db8 \u0dba\u0ddc\u0daf\u0db1\u0dca\u0db1</p>\n",
 "<p>Attention scaling factor </p>\n": "<p>\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0db4\u0dbb\u0dd2\u0db8\u0dcf\u0dab \u0dc3\u0dcf\u0db0\u0d9a\u0dba</p>\n",
 "<p>Calculate standard deviation </p>\n": "<p>\u0dc3\u0db8\u0dca\u0db8\u0dad \u0d85\u0db4\u0d9c\u0db8\u0db1\u0dba \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1</p>\n",
 "<p>Clamp the log of variances </p>\n": "<p>\u0dc0\u0dd2\u0da0\u0dbd\u0dca\u0dba\u0dba\u0db1\u0dca\u0d9c\u0dda \u0dbd\u0ddc\u0d9c\u0dca \u0daf\u0dd0\u0db8\u0dd3\u0db8</p>\n",
 "<p>Compute <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1<span translate=no>_^_0_^_</span></p>\n",
 "<p>Convolution to map from embedding space to quantized embedding space moments (mean and log variance) </p>\n": "<p>\u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dda \u0dc3\u0dd2\u0da7 \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dda \u0d85\u0dc0\u0d9a\u0dcf\u0dc1 \u0d85\u0dc0\u0dc3\u0dca\u0dae\u0dcf \u0daf\u0d9a\u0dca\u0dc0\u0dcf \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8\u0dca \u0d9c\u0dad \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 (\u0db8\u0db0\u0dca\u0dba\u0db1\u0dca\u0dba \u0dc3\u0dc4 \u0dbd\u0ddc\u0d9c\u0dca \u0dc0\u0dd2\u0da0\u0dbd\u0dad\u0dcf\u0dc0)</p>\n",
 "<p>Convolution to map from quantized embedding space back to embedding space </p>\n": "<p>\u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dda \u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba\u0dda \u0dc3\u0dd2\u0da7 \u0db1\u0dd0\u0dc0\u0dad \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8 \u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba \u0daf\u0d9a\u0dca\u0dc0\u0dcf \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8\u0da7 \u0dc3\u0d82\u0d9a\u0ddd\u0da0\u0db1\u0dba</p>\n",
 "<p>Create top-level blocks </p>\n": "<p>\u0d89\u0dc4\u0dc5 \u0db8\u0da7\u0dca\u0da7\u0db8\u0dda \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1</p>\n",
 "<p>Decode the image of shape <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc4\u0dd0\u0da9\u0dba\u0dda \u0dbb\u0dd6\u0db4\u0dba \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1<span translate=no>_^_0_^_</span></p>\n",
 "<p>Down-sampling </p>\n": "<p>\u0db4\u0dc4\u0dc5-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca</p>\n",
 "<p>Down-sampling at the end of each top level block except the last </p>\n": "<p>\u0d85\u0db1\u0dca\u0dad\u0dd2\u0db8 \u0dc4\u0dd0\u0dbb \u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0d89\u0dc4\u0dc5 \u0db8\u0da7\u0dca\u0da7\u0db8\u0dda \u0d9a\u0ddc\u0da7\u0dc3 \u0d85\u0dc0\u0dc3\u0dcf\u0db1\u0dba\u0dda \u0db4\u0dc4\u0dc5-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8</p>\n",
 "<p>Each top level block consists of multiple ResNet Blocks and down-sampling </p>\n": "<p>\u0dc3\u0dd1\u0db8 \u0d89\u0dc4\u0dc5 \u0db8\u0da7\u0dca\u0da7\u0db8\u0dda \u0db6\u0dca\u0dbd\u0ddc\u0d9a\u0dca \u0d91\u0d9a\u0d9a\u0dca\u0db8 \u0db6\u0dc4\u0dd4 \u0dbb\u0dd9\u0dc3\u0dca\u0db1\u0dd9\u0da7\u0dca \u0db6\u0dca\u0dbd\u0ddc\u0d9a\u0dca \u0dc3\u0dc4 \u0db4\u0dc4\u0dc5-\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca \u0dc0\u0dbd\u0dd2\u0db1\u0dca \u0dc3\u0db8\u0db1\u0dca\u0dc0\u0dd2\u0dad \u0dc0\u0dda</p>\n",
 "<p>Each top level block consists of multiple ResNet Blocks and up-sampling </p>\n": "<p>\u0dc3\u0dd1\u0db8 \u0d89\u0dc4\u0dc5 \u0db8\u0da7\u0dca\u0da7\u0db8\u0dda \u0db6\u0dca\u0dbd\u0ddc\u0d9a\u0dca \u0d91\u0d9a\u0d9a\u0dca\u0db8 \u0db6\u0dc4\u0dd4 \u0dbb\u0dd9\u0dc3\u0dca\u0db1\u0dd9\u0da7\u0dca \u0db6\u0dca\u0dbd\u0ddc\u0d9a\u0dca \u0dc3\u0dc4 \u0d89\u0dc4\u0dc5 \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca \u0dc0\u0dbd\u0dd2\u0db1\u0dca \u0dc3\u0db8\u0db1\u0dca\u0dc0\u0dd2\u0dad \u0dc0\u0dda</p>\n",
 "<p>Final <span translate=no>_^_0_^_</span> convolution layer </p>\n": "<p>\u0d85\u0dc0\u0dc3\u0dcf\u0db1<span translate=no>_^_0_^_</span> \u0d9a\u0dd0\u0da7\u0dd2 \u0d9c\u0dd0\u0dc3\u0dd4\u0dab\u0dd4 \u0dc3\u0dca\u0dae\u0dbb\u0dba</p>\n",
 "<p>Final ResNet blocks with attention </p>\n": "<p>\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dba\u0ddc\u0db8\u0dd4 \u0d9a\u0dbb\u0db1 \u0d85\u0dc0\u0dc3\u0dcf\u0db1 \u0dbb\u0dd9\u0dc3\u0dca\u0db1\u0dd9\u0da7\u0dca \u0db6\u0dca\u0dbd\u0ddc\u0d9a\u0dca</p>\n",
 "<p>First normalization and convolution layer </p>\n": "<p>\u0db4\u0dc5\u0db8\u0dd4 \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0dc3\u0dc4 \u0d9a\u0dd0\u0da7\u0dd2 \u0d9c\u0dd0\u0dc3\u0dd4\u0dab\u0dd4 \u0dc3\u0dca\u0dae\u0dbb\u0dba</p>\n",
 "<p>Get embeddings with shape <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc4\u0dd0\u0da9\u0dba \u0dc3\u0dc4\u0dd2\u0dad \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1<span translate=no>_^_0_^_</span></p>\n",
 "<p>Get query, key and vector embeddings </p>\n": "<p>\u0dc0\u0dd2\u0db8\u0dc3\u0dd4\u0db8, \u0dba\u0dad\u0dd4\u0dbb \u0dc3\u0dc4 \u0daf\u0ddb\u0dc1\u0dd2\u0d9a \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1</p>\n",
 "<p>Get the moments in the quantized embedding space </p>\n": "<p>\u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dda \u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba\u0dda \u0db8\u0ddc\u0dc4\u0ddc\u0dad \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1</p>\n",
 "<p>Group normalization </p>\n": "<p>\u0d9a\u0dab\u0dca\u0da9\u0dcf\u0dba\u0db8\u0dca \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba</p>\n",
 "<p>Initial <span translate=no>_^_0_^_</span> convolution layer that maps the embedding space to <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dda \u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8\u0dca \u0d9c\u0dad \u0d9a\u0dbb\u0db1 \u0db8\u0dd6\u0dbd\u0dd2\u0d9a<span translate=no>_^_0_^_</span> \u0d9a\u0dd0\u0da7\u0dd2 \u0d9c\u0dd0\u0dc3\u0dca\u0dc0\u0dd3\u0db8\u0dda \u0dc3\u0dca\u0dae\u0dbb\u0dba<span translate=no>_^_1_^_</span></p>\n",
 "<p>Initial <span translate=no>_^_0_^_</span> convolution layer that maps the image to <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0dbb\u0dd6\u0db4\u0dba \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8\u0dca<span translate=no>_^_0_^_</span> \u0d9c\u0dad \u0d9a\u0dbb\u0db1 \u0db8\u0dd6\u0dbd\u0dd2\u0d9a \u0d9a\u0dd0\u0da7\u0dd2 \u0d9c\u0dd0\u0dc3\u0dd4\u0dab\u0dd4 \u0dc3\u0dca\u0dae\u0dbb\u0dba<span translate=no>_^_1_^_</span></p>\n",
 "<p>List of top-level blocks </p>\n": "<p>\u0d89\u0dc4\u0dc5 \u0db8\u0da7\u0dca\u0da7\u0db8\u0dda \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 \u0dbd\u0dd0\u0dba\u0dd2\u0dc3\u0dca\u0dad\u0dd4\u0dc0</p>\n",
 "<p>Map and add residual </p>\n": "<p>\u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8 \u0dc3\u0dc4 \u0d85\u0dc0\u0dc1\u0dda\u0dc2 \u0d91\u0d9a\u0dad\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1</p>\n",
 "<p>Map to <span translate=no>_^_0_^_</span> with the initial convolution </p>\n": "<p>\u0d86\u0dbb\u0db8\u0dca\u0db7\u0d9a \u0d9a\u0dd0\u0da7\u0dd2 \u0d9c\u0dd0\u0dc3\u0dca\u0db8<span translate=no>_^_0_^_</span> \u0dc3\u0db8\u0d9f \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8</p>\n",
 "<p>Map to embedding space from the quantized representation </p>\n": "<p>\u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0db1\u0dd2\u0dbb\u0dd6\u0db4\u0dab\u0dba\u0dd9\u0db1\u0dca \u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8</p>\n",
 "<p>Map to embedding space with a <span translate=no>_^_0_^_</span> convolution </p>\n": "<p><span translate=no>_^_0_^_</span>\u0d9a\u0dd0\u0da7\u0dd2 \u0d9c\u0dd0\u0dc3\u0dd3\u0db8\u0d9a\u0dd2\u0db1\u0dca \u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8</p>\n",
 "<p>Map to image space with a <span translate=no>_^_0_^_</span> convolution </p>\n": "<p><span translate=no>_^_0_^_</span>\u0dc3\u0d82\u0d9a\u0ddd\u0da0\u0db1\u0dba \u0dc3\u0db8\u0d9f \u0dbb\u0dd6\u0db4 \u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba\u0da7 \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8</p>\n",
 "<p>Normalize <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u200d\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1<span translate=no>_^_0_^_</span></p>\n",
 "<p>Normalize and map to embedding space </p>\n": "<p>\u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0d9a\u0dbb \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8\u0dca \u0d9c\u0dad \u0d9a\u0dbb\u0db1\u0dca\u0db1</p>\n",
 "<p>Normalize and map to image space </p>\n": "<p>\u0dbb\u0dd6\u0db4 \u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba\u0da7 \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0d9a\u0dbb \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8\u0dca \u0d9c\u0dad \u0d9a\u0dbb\u0db1\u0dca\u0db1</p>\n",
 "<p>Number of blocks of different resolutions. The resolution is halved at the end each top level block </p>\n": "<p>\u0dc0\u0dd2\u0dc0\u0dd2\u0db0 \u0dc0\u0dd2\u0db7\u0dda\u0daf\u0db1 \u0dc0\u0dbd \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2 \u0d9c\u0dab\u0db1. \u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0d89\u0dc4\u0dc5 \u0db8\u0da7\u0dca\u0da7\u0db8\u0dda \u0d9a\u0ddc\u0da7\u0dc3 \u0d85\u0dc0\u0dc3\u0dcf\u0db1\u0dba\u0dda \u0dc0\u0dd2\u0db7\u0dda\u0daf\u0db1\u0dba \u0d85\u0da9\u0d9a\u0dd2\u0db1\u0dca \u0dba\u0dd4\u0d9a\u0dca\u0dad \u0dc0\u0dda</p>\n",
 "<p>Number of channels in each top level block </p>\n": "<p>\u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0d89\u0dc4\u0dc5 \u0db8\u0da7\u0dca\u0da7\u0db8\u0dda \u0db6\u0dca\u0dbd\u0ddc\u0d9a\u0dca \u0d91\u0d9a\u0dda \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0d9c\u0dab\u0db1</p>\n",
 "<p>Number of channels in each top level block, in the reverse order </p>\n": "<p>\u0db4\u0dca\u0dbb\u0dad\u0dd2\u0dbd\u0ddd\u0db8 \u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd\u0dd9\u0dc4\u0dd2 \u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0d89\u0dc4\u0dc5 \u0db8\u0da7\u0dca\u0da7\u0db8\u0dda \u0db6\u0dca\u0dbd\u0ddc\u0d9a\u0dca \u0d91\u0d9a\u0dda \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0d9c\u0dab\u0db1</p>\n",
 "<p>Number of channels in the top-level block </p>\n": "<p>\u0d89\u0dc4\u0dc5 \u0db8\u0da7\u0dca\u0da7\u0db8\u0dda \u0db6\u0dca\u0dbd\u0ddc\u0d9a\u0dca \u0d91\u0d9a\u0dda \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0d9c\u0dab\u0db1</p>\n",
 "<p>Prepend to be consistent with the checkpoint </p>\n": "<p>\u0db8\u0dd4\u0dbb\u0db4\u0ddc\u0dbd\u0da7 \u0d85\u0db1\u0dd4\u0d9a\u0dd6\u0dbd \u0dc0\u0dd3\u0db8\u0da7 \u0dc3\u0dd6\u0daf\u0dcf\u0db1\u0db8\u0dca \u0dc0\u0db1\u0dca\u0db1</p>\n",
 "<p>Query, key and value mappings </p>\n": "<p>\u0dc0\u0dd2\u0db8\u0dc3\u0dd4\u0db8\u0dca, \u0dba\u0dad\u0dd4\u0dbb \u0dc3\u0dc4 \u0d85\u0d9c\u0dba \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8\u0dca</p>\n",
 "<p>ResNet Blocks </p>\n": "<p>\u0dbb\u0dd9\u0dc3\u0dca\u0db1\u0dd9\u0da7\u0dca \u0db6\u0dca\u0dbd\u0ddc\u0d9a\u0dca</p>\n",
 "<p>ResNet blocks with attention </p>\n": "<p>\u0d85\u0dc0\u0db0\u0dcf\u0db1\u0dba \u0dc3\u0dc4\u0dd2\u0dad \u0dbb\u0dd9\u0dc3\u0dca\u0db1\u0dd9\u0da7\u0dca \u0db6\u0dca\u0dbd\u0ddc\u0d9a\u0dca</p>\n",
 "<p>Reshape back to <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db1\u0dd0\u0dc0\u0dad \u0dc3\u0d9a\u0dc3\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1<span translate=no>_^_0_^_</span></p>\n",
 "<p>Reshape to query, key and vector embeedings from <span translate=no>_^_0_^_</span> to <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0dc0\u0dd2\u0db8\u0dc3\u0dd4\u0db8, \u0db4\u0dca\u0dbb\u0db0\u0dcf\u0db1 \u0dc3\u0dc4 \u0daf\u0ddb\u0dc1\u0dd2\u0d9a \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dca<span translate=no>_^_0_^_</span> \u0dc0\u0dd9\u0dad \u0db1\u0dd0\u0dc0\u0dad \u0dc3\u0d9a\u0dc3\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1<span translate=no>_^_1_^_</span></p>\n",
 "<p>Return the distribution </p>\n": "<p>\u0db6\u0dd9\u0daf\u0dcf \u0dc4\u0dd0\u0dbb\u0dd3\u0db8 \u0d86\u0db4\u0dc3\u0dd4 \u0dbd\u0db6\u0dcf \u0daf\u0dd9\u0db1\u0dca\u0db1</p>\n",
 "<p>Sample from the distribution </p>\n": "<p>\u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0dd9\u0db1\u0dca \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba</p>\n",
 "<p>Second normalization and convolution layer </p>\n": "<p>\u0daf\u0dd9\u0dc0\u0db1 \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0dc3\u0dc4 \u0d9a\u0dd0\u0da7\u0dd2 \u0d9c\u0dd0\u0dc3\u0dd4\u0dab\u0dd4 \u0dc3\u0dca\u0dae\u0dbb\u0dba</p>\n",
 "<p>Split mean and log of variance </p>\n": "<p>\u0db7\u0dda\u0daf\u0dba \u0db8\u0db0\u0dca\u0dba\u0db1\u0dca\u0dba\u0dba \u0dc3\u0dc4 \u0dc0\u0dd2\u0da0\u0dbd\u0dad\u0dcf\u0dc0 \u0dbd\u0d9d\u0dd4-\u0dc3\u0da7\u0dc4\u0db1</p>\n",
 "<p>Top-level block </p>\n": "<p>\u0d89\u0dc4\u0dc5 \u0db8\u0da7\u0dca\u0da7\u0db8\u0dda \u0db6\u0dca\u0dbd\u0ddc\u0d9a\u0dca</p>\n",
 "<p>Top-level blocks </p>\n": "<p>\u0d89\u0dc4\u0dc5 \u0db8\u0da7\u0dca\u0da7\u0db8\u0dda \u0d9a\u0dd4\u0da7\u0dca\u0da7\u0dd2</p>\n",
 "<p>Up-sample by a factor of <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc3\u0dcf\u0db0\u0d9a\u0dba\u0d9a\u0dca \u0d85\u0db1\u0dd4\u0dc0 \u0d89\u0dc4\u0dc5 \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba<span translate=no>_^_0_^_</span></p>\n",
 "<p>Up-sampling </p>\n": "<p>\u0d89\u0dc4\u0dc5\u0da7 \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8</p>\n",
 "<p>Up-sampling at the end of each top level block except the first </p>\n": "<p>\u0db4\u0dc5\u0db8\u0dd4\u0dc0\u0dd0\u0db1\u0dca\u0db1 \u0dc4\u0dd0\u0dbb \u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0d89\u0dc4\u0dc5 \u0db8\u0da7\u0dca\u0da7\u0db8\u0dda \u0d9a\u0ddc\u0da7\u0dc3 \u0d85\u0dc0\u0dc3\u0dcf\u0db1\u0dba\u0dda \u0d89\u0dc4\u0dc5\u0da7 \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8</p>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  are the means and log of variances of the embedding of shape  <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u0dc4\u0dd0\u0da9\u0dba\u0dda \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8 \u0db4\u0dd2\u0dc5\u0dd2\u0db6\u0db3 \u0dc0\u0dd2\u0da0\u0dbd\u0db1\u0dba\u0db1\u0dca\u0d9c\u0dda \u0db8\u0dcf\u0db0\u0dca\u0dba\u0dba\u0db1\u0dca \u0dc3\u0dc4 \u0dbd\u0ddc\u0d9c\u0dca \u0dc0\u0dda<span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the embedding tensor with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u0dc4\u0dd0\u0da9\u0dba \u0dc3\u0dc4\u0dd2\u0dad \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8 tensor \u0dc0\u0dda<span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the encoder </li>\n<li><span translate=no>_^_1_^_</span>  is the decoder </li>\n<li><span translate=no>_^_2_^_</span>  is the number of dimensions in the quantized embedding space </li>\n<li><span translate=no>_^_3_^_</span>  is the number of channels in the embedding space</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u0d86\u0d9a\u0dda\u0dad\u0d9a\u0dba \u0dc0\u0dda</li>\n<li><span translate=no>_^_1_^_</span>\u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a\u0dba \u0dc0\u0dda</li>\n<li><span translate=no>_^_2_^_</span>\u0dba\u0db1\u0dd4 \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dda \u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba\u0dda \u0db8\u0dcf\u0db1\u0dba\u0db1\u0dca \u0d9c\u0dab\u0db1</li>\n</ul><li><span translate=no>_^_3_^_</span>\u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dda \u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba\u0dda \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0d9c\u0dab\u0db1 \u0dc0\u0dda</li>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the image tensor with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u0dc4\u0dd0\u0da9\u0dba \u0dc3\u0dc4\u0dd2\u0dad \u0dbb\u0dd6\u0db4 \u0da7\u0dd9\u0db1\u0dca\u0dc3\u0dbb\u0dba\u0dba\u0dd2<span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the input feature map with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u0dc4\u0dd0\u0da9\u0dba \u0dc3\u0dc4\u0dd2\u0dad \u0d86\u0daf\u0dcf\u0db1 \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0dc3\u0dd2\u0dad\u0dd2\u0dba\u0db8\u0dba\u0dd2<span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the number of channels in the final convolution layer </li>\n<li><span translate=no>_^_1_^_</span>  are the multiplicative factors for the number of channels in the  previous blocks, in reverse order </li>\n<li><span translate=no>_^_2_^_</span>  is the number of resnet layers at each resolution </li>\n<li><span translate=no>_^_3_^_</span>  is the number of channels in the image </li>\n<li><span translate=no>_^_4_^_</span>  is the number of channels in the embedding space</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u0d85\u0dc0\u0dc3\u0dcf\u0db1 \u0dc3\u0d82\u0dc0\u0dc4\u0db1 \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0dda \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0d9c\u0dab\u0db1 \u0dc0\u0dda</li>\n<li><span translate=no>_^_1_^_</span>\u0db4\u0dd9\u0dbb \u0db6\u0dca\u0dbd\u0ddc\u0d9a\u0dca \u0dc0\u0dbd \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0d9c\u0dab\u0db1 \u0dc3\u0db3\u0dc4\u0dcf \u0db6\u0dc4\u0dd4\u0d9a\u0dcf\u0dbb\u0dca\u0dba \u0dc3\u0dcf\u0db0\u0d9a, \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0dbd\u0ddd\u0db8 \u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd</li>\n<li><span translate=no>_^_2_^_</span>\u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0dc0\u0dd2\u0db7\u0dda\u0daf\u0db1\u0dba\u0dda \u0dbb\u0dd9\u0dc3\u0dca\u0db1\u0dd9\u0da7\u0dca \u0dc3\u0dca\u0dae\u0dbb \u0d9c\u0dab\u0db1 \u0dc0\u0dda</li>\n<li><span translate=no>_^_3_^_</span>\u0dba\u0db1\u0dd4 \u0dbb\u0dd6\u0db4\u0dba\u0dda \u0d87\u0dad\u0dd2 \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0d9c\u0dab\u0db1</li>\n</ul><li><span translate=no>_^_4_^_</span>\u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dda \u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba\u0dda \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0d9c\u0dab\u0db1 \u0dc0\u0dda</li>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the number of channels in the first convolution layer </li>\n<li><span translate=no>_^_1_^_</span>  are the multiplicative factors for the number of channels in the  subsequent blocks </li>\n<li><span translate=no>_^_2_^_</span>  is the number of resnet layers at each resolution </li>\n<li><span translate=no>_^_3_^_</span>  is the number of channels in the image </li>\n<li><span translate=no>_^_4_^_</span>  is the number of channels in the embedding space</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u0db4\u0dc5\u0db8\u0dd4 \u0dc3\u0d82\u0dc0\u0dc4\u0db1 \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0dda \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0d9c\u0dab\u0db1 \u0dc0\u0dda</li>\n<li><span translate=no>_^_1_^_</span>\u0db4\u0dc3\u0dd4\u0d9a\u0dcf\u0dbd\u0dd3\u0db1 \u0db6\u0dca\u0dbd\u0ddc\u0d9a\u0dca \u0dc0\u0dbd \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0dc3\u0d82\u0d9b\u0dca\u0dba\u0dcf\u0dc0 \u0dc3\u0db3\u0dc4\u0dcf \u0db6\u0dc4\u0dd4\u0d9a\u0dcf\u0dbb\u0dca\u0dba \u0dc3\u0dcf\u0db0\u0d9a \u0dc0\u0dda</li>\n<li><span translate=no>_^_2_^_</span>\u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0dc0\u0dd2\u0db7\u0dda\u0daf\u0db1\u0dba\u0dda \u0dbb\u0dd9\u0dc3\u0dca\u0db1\u0dd9\u0da7\u0dca \u0dc3\u0dca\u0dae\u0dbb \u0d9c\u0dab\u0db1 \u0dc0\u0dda</li>\n<li><span translate=no>_^_3_^_</span>\u0dba\u0db1\u0dd4 \u0dbb\u0dd6\u0db4\u0dba\u0dda \u0d87\u0dad\u0dd2 \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0d9c\u0dab\u0db1</li>\n</ul><li><span translate=no>_^_4_^_</span>\u0d9a\u0dcf\u0dc0\u0dd0\u0daf\u0dca\u0daf\u0dd3\u0db8\u0dda \u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dba\u0dda \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0d9c\u0dab\u0db1 \u0dc0\u0dda</li>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the number of channels in the input </li>\n<li><span translate=no>_^_1_^_</span>  is the number of channels in the output</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u0dba\u0db1\u0dd4 \u0d86\u0daf\u0dcf\u0db1\u0dba\u0dda \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0d9c\u0dab\u0db1</li>\n<li><span translate=no>_^_1_^_</span>\u0db1\u0dd2\u0db8\u0dd0\u0dc0\u0dd4\u0db8\u0dda \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0d9c\u0dab\u0db1 \u0dc0\u0dda</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the number of channels</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u0dba\u0db1\u0dd4 \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0d9c\u0dab\u0db1</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the tensor of shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u0dc4\u0dd0\u0da9\u0dba\u0dda \u0d86\u0dad\u0dad\u0dd2\u0d9a\u0dba \u0dc0\u0dda<span translate=no>_^_1_^_</span></li></ul>\n",
 "Annotated PyTorch implementation/tutorial of the autoencoder for stable diffusion.": "\u0dc3\u0dca\u0dae\u0dcf\u0dc0\u0dbb \u0dc0\u0dd2\u0dc3\u0dbb\u0dab\u0dba \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0dca\u0dc0\u0dba\u0d82\u0d9a\u0dca\u0dbb\u0dd3\u0dba \u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dba\u0dda PyTorch \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8/\u0db1\u0dd2\u0db6\u0db1\u0dca\u0db0\u0db1\u0dba.",
 "Autoencoder for Stable Diffusion": "\u0dc3\u0dca\u0dae\u0dcf\u0dc0\u0dbb \u0dc0\u0dd2\u0dc3\u0dbb\u0dab\u0dba \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0dca\u0dc0\u0dba\u0d82\u0d9a\u0dca\u0dbb\u0dd3\u0dba \u0d86\u0d9a\u0dda\u0dad\u0d9a\u0dba"
}