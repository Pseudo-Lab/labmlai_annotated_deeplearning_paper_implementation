{
 "<h1>Transformer for Stable Diffusion <a href=\"unet.html\">U-Net</a></h1>\n<p>This implements the transformer module used in <a href=\"unet.html\">U-Net</a> that  gives <span translate=no>_^_0_^_</span></p>\n<p>We have kept to the model definition and naming unchanged from <a href=\"https://github.com/CompVis/stable-diffusion\">CompVis/stable-diffusion</a> so that we can load the checkpoints directly.</p>\n": "<h1>\u7528\u4e8e\u7a33\u5b9a\u6269\u6563 <a href=\"unet.html\">U-Net</a> \u7684\u53d8\u538b\u5668</h1>\n<p>\u8fd9\u5b9e\u73b0\u4e86 <a href=\"unet.html\">U-Net</a> \u4e2d\u4f7f\u7528\u7684\u53d8\u538b\u5668\u6a21\u5757\uff0c\u5b83\u63d0\u4f9b<span translate=no>_^_0_^_</span></p>\n<p>\u6211\u4eec\u4fdd\u6301\u4e86 <a href=\"https://github.com/CompVis/stable-diffusion\">compvis/Stable-Difusi</a> on \u7684\u6a21\u578b\u5b9a\u4e49\u548c\u547d\u540d\u4e0d\u53d8\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u52a0\u8f7d\u68c0\u67e5\u70b9\u3002</p>\n",
 "<h2>Spatial Transformer</h2>\n": "<h2>\u7a7a\u95f4\u53d8\u538b\u5668</h2>\n",
 "<h3>Cross Attention Layer</h3>\n<p>This falls-back to self-attention when conditional embeddings are not specified.</p>\n": "<h3>\u4ea4\u53c9\u6ce8\u610f\u529b\u5c42</h3>\n<p>\u5f53\u672a\u6307\u5b9a\u6761\u4ef6\u5d4c\u5165\u65f6\uff0c\u8fd9\u4f1a\u56de\u5f52\u5230\u81ea\u6211\u6ce8\u610f\u529b\u3002</p>\n",
 "<h3>Feed-Forward Network</h3>\n": "<h3>\u524d\u9988\u7f51\u7edc</h3>\n",
 "<h3>GeGLU Activation</h3>\n<p><span translate=no>_^_0_^_</span></p>\n": "<h3>\u6fc0\u6d3b GegLU</h3>\n<p><span translate=no>_^_0_^_</span></p>\n",
 "<h3>Transformer Layer</h3>\n": "<h3>\u53d8\u538b\u5668\u5c42</h3>\n",
 "<h4>Flash Attention</h4>\n<ul><li><span translate=no>_^_0_^_</span>  are the query vectors before splitting heads, of shape <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span>  are the query vectors before splitting heads, of shape <span translate=no>_^_3_^_</span> </li>\n<li><span translate=no>_^_4_^_</span>  are the query vectors before splitting heads, of shape <span translate=no>_^_5_^_</span></li></ul>\n": "<h4>Flash \u6ce8\u610f</h4>\n<ul><li><span translate=no>_^_0_^_</span>\u662f\u5206\u5272\u5934\u90e8\u4e4b\u524d\u7684\u67e5\u8be2\u5411\u91cf\uff0c\u5f62\u72b6\u4e3a<span translate=no>_^_1_^_</span></li>\n<li><span translate=no>_^_2_^_</span>\u662f\u5206\u5272\u5934\u90e8\u4e4b\u524d\u7684\u67e5\u8be2\u5411\u91cf\uff0c\u5f62\u72b6\u4e3a<span translate=no>_^_3_^_</span></li>\n</ul><li><span translate=no>_^_4_^_</span>\u662f\u5206\u5272\u5934\u90e8\u4e4b\u524d\u7684\u67e5\u8be2\u5411\u91cf\uff0c\u5f62\u72b6\u4e3a<span translate=no>_^_5_^_</span></li>\n",
 "<h4>Normal Attention</h4>\n<ul><li><span translate=no>_^_0_^_</span>  are the query vectors before splitting heads, of shape <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span>  are the query vectors before splitting heads, of shape <span translate=no>_^_3_^_</span> </li>\n<li><span translate=no>_^_4_^_</span>  are the query vectors before splitting heads, of shape <span translate=no>_^_5_^_</span></li></ul>\n": "<h4>\u6b63\u5e38\u6ce8\u610f\u529b</h4>\n<ul><li><span translate=no>_^_0_^_</span>\u662f\u5206\u5272\u5934\u90e8\u4e4b\u524d\u7684\u67e5\u8be2\u5411\u91cf\uff0c\u5f62\u72b6\u4e3a<span translate=no>_^_1_^_</span></li>\n<li><span translate=no>_^_2_^_</span>\u662f\u5206\u5272\u5934\u90e8\u4e4b\u524d\u7684\u67e5\u8be2\u5411\u91cf\uff0c\u5f62\u72b6\u4e3a<span translate=no>_^_3_^_</span></li>\n</ul><li><span translate=no>_^_4_^_</span>\u662f\u5206\u5272\u5934\u90e8\u4e4b\u524d\u7684\u67e5\u8be2\u5411\u91cf\uff0c\u5f62\u72b6\u4e3a<span translate=no>_^_5_^_</span></li>\n",
 "<p> </p>\n": "<p></p>\n",
 "<p><span translate=no>_^_0_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span></p>\n",
 "<p>Add residual </p>\n": "<p>\u6dfb\u52a0\u6b8b\u5dee</p>\n",
 "<p>Apply the transformer layers </p>\n": "<p>\u5e94\u7528\u53d8\u538b\u5668\u5c42</p>\n",
 "<p>Attention scaling factor </p>\n": "<p>\u6ce8\u610f\u529b\u7f29\u653e\u7cfb\u6570</p>\n",
 "<p>Calculate attention <span translate=no>_^_0_^_</span> </p>\n": "<p>\u8ba1\u7b97\u6ce8\u610f\u529b<span translate=no>_^_0_^_</span></p>\n",
 "<p>Combined linear projections <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> </p>\n": "<p>\u7ec4\u5408\u7ebf\u6027\u6295\u5f71<span translate=no>_^_0_^_</span>\u548c<span translate=no>_^_1_^_</span></p>\n",
 "<p>Compute attention <span translate=no>_^_0_^_</span> This gives a tensor of shape <span translate=no>_^_1_^_</span> </p>\n": "<p>\u8ba1\u7b97\u6ce8\u610f\u529b<span translate=no>_^_0_^_</span>\u8fd9\u7ed9\u51fa\u4e86\u5f62\u72b6\u7684\u5f20\u91cf<span translate=no>_^_1_^_</span></p>\n",
 "<p>Compute attention output <span translate=no>_^_0_^_</span> </p>\n": "<p>\u8ba1\u7b97\u6ce8\u610f\u529b\u8f93\u51fa<span translate=no>_^_0_^_</span></p>\n",
 "<p>Compute softmax <span translate=no>_^_0_^_</span> </p>\n": "<p>\u8ba1\u7b97 softmax<span translate=no>_^_0_^_</span></p>\n",
 "<p>Cross attention layer and pre-norm layer </p>\n": "<p>\u4ea4\u53c9\u6ce8\u610f\u529b\u5c42\u548c\u9884\u89c4\u8303\u5c42</p>\n",
 "<p>Cross-attention with conditioning </p>\n": "<p>\u4ea4\u53c9\u6ce8\u610f\u529b\u4e0e\u8c03\u8282</p>\n",
 "<p>Feed-forward network </p>\n": "<p>\u524d\u9988\u7f51\u7edc</p>\n",
 "<p>Feed-forward network and pre-norm layer </p>\n": "<p>\u524d\u9988\u7f51\u7edc\u548c\u9884\u89c4\u8303\u5c42</p>\n",
 "<p>Final <span translate=no>_^_0_^_</span> convolution </p>\n": "<p>\u6700\u540e\u7684<span translate=no>_^_0_^_</span>\u5377\u79ef</p>\n",
 "<p>Final linear layer </p>\n": "<p>\u6700\u540e\u7684\u7ebf\u6027\u5c42</p>\n",
 "<p>Flash attention works for head sizes <span translate=no>_^_0_^_</span>, <span translate=no>_^_1_^_</span> and <span translate=no>_^_2_^_</span>, so we have to pad the heads to fit this size. </p>\n": "<p>Flash \u6ce8\u610f\u529b\u9002\u7528\u4e8e\u5934\u90e8\u5c3a\u5bf8<span translate=no>_^_0_^_</span><span translate=no>_^_2_^_</span>\uff0c<span translate=no>_^_1_^_</span>\u800c\u4e14\uff0c\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u57ab\u4f4f\u5934\u90e8\u624d\u80fd\u9002\u5408\u8fd9\u4e2a\u5c3a\u5bf8\u3002</p>\n",
 "<p>For residual connection </p>\n": "<p>\u7528\u4e8e\u5269\u4f59\u8fde\u63a5</p>\n",
 "<p>Get <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> </p>\n": "<p>\u83b7\u53d6<span translate=no>_^_0_^_</span>\u548c<span translate=no>_^_1_^_</span></p>\n",
 "<p>Get batch size and number of elements along sequence axis (<span translate=no>_^_0_^_</span>) </p>\n": "<p>\u6cbf\u5e8f\u5217\u8f74\u83b7\u53d6\u6279\u91cf\u5927\u5c0f\u548c\u5143\u7d20\u6570\u91cf (<span translate=no>_^_0_^_</span>)</p>\n",
 "<p>Get query, key and value vectors </p>\n": "<p>\u83b7\u53d6\u67e5\u8be2\u5411\u91cf\u3001\u952e\u5411\u91cf\u548c\u503c\u5411\u91cf</p>\n",
 "<p>Get shape <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5851\u9020\u8eab\u5f62<span translate=no>_^_0_^_</span></p>\n",
 "<p>If <span translate=no>_^_0_^_</span> is <span translate=no>_^_1_^_</span> we perform self attention </p>\n": "<p>\u5982\u679c<span translate=no>_^_0_^_</span>\u662f\uff0c<span translate=no>_^_1_^_</span>\u6211\u4eec\u8fdb\u884c\u81ea\u6211\u5173\u6ce8</p>\n",
 "<p>Initial <span translate=no>_^_0_^_</span> convolution </p>\n": "<p>\u521d\u59cb<span translate=no>_^_0_^_</span>\u5377\u79ef</p>\n",
 "<p>Initial group normalization </p>\n": "<p>\u521d\u59cb\u7fa4\u7ec4\u6807\u51c6\u5316</p>\n",
 "<p>Map to <span translate=no>_^_0_^_</span> with a linear layer </p>\n": "<p><span translate=no>_^_0_^_</span>\u4f7f\u7528\u7ebf\u6027\u56fe\u5c42\u6620\u5c04\u5230</p>\n",
 "<p>Normalize </p>\n": "<p>\u6807\u51c6\u5316</p>\n",
 "<p>Otherwise, fallback to normal attention </p>\n": "<p>\u5426\u5219\uff0c\u56de\u9000\u5230\u6b63\u5e38\u7684\u6ce8\u610f\u529b\u4e0a</p>\n",
 "<p>Pad the heads </p>\n": "<p>\u57ab\u4f4f\u5934\u90e8</p>\n",
 "<p>Query, key and value mappings </p>\n": "<p>\u67e5\u8be2\u3001\u952e\u548c\u503c\u6620\u5c04</p>\n",
 "<p>Reshape and transpose from <span translate=no>_^_0_^_</span> to <span translate=no>_^_1_^_</span> </p>\n": "<p>\u91cd\u5851\u5f62\u72b6\u5e76\u4ece\u53d8\u6362<span translate=no>_^_0_^_</span>\u4e3a<span translate=no>_^_1_^_</span></p>\n",
 "<p>Reshape to <span translate=no>_^_0_^_</span> </p>\n": "<p>\u91cd\u5851\u4e3a<span translate=no>_^_0_^_</span></p>\n",
 "<p>Self attention </p>\n": "<p>\u81ea\u6211\u6ce8\u610f\u529b</p>\n",
 "<p>Self-attention layer and pre-norm layer </p>\n": "<p>\u81ea\u6211\u6ce8\u610f\u529b\u5c42\u548c\u9884\u89c4\u8303\u5c42</p>\n",
 "<p>Set the scale for scaled dot-product attention. </p>\n": "<p>\u8bbe\u7f6e\u6309\u6bd4\u4f8b\u7f29\u653e\u70b9\u4ea7\u54c1\u6ce8\u610f\u529b\u7684\u6bd4\u4f8b\u3002</p>\n",
 "<p>Set to <span translate=no>_^_0_^_</span> if it&#x27;s not installed </p>\n": "<p><span translate=no>_^_0_^_</span>\u5982\u679c\u672a\u5b89\u88c5\uff0c\u5219\u8bbe\u7f6e\u4e3a</p>\n",
 "<p>Setup <a href=\"https://github.com/HazyResearch/flash-attention\">flash attention</a>. Flash attention is only used if it&#x27;s installed and <span translate=no>_^_0_^_</span> is set to <span translate=no>_^_1_^_</span>. </p>\n": "<p>\u8bbe\u7f6e<a href=\"https://github.com/HazyResearch/flash-attention\">\u95ea\u5149\u8b66\u793a</a>\u3002Flash \u6ce8\u610f\u53ea\u6709\u5728\u5b89\u88c5\u5e76\u8bbe\u7f6e<span translate=no>_^_0_^_</span>\u4e3a\u65f6\u624d\u4f1a\u4f7f\u7528<span translate=no>_^_1_^_</span>\u3002</p>\n",
 "<p>Split the heads </p>\n": "<p>\u5206\u5f00\u8111\u888b</p>\n",
 "<p>Split them to heads of shape <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5c06\u5b83\u4eec\u5206\u6210\u5f62\u72b6\u7684\u5934\u90e8<span translate=no>_^_0_^_</span></p>\n",
 "<p>Stack <span translate=no>_^_0_^_</span>, <span translate=no>_^_1_^_</span>, <span translate=no>_^_2_^_</span> vectors for flash attention, to get a single tensor of shape <span translate=no>_^_3_^_</span> </p>\n": "<p>\u5806\u53e0<span translate=no>_^_0_^_</span>\u3001<span translate=no>_^_1_^_</span>\u3001<span translate=no>_^_2_^_</span>\u5411\u91cf\u4ee5\u83b7\u5f97\u95ea\u5149\u6ce8\u610f\u529b\uff0c\u4ee5\u83b7\u5f97\u5355\u4e2a\u5f62\u72b6\u5f20\u91cf<span translate=no>_^_3_^_</span></p>\n",
 "<p>Transformer layers </p>\n": "<p>\u53d8\u538b\u5668\u5c42</p>\n",
 "<p>Transpose and reshape from <span translate=no>_^_0_^_</span> to <span translate=no>_^_1_^_</span> </p>\n": "<p>\u4ece\u5230<span translate=no>_^_0_^_</span>\u8f6c\u7f6e\u548c\u91cd\u5851<span translate=no>_^_1_^_</span></p>\n",
 "<p>Truncate the extra head size </p>\n": "<p>\u622a\u65ad\u591a\u4f59\u7684\u5934\u90e8\u5c3a\u5bf8</p>\n",
 "<p>Use flash attention if it&#x27;s available and the head size is less than or equal to <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5982\u679c\u95ea\u5149\u706f\u6ce8\u610f\u529b\u53ef\u7528\u4e14\u5934\u90e8\u5927\u5c0f\u5c0f\u4e8e\u6216\u7b49\u4e8e\uff0c\u8bf7\u4f7f\u7528\u95ea\u5149\u8b66\u793a<span translate=no>_^_0_^_</span></p>\n",
 "<p>You can install flash attention by cloning their Github repo, <a href=\"https://github.com/HazyResearch/flash-attention\">https://github.com/HazyResearch/flash-attention</a> and then running <span translate=no>_^_0_^_</span> </p>\n": "<p>\u4f60\u53ef\u4ee5\u901a\u8fc7\u514b\u9686\u4ed6\u4eec\u7684 Github \u5b58\u50a8\u5e93 <a href=\"https://github.com/HazyResearch/flash-attention\">https://github.com/HazyResearch/flash-attention</a> \u7136\u540e\u8fd0\u884c\u6765\u5b89\u88c5 Flash \u6ce8\u610f\u529b<span translate=no>_^_0_^_</span></p>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  are the input embeddings of shape <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span>  is the conditional embeddings of shape <span translate=no>_^_3_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u5f62\u72b6\u7684\u8f93\u5165\u5d4c\u5165<span translate=no>_^_1_^_</span></li>\n<li><span translate=no>_^_2_^_</span>\u662f\u5f62\u72b6\u7684\u6761\u4ef6\u5d4c\u5165<span translate=no>_^_3_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the feature map of shape <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span>  is the conditional embeddings of shape <span translate=no>_^_3_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u5f62\u72b6\u7684\u7279\u5f81\u56fe<span translate=no>_^_1_^_</span></li>\n<li><span translate=no>_^_2_^_</span>\u662f\u5f62\u72b6\u7684\u6761\u4ef6\u5d4c\u5165<span translate=no>_^_3_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the input embedding size </li>\n<li><span translate=no>_^_1_^_</span>  is multiplicative factor for the hidden layer size</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u8f93\u5165\u5d4c\u5165\u5927\u5c0f</li>\n<li><span translate=no>_^_1_^_</span>\u662f\u9690\u85cf\u5c42\u5927\u5c0f\u7684\u4e58\u6cd5\u56e0\u5b50</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the input embedding size </li>\n<li><span translate=no>_^_1_^_</span>  is the number of attention heads </li>\n<li><span translate=no>_^_2_^_</span>  is the size of a attention head </li>\n<li><span translate=no>_^_3_^_</span>  is the size of the conditional embeddings </li>\n<li><span translate=no>_^_4_^_</span>  specifies whether to perform the attention softmax computation inplace to  save memory</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u8f93\u5165\u5d4c\u5165\u5927\u5c0f</li>\n<li><span translate=no>_^_1_^_</span>\u662f\u6ce8\u610f\u529b\u5934\u7684\u6570\u91cf</li>\n<li><span translate=no>_^_2_^_</span>\u662f\u6ce8\u610f\u529b\u5934\u7684\u5927\u5c0f</li>\n<li><span translate=no>_^_3_^_</span>\u662f\u6761\u4ef6\u5d4c\u5165\u7684\u5927\u5c0f</li>\n<li><span translate=no>_^_4_^_</span>\u6307\u5b9a\u662f\u5426\u5c31\u5730\u6267\u884c\u6ce8\u610f\u529b softmax \u8ba1\u7b97\u4ee5\u8282\u7701\u5185\u5b58</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the input embedding size </li>\n<li><span translate=no>_^_1_^_</span>  is the number of attention heads </li>\n<li><span translate=no>_^_2_^_</span>  is the size of a attention head </li>\n<li><span translate=no>_^_3_^_</span>  is the size of the conditional embeddings</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u8f93\u5165\u5d4c\u5165\u5927\u5c0f</li>\n<li><span translate=no>_^_1_^_</span>\u662f\u6ce8\u610f\u529b\u5934\u7684\u6570\u91cf</li>\n<li><span translate=no>_^_2_^_</span>\u662f\u6ce8\u610f\u529b\u5934\u7684\u5927\u5c0f</li>\n<li><span translate=no>_^_3_^_</span>\u662f\u6761\u4ef6\u5d4c\u5165\u7684\u5927\u5c0f</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the number of channels in the feature map </li>\n<li><span translate=no>_^_1_^_</span>  is the number of attention heads </li>\n<li><span translate=no>_^_2_^_</span>  is the number of transformer layers </li>\n<li><span translate=no>_^_3_^_</span>  is the size of the conditional embedding</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u529f\u80fd\u56fe\u4e2d\u7684\u9891\u9053\u6570</li>\n<li><span translate=no>_^_1_^_</span>\u662f\u6ce8\u610f\u529b\u5934\u7684\u6570\u91cf</li>\n<li><span translate=no>_^_2_^_</span>\u662f\u53d8\u538b\u5668\u5c42\u6570</li>\n<li><span translate=no>_^_3_^_</span>\u662f\u6761\u4ef6\u5d4c\u5165\u7684\u5927\u5c0f</li></ul>\n",
 "Annotated PyTorch implementation/tutorial of the transformer for U-Net in stable diffusion.": "\u5e26\u6ce8\u91ca\u7684 U-Net \u7a33\u5b9a\u6269\u6563\u53d8\u538b\u5668\u7684 PyTorch \u5b9e\u73b0/\u6559\u7a0b\u3002",
 "Transformer for Stable Diffusion U-Net": "\u7528\u4e8e\u7a33\u5b9a\u6269\u6563 U-Net \u7684\u53d8\u538b\u5668"
}