{
 "<h1>Autoencoder for <a href=\"../index.html\">Stable Diffusion</a></h1>\n<p>This implements the auto-encoder model used to map between image space and latent space.</p>\n<p>We have kept to the model definition and naming unchanged from <a href=\"https://github.com/CompVis/stable-diffusion\">CompVis/stable-diffusion</a> so that we can load the checkpoints directly.</p>\n": "<h1><a href=\"../index.html\">\u5b89\u5b9a\u3057\u305f\u62e1\u6563\u3092\u5b9f\u73fe\u3059\u308b\u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\u30fc</a></h1>\n<p>\u3053\u308c\u306f\u3001\u753b\u50cf\u7a7a\u9593\u3068\u6f5c\u5728\u7a7a\u9593\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u306b\u4f7f\u7528\u3055\u308c\u308b\u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\u30e2\u30c7\u30eb\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002</p>\n<p>\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u76f4\u63a5\u8aad\u307f\u8fbc\u3081\u308b\u3088\u3046\u306b\u3001<a href=\"https://github.com/CompVis/stable-diffusion\">CompVis/Stable-Diffusion\u304b\u3089\u30e2\u30c7\u30eb\u5b9a\u7fa9\u3068\u547d\u540d\u3092\u5909\u66f4\u3057\u3066\u3044\u307e\u305b\u3093</a>\u3002</p>\n",
 "<h2>Attention block</h2>\n": "<h2>\u30a2\u30c6\u30f3\u30b7\u30e7\u30f3\u30d6\u30ed\u30c3\u30af</h2>\n",
 "<h2>Autoencoder</h2>\n<p>This consists of the encoder and decoder modules.</p>\n": "<h2>\u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0</h2>\n<p>\u3053\u308c\u306f\u30a8\u30f3\u30b3\u30fc\u30c0\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u30c7\u30b3\u30fc\u30c0\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>\n",
 "<h2>Decoder module</h2>\n": "<h2>\u30c7\u30b3\u30fc\u30c0\u30e2\u30b8\u30e5\u30fc\u30eb</h2>\n",
 "<h2>Down-sampling layer</h2>\n": "<h2>\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30a4\u30e4\u30fc</h2>\n",
 "<h2>Encoder module</h2>\n": "<h2>\u30a8\u30f3\u30b3\u30fc\u30c0\u30e2\u30b8\u30e5\u30fc\u30eb</h2>\n",
 "<h2>Gaussian Distribution</h2>\n": "<h2>\u30ac\u30a6\u30b9\u5206\u5e03</h2>\n",
 "<h2>ResNet Block</h2>\n": "<h2>\u30ea\u30cd\u30c3\u30c8\u30d6\u30ed\u30c3\u30af</h2>\n",
 "<h2>Up-sampling layer</h2>\n": "<h2>\u30a2\u30c3\u30d7\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30a4\u30e4\u30fc</h2>\n",
 "<h3>Decode images from latent representation</h3>\n<ul><li><span translate=no>_^_0_^_</span>  is the latent representation with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<h3>\u6f5c\u5728\u8868\u73fe\u304b\u3089\u753b\u50cf\u3092\u30c7\u30b3\u30fc\u30c9</h3>\n<ul><li><span translate=no>_^_0_^_</span>\u5f62\u3092\u4f7f\u3063\u305f\u6f5c\u5728\u8868\u73fe\u3067\u3059 <span translate=no>_^_1_^_</span></li></ul>\n",
 "<h3>Encode images to latent representation</h3>\n<ul><li><span translate=no>_^_0_^_</span>  is the image tensor with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<h3>\u753b\u50cf\u3092\u6f5c\u5728\u8868\u73fe\u306b\u30a8\u30f3\u30b3\u30fc\u30c9</h3>\n<ul><li><span translate=no>_^_0_^_</span>\u5f62\u72b6\u306e\u3042\u308b\u30a4\u30e1\u30fc\u30b8\u30c6\u30f3\u30bd\u30eb\u3067\u3059 <span translate=no>_^_1_^_</span></li></ul>\n",
 "<h3>Group normalization</h3>\n<p>This is a helper function, with fixed number of groups and <span translate=no>_^_0_^_</span>.</p>\n": "<h3>\u30b0\u30eb\u30fc\u30d7\u6b63\u898f\u5316</h3>\n<p>\u3053\u308c\u306f\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3067\u3001\u30b0\u30eb\u30fc\u30d7\u306e\u6570\u306f\u56fa\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002<span translate=no>_^_0_^_</span></p>\n",
 "<h3>Swish activation</h3>\n<p><span translate=no>_^_0_^_</span></p>\n": "<h3>\u30b9\u30a6\u30a3\u30c3\u30b7\u30e5\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30b7\u30e7\u30f3</h3>\n<p><span translate=no>_^_0_^_</span></p>\n",
 "<p> </p>\n": "<p></p>\n",
 "<p><span translate=no>_^_0_^_</span> convolution mapping </p>\n": "<p><span translate=no>_^_0_^_</span>\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30de\u30c3\u30d4\u30f3\u30b0</p>\n",
 "<p><span translate=no>_^_0_^_</span> convolution with stride length of <span translate=no>_^_1_^_</span> to down-sample by a factor of <span translate=no>_^_2_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span>\u30b9\u30c8\u30e9\u30a4\u30c9\u306e\u9577\u3055\u304c\u306e\u7573\u307f\u8fbc\u307f\u304b\u3089\u3001<span translate=no>_^_1_^_</span>\u306e\u4fc2\u6570\u3067\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u307e\u3059 <span translate=no>_^_2_^_</span></p>\n",
 "<p><span translate=no>_^_0_^_</span> to <span translate=no>_^_1_^_</span> mapping layer for residual connection </p>\n": "<p><span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>\u6b8b\u7559\u63a5\u7d9a\u7528\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u30ec\u30a4\u30e4\u3078</p>\n",
 "<p>Add ResNet Blocks </p>\n": "<p>ResNet \u30d6\u30ed\u30c3\u30af\u3092\u8ffd\u52a0</p>\n",
 "<p>Add padding </p>\n": "<p>\u30d1\u30c7\u30a3\u30f3\u30b0\u3092\u8ffd\u52a0</p>\n",
 "<p>Add residual connection </p>\n": "<p>\u6b8b\u4f59\u63a5\u7d9a\u3092\u8ffd\u52a0</p>\n",
 "<p>Apply convolution </p>\n": "<p>\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u9069\u7528</p>\n",
 "<p>Attention scaling factor </p>\n": "<p>\u30a2\u30c6\u30f3\u30b7\u30e7\u30f3\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30d5\u30a1\u30af\u30bf\u30fc</p>\n",
 "<p>Calculate standard deviation </p>\n": "<p>\u6a19\u6e96\u504f\u5dee\u306e\u8a08\u7b97</p>\n",
 "<p>Clamp the log of variances </p>\n": "<p>\u5dee\u7570\u306e\u5bfe\u6570\u3092\u30af\u30e9\u30f3\u30d7</p>\n",
 "<p>Compute <span translate=no>_^_0_^_</span> </p>\n": "<p>\u30b3\u30f3\u30d4\u30e5\u30fc\u30c8 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Convolution to map from embedding space to quantized embedding space moments (mean and log variance) </p>\n": "<p>\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u304b\u3089\u91cf\u5b50\u5316\u3055\u308c\u305f\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u306e\u30e2\u30fc\u30e1\u30f3\u30c8\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u7573\u307f\u8fbc\u307f (\u5e73\u5747\u3068\u5bfe\u6570\u5206\u6563)</p>\n",
 "<p>Convolution to map from quantized embedding space back to embedding space </p>\n": "<p>\u91cf\u5b50\u5316\u3055\u308c\u305f\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u304b\u3089\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u7573\u307f\u8fbc\u307f</p>\n",
 "<p>Create top-level blocks </p>\n": "<p>\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u30d6\u30ed\u30c3\u30af\u3092\u4f5c\u6210</p>\n",
 "<p>Decode the image of shape <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5f62\u72b6\u306e\u753b\u50cf\u3092\u30c7\u30b3\u30fc\u30c9 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Down-sampling </p>\n": "<p>\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0</p>\n",
 "<p>Down-sampling at the end of each top level block except the last </p>\n": "<p>\u6700\u5f8c\u3092\u9664\u304f\u5404\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u30d6\u30ed\u30c3\u30af\u306e\u6700\u5f8c\u3067\u306e\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0</p>\n",
 "<p>Each top level block consists of multiple ResNet Blocks and down-sampling </p>\n": "<p>\u5404\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u30d6\u30ed\u30c3\u30af\u306f\u8907\u6570\u306eResNet\u30d6\u30ed\u30c3\u30af\u3068\u30c0\u30a6\u30f3\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059</p>\n",
 "<p>Each top level block consists of multiple ResNet Blocks and up-sampling </p>\n": "<p>\u5404\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u30d6\u30ed\u30c3\u30af\u306f\u8907\u6570\u306eResNet\u30d6\u30ed\u30c3\u30af\u3068\u30a2\u30c3\u30d7\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059</p>\n",
 "<p>Final <span translate=no>_^_0_^_</span> convolution layer </p>\n": "<p><span translate=no>_^_0_^_</span>\u6700\u7d42\u7573\u307f\u8fbc\u307f\u5c64</p>\n",
 "<p>Final ResNet blocks with attention </p>\n": "<p>\u6700\u5f8c\u306e ResNet \u30d6\u30ed\u30c3\u30af\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002</p>\n",
 "<p>First normalization and convolution layer </p>\n": "<p>\u6700\u521d\u306e\u6b63\u898f\u5316\u3068\u7573\u307f\u8fbc\u307f\u5c64</p>\n",
 "<p>Get embeddings with shape <span translate=no>_^_0_^_</span> </p>\n": "<p>\u56f3\u5f62\u4ed8\u304d\u306e\u57cb\u3081\u8fbc\u307f\u3092\u3059\u308b <span translate=no>_^_0_^_</span></p>\n",
 "<p>Get query, key and vector embeddings </p>\n": "<p>\u30af\u30a8\u30ea\u3001\u30ad\u30fc\u3001\u30d9\u30af\u30bf\u30fc\u306e\u57cb\u3081\u8fbc\u307f\u3092\u53d6\u5f97</p>\n",
 "<p>Get the moments in the quantized embedding space </p>\n": "<p>\u91cf\u5b50\u5316\u3055\u308c\u305f\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u306e\u30e2\u30fc\u30e1\u30f3\u30c8\u3092\u53d6\u5f97</p>\n",
 "<p>Group normalization </p>\n": "<p>\u30b0\u30eb\u30fc\u30d7\u6b63\u898f\u5316</p>\n",
 "<p>Initial <span translate=no>_^_0_^_</span> convolution layer that maps the embedding space to <span translate=no>_^_1_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span>\u57cb\u3081\u8fbc\u307f\u30b9\u30da\u30fc\u30b9\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u6700\u521d\u306e\u7573\u307f\u8fbc\u307f\u30ec\u30a4\u30e4\u30fc <span translate=no>_^_1_^_</span></p>\n",
 "<p>Initial <span translate=no>_^_0_^_</span> convolution layer that maps the image to <span translate=no>_^_1_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span>\u753b\u50cf\u3092\u30de\u30c3\u30d7\u3059\u308b\u6700\u521d\u306e\u7573\u307f\u8fbc\u307f\u30ec\u30a4\u30e4\u30fc <span translate=no>_^_1_^_</span></p>\n",
 "<p>List of top-level blocks </p>\n": "<p>\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u30d6\u30ed\u30c3\u30af\u306e\u30ea\u30b9\u30c8</p>\n",
 "<p>Map and add residual </p>\n": "<p>\u6b8b\u5dee\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u8ffd\u52a0</p>\n",
 "<p>Map to <span translate=no>_^_0_^_</span> with the initial convolution </p>\n": "<p><span translate=no>_^_0_^_</span>\u6700\u521d\u306e\u7573\u307f\u8fbc\u307f\u3067\u306b\u30de\u30c3\u30d4\u30f3\u30b0</p>\n",
 "<p>Map to embedding space from the quantized representation </p>\n": "<p>\u91cf\u5b50\u5316\u3055\u308c\u305f\u8868\u73fe\u304b\u3089\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u306b\u30de\u30c3\u30d4\u30f3\u30b0</p>\n",
 "<p>Map to embedding space with a <span translate=no>_^_0_^_</span> convolution </p>\n": "<p>\u7573\u307f\u8fbc\u307f\u306b\u3088\u308b\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u306b\u30de\u30c3\u30d4\u30f3\u30b0 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Map to image space with a <span translate=no>_^_0_^_</span> convolution </p>\n": "<p>\u7573\u307f\u8fbc\u307f\u306b\u3088\u308b\u753b\u50cf\u7a7a\u9593\u306b\u30de\u30c3\u30d4\u30f3\u30b0 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Normalize <span translate=no>_^_0_^_</span> </p>\n": "<p>\u30ce\u30fc\u30de\u30e9\u30a4\u30ba <span translate=no>_^_0_^_</span></p>\n",
 "<p>Normalize and map to embedding space </p>\n": "<p>\u6b63\u898f\u5316\u3057\u3066\u57cb\u3081\u8fbc\u307f\u30b9\u30da\u30fc\u30b9\u306b\u30de\u30c3\u30d4\u30f3\u30b0</p>\n",
 "<p>Normalize and map to image space </p>\n": "<p>\u6b63\u898f\u5316\u3057\u3066\u753b\u50cf\u7a7a\u9593\u306b\u30de\u30c3\u30d4\u30f3\u30b0</p>\n",
 "<p>Number of blocks of different resolutions. The resolution is halved at the end each top level block </p>\n": "<p>\u89e3\u50cf\u5ea6\u306e\u7570\u306a\u308b\u30d6\u30ed\u30c3\u30af\u6570\u3002\u89e3\u50cf\u5ea6\u306f\u3001\u5404\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u30d6\u30ed\u30c3\u30af\u306e\u6700\u5f8c\u3067\u534a\u5206\u306b\u306a\u308a\u307e\u3059</p>\u3002\n",
 "<p>Number of channels in each top level block </p>\n": "<p>\u5404\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u30d6\u30ed\u30c3\u30af\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570</p>\n",
 "<p>Number of channels in each top level block, in the reverse order </p>\n": "<p>\u5404\u6700\u4e0a\u4f4d\u30d6\u30ed\u30c3\u30af\u5185\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570 (\u9006\u9806)</p>\n",
 "<p>Number of channels in the top-level block </p>\n": "<p>\u6700\u4e0a\u4f4d\u30d6\u30ed\u30c3\u30af\u5185\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570</p>\n",
 "<p>Prepend to be consistent with the checkpoint </p>\n": "<p>\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3068\u4e00\u81f4\u3059\u308b\u3088\u3046\u306b\u30d7\u30ea\u30da\u30f3\u30c9\u3092\u4ed8\u3051\u308b</p>\n",
 "<p>Query, key and value mappings </p>\n": "<p>\u30af\u30a8\u30ea\u3001\u30ad\u30fc\u3001\u5024\u306e\u30de\u30c3\u30d4\u30f3\u30b0</p>\n",
 "<p>ResNet Blocks </p>\n": "<p>ResNet \u30d6\u30ed\u30c3\u30af</p>\n",
 "<p>ResNet blocks with attention </p>\n": "<p>ResNet \u30d6\u30ed\u30c3\u30af\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981</p>\n",
 "<p>Reshape back to <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5f62\u72b6\u3092\u5909\u3048\u3066\u5143\u306b\u623b\u3059 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Reshape to query, key and vector embeedings from <span translate=no>_^_0_^_</span> to <span translate=no>_^_1_^_</span> </p>\n": "<p>\u5f62\u72b6\u3092\u5909\u3048\u3066\u30af\u30a8\u30ea\u3001\u30ad\u30fc\u3001\u30d9\u30af\u30bf\u30fc\u306e\u57cb\u3081\u8fbc\u307f\u3092\u304b\u3089\u3078 <span translate=no>_^_0_^_</span> <span translate=no>_^_1_^_</span></p>\n",
 "<p>Return the distribution </p>\n": "<p>\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u8fd4\u3059</p>\n",
 "<p>Sample from the distribution </p>\n": "<p>\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u306e\u30b5\u30f3\u30d7\u30eb</p>\n",
 "<p>Second normalization and convolution layer </p>\n": "<p>2 \u756a\u76ee\u306e\u6b63\u898f\u5316\u3068\u7573\u307f\u8fbc\u307f\u5c64</p>\n",
 "<p>Split mean and log of variance </p>\n": "<p>\u5206\u5272\u5e73\u5747\u3068\u5206\u6563\u5bfe\u6570</p>\n",
 "<p>Top-level block </p>\n": "<p>\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u30d6\u30ed\u30c3\u30af</p>\n",
 "<p>Top-level blocks </p>\n": "<p>\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u30d6\u30ed\u30c3\u30af</p>\n",
 "<p>Up-sample by a factor of <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6b21\u306e\u500d\u307e\u3067\u306e\u30a2\u30c3\u30d7\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Up-sampling </p>\n": "<p>\u30a2\u30c3\u30d7\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0</p>\n",
 "<p>Up-sampling at the end of each top level block except the first </p>\n": "<p>\u6700\u521d\u306e\u30d6\u30ed\u30c3\u30af\u3092\u9664\u304f\u5404\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u30d6\u30ed\u30c3\u30af\u306e\u6700\u5f8c\u3067\u306e\u30a2\u30c3\u30d7\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0</p>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  are the means and log of variances of the embedding of shape  <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u306f\u56f3\u5f62\u306e\u57cb\u3081\u8fbc\u307f\u306e\u5e73\u5747\u3068\u5206\u6563\u306e\u5bfe\u6570\u3067\u3059 <span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the embedding tensor with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u5f62\u72b6\u4ed8\u304d\u306e\u57cb\u3081\u8fbc\u307f\u30c6\u30f3\u30bd\u30eb\u3067\u3059 <span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the encoder </li>\n<li><span translate=no>_^_1_^_</span>  is the decoder </li>\n<li><span translate=no>_^_2_^_</span>  is the number of dimensions in the quantized embedding space </li>\n<li><span translate=no>_^_3_^_</span>  is the number of channels in the embedding space</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u306f\u30a8\u30f3\u30b3\u30fc\u30c0\u3067\u3059</li>\n<li><span translate=no>_^_1_^_</span>\u30c7\u30b3\u30fc\u30c0\u3067\u3059</li>\n<li><span translate=no>_^_2_^_</span>\u306f\u91cf\u5b50\u5316\u3055\u308c\u305f\u57cb\u3081\u8fbc\u307f\u7a7a\u9593\u306e\u6b21\u5143\u6570\u3067\u3059</li>\n<li><span translate=no>_^_3_^_</span>\u306f\u57cb\u3081\u8fbc\u307f\u30b9\u30da\u30fc\u30b9\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u3067\u3059</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the image tensor with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u5f62\u72b6\u306e\u3042\u308b\u30a4\u30e1\u30fc\u30b8\u30c6\u30f3\u30bd\u30eb\u3067\u3059 <span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the input feature map with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u5f62\u72b6\u4ed8\u304d\u306e\u5165\u529b\u30d5\u30a3\u30fc\u30c1\u30e3\u30de\u30c3\u30d7\u3067\u3059 <span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the number of channels in the final convolution layer </li>\n<li><span translate=no>_^_1_^_</span>  are the multiplicative factors for the number of channels in the  previous blocks, in reverse order </li>\n<li><span translate=no>_^_2_^_</span>  is the number of resnet layers at each resolution </li>\n<li><span translate=no>_^_3_^_</span>  is the number of channels in the image </li>\n<li><span translate=no>_^_4_^_</span>  is the number of channels in the embedding space</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u306f\u6700\u5f8c\u306e\u7573\u307f\u8fbc\u307f\u5c64\u306e\u30c1\u30e3\u30cd\u30eb\u6570\u3067\u3059</li>\n<li><span translate=no>_^_1_^_</span>\u524d\u306e\u30d6\u30ed\u30c3\u30af\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u306e\u4e57\u7b97\u4fc2\u6570 (\u9006\u9806)</li>\n<li><span translate=no>_^_2_^_</span>\u306f\u5404\u89e3\u50cf\u5ea6\u3067\u306e\u518d\u30cd\u30c3\u30c8\u5c64\u306e\u6570\u3067\u3059</li>\n<li><span translate=no>_^_3_^_</span>\u306f\u753b\u50cf\u5185\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570</li>\n<li><span translate=no>_^_4_^_</span>\u306f\u57cb\u3081\u8fbc\u307f\u30b9\u30da\u30fc\u30b9\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u3067\u3059</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the number of channels in the first convolution layer </li>\n<li><span translate=no>_^_1_^_</span>  are the multiplicative factors for the number of channels in the  subsequent blocks </li>\n<li><span translate=no>_^_2_^_</span>  is the number of resnet layers at each resolution </li>\n<li><span translate=no>_^_3_^_</span>  is the number of channels in the image </li>\n<li><span translate=no>_^_4_^_</span>  is the number of channels in the embedding space</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u306f\u6700\u521d\u306e\u7573\u307f\u8fbc\u307f\u5c64\u306e\u30c1\u30e3\u30cd\u30eb\u6570\u3067\u3059</li>\n<li><span translate=no>_^_1_^_</span>\u306f\u5f8c\u7d9a\u306e\u30d6\u30ed\u30c3\u30af\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u306e\u4e57\u6570\u3067\u3059</li>\n<li><span translate=no>_^_2_^_</span>\u306f\u5404\u89e3\u50cf\u5ea6\u3067\u306e\u518d\u30cd\u30c3\u30c8\u5c64\u306e\u6570\u3067\u3059</li>\n<li><span translate=no>_^_3_^_</span>\u306f\u753b\u50cf\u5185\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570</li>\n<li><span translate=no>_^_4_^_</span>\u306f\u57cb\u3081\u8fbc\u307f\u30b9\u30da\u30fc\u30b9\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u3067\u3059</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the number of channels in the input </li>\n<li><span translate=no>_^_1_^_</span>  is the number of channels in the output</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u306f\u5165\u529b\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570</li>\n<li><span translate=no>_^_1_^_</span>\u306f\u51fa\u529b\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the number of channels</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u306f\u30c1\u30e3\u30cd\u30eb\u6570</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the tensor of shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u5f62\u72b6\u306e\u30c6\u30f3\u30bd\u30eb\u3067\u3059 <span translate=no>_^_1_^_</span></li></ul>\n",
 "Annotated PyTorch implementation/tutorial of the autoencoder for stable diffusion.": "\u5b89\u5b9a\u3057\u305f\u62e1\u6563\u306e\u305f\u3081\u306e\u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\u30fc\u306e\u6ce8\u91c8\u4ed8\u304dPyTorch\u5b9f\u88c5/\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3002",
 "Autoencoder for Stable Diffusion": "\u5b89\u5b9a\u3057\u305f\u62e1\u6563\u3092\u5b9f\u73fe\u3059\u308b\u30aa\u30fc\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\u30fc"
}