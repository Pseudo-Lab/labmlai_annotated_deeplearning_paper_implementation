{
 "<h1>Autoencoder for <a href=\"../index.html\">Stable Diffusion</a></h1>\n<p>This implements the auto-encoder model used to map between image space and latent space.</p>\n<p>We have kept to the model definition and naming unchanged from <a href=\"https://github.com/CompVis/stable-diffusion\">CompVis/stable-diffusion</a> so that we can load the checkpoints directly.</p>\n": "<h1>\u7528\u4e8e<a href=\"../index.html\">\u7a33\u5b9a\u6269\u6563</a>\u7684\u81ea\u52a8\u7f16\u7801\u5668</h1>\n<p>\u8fd9\u5b9e\u73b0\u4e86\u7528\u4e8e\u5728\u56fe\u50cf\u7a7a\u95f4\u548c\u6f5c\u5728\u7a7a\u95f4\u4e4b\u95f4\u8fdb\u884c\u6620\u5c04\u7684\u81ea\u52a8\u7f16\u7801\u5668\u6a21\u578b\u3002</p>\n<p>\u6211\u4eec\u4fdd\u6301\u4e86 <a href=\"https://github.com/CompVis/stable-diffusion\">compvis/Stable-Difusi</a> on \u7684\u6a21\u578b\u5b9a\u4e49\u548c\u547d\u540d\u4e0d\u53d8\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u52a0\u8f7d\u68c0\u67e5\u70b9\u3002</p>\n",
 "<h2>Attention block</h2>\n": "<h2>\u6ce8\u610f\u65b9\u5757</h2>\n",
 "<h2>Autoencoder</h2>\n<p>This consists of the encoder and decoder modules.</p>\n": "<h2>\u81ea\u52a8\u7f16\u7801\u5668</h2>\n<p>\u5b83\u7531\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\u6a21\u5757\u7ec4\u6210\u3002</p>\n",
 "<h2>Decoder module</h2>\n": "<h2>\u89e3\u7801\u5668\u6a21\u5757</h2>\n",
 "<h2>Down-sampling layer</h2>\n": "<h2>\u5411\u4e0b\u91c7\u6837\u5c42</h2>\n",
 "<h2>Encoder module</h2>\n": "<h2>\u7f16\u7801\u5668\u6a21\u5757</h2>\n",
 "<h2>Gaussian Distribution</h2>\n": "<h2>\u9ad8\u65af\u5206\u5e03</h2>\n",
 "<h2>ResNet Block</h2>\n": "<h2>ResNet \u533a\u5757</h2>\n",
 "<h2>Up-sampling layer</h2>\n": "<h2>\u5411\u4e0a\u91c7\u6837\u5c42</h2>\n",
 "<h3>Decode images from latent representation</h3>\n<ul><li><span translate=no>_^_0_^_</span>  is the latent representation with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<h3>\u4ece\u6f5c\u5728\u8868\u73b0\u4e2d\u89e3\u7801\u56fe\u50cf</h3>\n<ul><li><span translate=no>_^_0_^_</span>\u662f\u5e26\u6709\u5f62\u72b6\u7684\u6f5c\u5728\u8868\u793a\u5f62\u5f0f<span translate=no>_^_1_^_</span></li></ul>\n",
 "<h3>Encode images to latent representation</h3>\n<ul><li><span translate=no>_^_0_^_</span>  is the image tensor with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<h3>\u5c06\u56fe\u50cf\u7f16\u7801\u4e3a\u6f5c\u5728\u8868\u793a</h3>\n<ul><li><span translate=no>_^_0_^_</span>\u662f\u5e26\u6709\u5f62\u72b6\u7684\u56fe\u50cf\u5f20\u91cf<span translate=no>_^_1_^_</span></li></ul>\n",
 "<h3>Group normalization</h3>\n<p>This is a helper function, with fixed number of groups and <span translate=no>_^_0_^_</span>.</p>\n": "<h3>\u7fa4\u7ec4\u6807\u51c6\u5316</h3>\n<p>\u8fd9\u662f\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570\uff0c\u5177\u6709\u56fa\u5b9a\u6570\u91cf\u7684\u7ec4\u548c<span translate=no>_^_0_^_</span>\u3002</p>\n",
 "<h3>Swish activation</h3>\n<p><span translate=no>_^_0_^_</span></p>\n": "<h3>Swish \u6fc0\u6d3b</h3>\n<p><span translate=no>_^_0_^_</span></p>\n",
 "<p> </p>\n": "<p></p>\n",
 "<p><span translate=no>_^_0_^_</span> convolution mapping </p>\n": "<p><span translate=no>_^_0_^_</span>\u5377\u79ef\u6620\u5c04</p>\n",
 "<p><span translate=no>_^_0_^_</span> convolution with stride length of <span translate=no>_^_1_^_</span> to down-sample by a factor of <span translate=no>_^_2_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span>\u5377\u79ef\uff0c\u6b65\u957f\u4e3a<span translate=no>_^_1_^_</span>\u5411\u4e0b\u91c7\u6837\u7684\u7cfb\u6570\u4e3a<span translate=no>_^_2_^_</span></p>\n",
 "<p><span translate=no>_^_0_^_</span> to <span translate=no>_^_1_^_</span> mapping layer for residual connection </p>\n": "<p><span translate=no>_^_0_^_</span>\u5230\u5269\u4f59\u8fde\u63a5\u7684<span translate=no>_^_1_^_</span>\u6620\u5c04\u5c42</p>\n",
 "<p>Add ResNet Blocks </p>\n": "<p>\u6dfb\u52a0 ResNet \u533a\u5757</p>\n",
 "<p>Add padding </p>\n": "<p>\u6dfb\u52a0\u5185\u8fb9\u8ddd</p>\n",
 "<p>Add residual connection </p>\n": "<p>\u6dfb\u52a0\u5269\u4f59\u8fde\u63a5</p>\n",
 "<p>Apply convolution </p>\n": "<p>\u5e94\u7528\u5377\u79ef</p>\n",
 "<p>Attention scaling factor </p>\n": "<p>\u6ce8\u610f\u529b\u7f29\u653e\u7cfb\u6570</p>\n",
 "<p>Calculate standard deviation </p>\n": "<p>\u8ba1\u7b97\u6807\u51c6\u5dee</p>\n",
 "<p>Clamp the log of variances </p>\n": "<p>\u9650\u5236\u65b9\u5dee\u65e5\u5fd7</p>\n",
 "<p>Compute <span translate=no>_^_0_^_</span> </p>\n": "<p>\u8ba1\u7b97<span translate=no>_^_0_^_</span></p>\n",
 "<p>Convolution to map from embedding space to quantized embedding space moments (mean and log variance) </p>\n": "<p>\u4ece\u5d4c\u5165\u7a7a\u95f4\u5230\u91cf\u5316\u5d4c\u5165\u7a7a\u95f4\u77e9\u7684\u5377\u79ef\u5230\u6620\u5c04\uff08\u5747\u503c\u548c\u5bf9\u6570\u65b9\u5dee\uff09</p>\n",
 "<p>Convolution to map from quantized embedding space back to embedding space </p>\n": "<p>\u5377\u79ef\u5c06\u4ece\u91cf\u5316\u5d4c\u5165\u7a7a\u95f4\u6620\u5c04\u56de\u5d4c\u5165\u7a7a\u95f4</p>\n",
 "<p>Create top-level blocks </p>\n": "<p>\u521b\u5efa\u9876\u7ea7\u533a\u5757</p>\n",
 "<p>Decode the image of shape <span translate=no>_^_0_^_</span> </p>\n": "<p>\u89e3\u7801\u5f62\u72b6\u7684\u56fe\u50cf<span translate=no>_^_0_^_</span></p>\n",
 "<p>Down-sampling </p>\n": "<p>\u5411\u4e0b\u91c7\u6837</p>\n",
 "<p>Down-sampling at the end of each top level block except the last </p>\n": "<p>\u5728\u6bcf\u4e2a\u9876\u7ea7\u533a\u5757\u7684\u672b\u5c3e\u5904\u5411\u4e0b\u91c7\u6837\uff08\u6700\u540e\u4e00\u4e2a\u533a\u5757\u9664\u5916\uff09</p>\n",
 "<p>Each top level block consists of multiple ResNet Blocks and down-sampling </p>\n": "<p>\u6bcf\u4e2a\u9876\u7ea7\u533a\u5757\u7531\u591a\u4e2a ResNet \u6a21\u5757\u548c\u5411\u4e0b\u91c7\u6837\u7ec4\u6210</p>\n",
 "<p>Each top level block consists of multiple ResNet Blocks and up-sampling </p>\n": "<p>\u6bcf\u4e2a\u9876\u7ea7\u533a\u5757\u7531\u591a\u4e2a ResNet \u6a21\u5757\u548c\u5411\u4e0a\u91c7\u6837\u7ec4\u6210</p>\n",
 "<p>Final <span translate=no>_^_0_^_</span> convolution layer </p>\n": "<p>\u6700\u7ec8<span translate=no>_^_0_^_</span>\u5377\u79ef\u5c42</p>\n",
 "<p>Final ResNet blocks with attention </p>\n": "<p>\u6700\u540e\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684 ResNet \u5c01\u9501</p>\n",
 "<p>First normalization and convolution layer </p>\n": "<p>\u7b2c\u4e00\u4e2a\u5f52\u4e00\u5316\u548c\u5377\u79ef\u5c42</p>\n",
 "<p>Get embeddings with shape <span translate=no>_^_0_^_</span> </p>\n": "<p>\u83b7\u53d6\u5e26\u6709\u5f62\u72b6\u7684\u5d4c\u5165\u7269<span translate=no>_^_0_^_</span></p>\n",
 "<p>Get query, key and vector embeddings </p>\n": "<p>\u83b7\u53d6\u67e5\u8be2\u3001\u952e\u548c\u5411\u91cf\u5d4c\u5165</p>\n",
 "<p>Get the moments in the quantized embedding space </p>\n": "<p>\u83b7\u53d6\u91cf\u5316\u5d4c\u5165\u7a7a\u95f4\u4e2d\u7684\u77ac\u95f4</p>\n",
 "<p>Group normalization </p>\n": "<p>\u7fa4\u7ec4\u6807\u51c6\u5316</p>\n",
 "<p>Initial <span translate=no>_^_0_^_</span> convolution layer that maps the embedding space to <span translate=no>_^_1_^_</span> </p>\n": "<p>\u5c06\u5d4c\u5165\u7a7a\u95f4\u6620\u5c04\u5230\u7684\u521d\u59cb<span translate=no>_^_0_^_</span>\u5377\u79ef\u5c42<span translate=no>_^_1_^_</span></p>\n",
 "<p>Initial <span translate=no>_^_0_^_</span> convolution layer that maps the image to <span translate=no>_^_1_^_</span> </p>\n": "<p>\u5c06\u56fe\u50cf\u6620\u5c04\u5230\u7684\u521d\u59cb<span translate=no>_^_0_^_</span>\u5377\u79ef\u5c42<span translate=no>_^_1_^_</span></p>\n",
 "<p>List of top-level blocks </p>\n": "<p>\u9876\u7ea7\u533a\u5757\u5217\u8868</p>\n",
 "<p>Map and add residual </p>\n": "<p>\u6620\u5c04\u5e76\u6dfb\u52a0\u6b8b\u5dee</p>\n",
 "<p>Map to <span translate=no>_^_0_^_</span> with the initial convolution </p>\n": "<p><span translate=no>_^_0_^_</span>\u4f7f\u7528\u521d\u59cb\u5377\u79ef\u6620\u5c04\u5230</p>\n",
 "<p>Map to embedding space from the quantized representation </p>\n": "<p>\u4ece\u91cf\u5316\u8868\u793a\u6620\u5c04\u5230\u5d4c\u5165\u7a7a\u95f4</p>\n",
 "<p>Map to embedding space with a <span translate=no>_^_0_^_</span> convolution </p>\n": "<p>\u7528<span translate=no>_^_0_^_</span>\u5377\u79ef\u6620\u5c04\u5230\u5d4c\u5165\u7a7a\u95f4</p>\n",
 "<p>Map to image space with a <span translate=no>_^_0_^_</span> convolution </p>\n": "<p>\u4f7f\u7528<span translate=no>_^_0_^_</span>\u5377\u79ef\u6620\u5c04\u5230\u56fe\u50cf\u7a7a\u95f4</p>\n",
 "<p>Normalize <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6807\u51c6\u5316<span translate=no>_^_0_^_</span></p>\n",
 "<p>Normalize and map to embedding space </p>\n": "<p>\u5f52\u4e00\u5316\u5e76\u6620\u5c04\u5230\u5d4c\u5165\u7a7a\u95f4</p>\n",
 "<p>Normalize and map to image space </p>\n": "<p>\u5f52\u4e00\u5316\u5e76\u6620\u5c04\u5230\u56fe\u50cf\u7a7a\u95f4</p>\n",
 "<p>Number of blocks of different resolutions. The resolution is halved at the end each top level block </p>\n": "<p>\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u533a\u5757\u6570\u3002\u6bcf\u4e2a\u9876\u5c42\u65b9\u5757\u7684\u7ed3\u5c3e\u5904\u5206\u8fa8\u7387\u51cf\u534a</p>\n",
 "<p>Number of channels in each top level block </p>\n": "<p>\u6bcf\u4e2a\u9876\u7ea7\u533a\u5757\u4e2d\u7684\u9891\u9053\u6570</p>\n",
 "<p>Number of channels in each top level block, in the reverse order </p>\n": "<p>\u6bcf\u4e2a\u9876\u7ea7\u5757\u4e2d\u7684\u901a\u9053\u6570\uff0c\u6309\u76f8\u53cd\u987a\u5e8f\u6392\u5217</p>\n",
 "<p>Number of channels in the top-level block </p>\n": "<p>\u9876\u7ea7\u533a\u5757\u4e2d\u7684\u9891\u9053\u6570</p>\n",
 "<p>Prepend to be consistent with the checkpoint </p>\n": "<p>\u9884\u5148\u8bbe\u7f6e\u4ee5\u4e0e\u68c0\u67e5\u70b9\u4fdd\u6301\u4e00\u81f4</p>\n",
 "<p>Query, key and value mappings </p>\n": "<p>\u67e5\u8be2\u3001\u952e\u548c\u503c\u6620\u5c04</p>\n",
 "<p>ResNet Blocks </p>\n": "<p>ResNet \u533a\u5757</p>\n",
 "<p>ResNet blocks with attention </p>\n": "<p>ResNet \u8981\u6ce8\u610f\u5c01\u9501</p>\n",
 "<p>Reshape back to <span translate=no>_^_0_^_</span> </p>\n": "<p>\u91cd\u5851\u56de\u539f\u72b6<span translate=no>_^_0_^_</span></p>\n",
 "<p>Reshape to query, key and vector embeedings from <span translate=no>_^_0_^_</span> to <span translate=no>_^_1_^_</span> </p>\n": "<p>\u91cd\u5851\u4e3a\u67e5\u8be2\uff0c\u952e\u5d4c\u5165\u548c\u5411\u91cf\u5d4c\u5165\u4ece<span translate=no>_^_0_^_</span>\u4e3a<span translate=no>_^_1_^_</span></p>\n",
 "<p>Return the distribution </p>\n": "<p>\u8fd4\u56de\u5206\u5e03</p>\n",
 "<p>Sample from the distribution </p>\n": "<p>\u6765\u81ea\u5206\u5e03\u7684\u6837\u672c</p>\n",
 "<p>Second normalization and convolution layer </p>\n": "<p>\u7b2c\u4e8c\u4e2a\u5f52\u4e00\u5316\u548c\u5377\u79ef\u5c42</p>\n",
 "<p>Split mean and log of variance </p>\n": "<p>\u5206\u5272\u5747\u503c\u548c\u65b9\u5dee\u5bf9\u6570</p>\n",
 "<p>Top-level block </p>\n": "<p>\u9876\u7ea7\u533a\u5757</p>\n",
 "<p>Top-level blocks </p>\n": "<p>\u9876\u7ea7\u533a\u5757</p>\n",
 "<p>Up-sample by a factor of <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6309\u7cfb\u6570\u5411\u4e0a\u91c7\u6837<span translate=no>_^_0_^_</span></p>\n",
 "<p>Up-sampling </p>\n": "<p>\u5411\u4e0a\u91c7\u6837</p>\n",
 "<p>Up-sampling at the end of each top level block except the first </p>\n": "<p>\u5728\u6bcf\u4e2a\u9876\u7ea7\u533a\u5757\u7684\u7ed3\u5c3e\u5904\u5411\u4e0a\u91c7\u6837\uff08\u7b2c\u4e00\u4e2a\u9664\u5916\uff09</p>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  are the means and log of variances of the embedding of shape  <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u5f62\u72b6\u5d4c\u5165\u7684\u65b9\u5dee\u7684\u5747\u503c\u548c\u5bf9\u6570<span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the embedding tensor with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u5e26\u6709\u5f62\u72b6\u7684\u5d4c\u5165\u5f20\u91cf<span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the encoder </li>\n<li><span translate=no>_^_1_^_</span>  is the decoder </li>\n<li><span translate=no>_^_2_^_</span>  is the number of dimensions in the quantized embedding space </li>\n<li><span translate=no>_^_3_^_</span>  is the number of channels in the embedding space</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u7f16\u7801\u5668</li>\n<li><span translate=no>_^_1_^_</span>\u662f\u89e3\u7801\u5668</li>\n<li><span translate=no>_^_2_^_</span>\u662f\u91cf\u5316\u5d4c\u5165\u7a7a\u95f4\u4e2d\u7684\u7ef4\u6570</li>\n<li><span translate=no>_^_3_^_</span>\u662f\u5d4c\u5165\u7a7a\u95f4\u4e2d\u7684\u901a\u9053\u6570</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the image tensor with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u5e26\u6709\u5f62\u72b6\u7684\u56fe\u50cf\u5f20\u91cf<span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the input feature map with shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u5e26\u6709\u5f62\u72b6\u7684\u8f93\u5165\u8981\u7d20\u56fe<span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the number of channels in the final convolution layer </li>\n<li><span translate=no>_^_1_^_</span>  are the multiplicative factors for the number of channels in the  previous blocks, in reverse order </li>\n<li><span translate=no>_^_2_^_</span>  is the number of resnet layers at each resolution </li>\n<li><span translate=no>_^_3_^_</span>  is the number of channels in the image </li>\n<li><span translate=no>_^_4_^_</span>  is the number of channels in the embedding space</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u6700\u7ec8\u5377\u79ef\u5c42\u4e2d\u7684\u901a\u9053\u6570</li>\n<li><span translate=no>_^_1_^_</span>\u662f\u524d\u9762\u533a\u5757\u4e2d\u4fe1\u9053\u6570\u7684\u4e58\u6cd5\u56e0\u5b50\uff0c\u987a\u5e8f\u76f8\u53cd</li>\n<li><span translate=no>_^_2_^_</span>\u662f\u6bcf\u79cd\u5206\u8fa8\u7387\u4e0b\u7684 resnet \u5c42\u6570</li>\n<li><span translate=no>_^_3_^_</span>\u662f\u56fe\u50cf\u4e2d\u7684\u901a\u9053\u6570</li>\n<li><span translate=no>_^_4_^_</span>\u662f\u5d4c\u5165\u7a7a\u95f4\u4e2d\u7684\u901a\u9053\u6570</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the number of channels in the first convolution layer </li>\n<li><span translate=no>_^_1_^_</span>  are the multiplicative factors for the number of channels in the  subsequent blocks </li>\n<li><span translate=no>_^_2_^_</span>  is the number of resnet layers at each resolution </li>\n<li><span translate=no>_^_3_^_</span>  is the number of channels in the image </li>\n<li><span translate=no>_^_4_^_</span>  is the number of channels in the embedding space</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u7b2c\u4e00\u4e2a\u5377\u79ef\u5c42\u4e2d\u7684\u901a\u9053\u6570</li>\n<li><span translate=no>_^_1_^_</span>\u662f\u540e\u7eed\u533a\u7ec4\u4e2d\u4fe1\u9053\u6570\u91cf\u7684\u4e58\u6cd5\u56e0\u5b50</li>\n<li><span translate=no>_^_2_^_</span>\u662f\u6bcf\u79cd\u5206\u8fa8\u7387\u4e0b\u7684 resnet \u5c42\u6570</li>\n<li><span translate=no>_^_3_^_</span>\u662f\u56fe\u50cf\u4e2d\u7684\u901a\u9053\u6570</li>\n<li><span translate=no>_^_4_^_</span>\u662f\u5d4c\u5165\u7a7a\u95f4\u4e2d\u7684\u901a\u9053\u6570</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the number of channels in the input </li>\n<li><span translate=no>_^_1_^_</span>  is the number of channels in the output</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u8f93\u5165\u4e2d\u7684\u901a\u9053\u6570</li>\n<li><span translate=no>_^_1_^_</span>\u662f\u8f93\u51fa\u4e2d\u7684\u901a\u9053\u6570</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the number of channels</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u9891\u9053\u6570</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span>  is the tensor of shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u5f62\u72b6\u7684\u5f20\u91cf<span translate=no>_^_1_^_</span></li></ul>\n",
 "Annotated PyTorch implementation/tutorial of the autoencoder for stable diffusion.": "\u5e26\u6709\u6ce8\u91ca\u7684\u81ea\u52a8\u7f16\u7801\u5668\u7684 PyTorch \u5b9e\u73b0/\u6559\u7a0b\uff0c\u7528\u4e8e\u7a33\u5b9a\u6269\u6563\u3002",
 "Autoencoder for Stable Diffusion": "\u7528\u4e8e\u7a33\u5b9a\u6269\u6563\u7684\u81ea\u52a8\u7f16\u7801\u5668"
}