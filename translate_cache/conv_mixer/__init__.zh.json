{
 "<h1>Patches Are All You Need? (ConvMixer)</h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of the paper <a href=\"https://papers.labml.ai/paper/2201.09792\">Patches Are All You Need?</a>.</p>\n<p><span translate=no>_^_0_^_</span></p>\n<p>ConvMixer is Similar to <a href=\"../transformers/mlp_mixer/index.html\">MLP-Mixer</a>. MLP-Mixer separates mixing of spatial and channel dimensions, by applying an MLP across spatial dimension and then an MLP across the channel dimension (spatial MLP replaces the <a href=\"../transformers/vit/index.html\">ViT</a> attention and channel MLP is the <a href=\"../transformers/feed_forward.html\">FFN</a> of ViT).</p>\n<p>ConvMixer uses a <span translate=no>_^_1_^_</span> convolution for channel mixing and a depth-wise convolution for spatial mixing. Since it&#x27;s a convolution instead of a full MLP across the space, it mixes only the nearby batches in contrast to ViT or MLP-Mixer. Also, the MLP-mixer uses MLPs of two layers for each mixing and ConvMixer uses a single layer for each mixing.</p>\n<p>The paper recommends removing the residual connection across the channel mixing (point-wise convolution) and having only a residual connection over the spatial mixing (depth-wise convolution). They also use <a href=\"../normalization/batch_norm/index.html\">Batch normalization</a> instead of <a href=\"../normalization/layer_norm/index.html\">Layer normalization</a>.</p>\n<p>Here&#x27;s <a href=\"experiment.html\">an experiment</a> that trains ConvMixer on CIFAR-10.</p>\n": "<h1>\u4f60\u53ea\u9700\u8981\u8865\u4e01\u5417\uff1f\uff08convMixer\uff09</h1>\n<p>\u8fd9\u662f <a href=\"https://pytorch.org\">PyTorch</a> \u5bf9\u8bba\u6587\u300a<a href=\"https://papers.labml.ai/paper/2201.09792\">\u8865\u4e01\u5c31\u662f\u4f60\u6240\u9700\u8981\u7684\uff1f</a>\u300b\u7684\u5b9e\u73b0</p>\u3002\n<p><span translate=no>_^_0_^_</span></p>\n<p>convMixer \u7c7b\u4f3c\u4e8e <a href=\"../transformers/mlp_mixer/index.html\">MLP \u6df7\u97f3\u5668</a>\u3002MLP-Mixer \u901a\u8fc7\u5728\u7a7a\u95f4\u7ef4\u5ea6\u4e0a\u5e94\u7528 MLP\uff0c\u7136\u540e\u5728\u4fe1\u9053\u7ef4\u5ea6\u4e0a\u5e94\u7528 MLP \u6765\u5206\u79bb\u7a7a\u95f4\u7ef4\u5ea6\u548c\u4fe1\u9053\u7ef4\u5ea6\u7684\u6df7\u97f3\uff08\u7a7a\u95f4 MLP \u53d6\u4ee3 <a href=\"../transformers/vit/index.html\">vIT</a> \u6ce8\u610f\u529b\uff0c\u4fe1\u9053 MLP \u662f ViT \u7684 <a href=\"../transformers/feed_forward.html\">FFN</a>\uff09\u3002</p>\n<p>ConvMixer \u4f7f\u7528<span translate=no>_^_1_^_</span>\u5377\u79ef\u8fdb\u884c\u901a\u9053\u6df7\u5408\uff0c\u4f7f\u7528\u6df1\u5ea6\u5377\u79ef\u8fdb\u884c\u7a7a\u95f4\u6df7\u5408\u3002\u7531\u4e8e\u5b83\u662f\u5377\u79ef\u800c\u4e0d\u662f\u6574\u4e2a\u7a7a\u95f4\u7684\u5b8c\u6574\u7684 MLP\uff0c\u56e0\u6b64\u4e0e vIT \u6216 MLP-Mixer \u76f8\u6bd4\uff0c\u5b83\u53ea\u6df7\u5408\u9644\u8fd1\u7684\u6279\u6b21\u3002\u6b64\u5916\uff0cMLP-Mixer \u6bcf\u6b21\u6df7\u5408\u4f7f\u7528\u4e24\u5c42 MLP\uff0cConvMixer \u6bcf\u6b21\u6df7\u5408\u4f7f\u7528\u5355\u5c42\u3002</p>\n<p>\u8be5\u8bba\u6587\u5efa\u8bae\u5220\u9664\u4fe1\u9053\u6df7\u5408\uff08\u9010\u70b9\u5377\u79ef\uff09\u4e0a\u7684\u5269\u4f59\u8fde\u63a5\uff0c\u5728\u7a7a\u95f4\u6df7\u5408\uff08\u6df1\u5ea6\u5377\u79ef\uff09\u4e0a\u4ec5\u4f7f\u7528\u6b8b\u5dee\u8fde\u63a5\u3002\u4ed6\u4eec\u8fd8\u4f7f\u7528<a href=\"../normalization/batch_norm/index.html\">\u6279\u91cf\u6807\u51c6\u5316</a>\u800c\u4e0d\u662f<a href=\"../normalization/layer_norm/index.html\">\u56fe\u5c42\u6807\u51c6\u5316</a>\u3002</p>\n<p>\u8fd9\u662f<a href=\"experiment.html\">\u4e00\u9879\u5728 CIFAR-10 \u4e0a\u8bad\u7ec3 ConvMixer \u7684\u5b9e\u9a8c</a>\u3002</p>\n",
 "<h2>ConvMixer</h2>\n<p>This combines the patch embeddings block, a number of ConvMixer layers and a classification head.</p>\n": "<h2>\u6df7\u97f3\u5668</h2>\n<p>\u5b83\u7ed3\u5408\u4e86\u8865\u4e01\u5d4c\u5165\u5757\u3001\u8bb8\u591a ConvMixer \u5c42\u548c\u4e00\u4e2a\u5206\u7c7b\u5934\u3002</p>\n",
 "<p> </p>\n": "<p></p>\n",
 "<p> <a id=\"ClassificationHead\"></a></p>\n<h2>Classification Head</h2>\n<p>They do average pooling (taking the mean of all patch embeddings) and a final linear transformation to predict the log-probabilities of the image classes.</p>\n": "<p><a id=\"ClassificationHead\"></a></p>\n<h2>\u5206\u7c7b\u4e3b\u7ba1</h2>\n<p>\u5b83\u4eec\u8fdb\u884c\u5e73\u5747\u6c60\uff08\u53d6\u6240\u6709\u8865\u4e01\u5d4c\u5165\u7684\u5747\u503c\uff09\u548c\u6700\u7ec8\u7684\u7ebf\u6027\u53d8\u6362\u6765\u9884\u6d4b\u5f71\u50cf\u7c7b\u7684\u5bf9\u6570\u6982\u7387\u3002</p>\n",
 "<p> <a id=\"ConvMixerLayer\"></a></p>\n<h2>ConvMixer layer</h2>\n<p>This is a single ConvMixer layer. The model will have a series of these.</p>\n": "<p><a id=\"ConvMixerLayer\"></a></p>\n<h2>\u6df7\u97f3\u5668\u5c42</h2>\n<p>\u8fd9\u662f\u5355\u4e2a ConvMixer \u5c42\u3002\u8be5\u6a21\u578b\u5c06\u6709\u4e00\u7cfb\u5217\u8fd9\u6837\u7684\u3002</p>\n",
 "<p> <a id=\"PatchEmbeddings\"></a></p>\n<h2>Get patch embeddings</h2>\n<p>This splits the image into patches of size <span translate=no>_^_0_^_</span> and gives an embedding for each patch.</p>\n": "<p><a id=\"PatchEmbeddings\"></a></p>\n<h2>\u83b7\u53d6\u8865\u4e01\u5d4c\u5165</h2>\n<p>\u8fd9\u4f1a\u5c06\u56fe\u50cf\u62c6\u5206\u4e3a\u5927\u5c0f\u7684\u8865\u4e01\uff0c<span translate=no>_^_0_^_</span>\u5e76\u4e3a\u6bcf\u4e2a\u8865\u4e01\u63d0\u4f9b\u5d4c\u5165\u3002</p>\n",
 "<p>Activation after depth-wise convolution </p>\n": "<p>\u6df1\u5ea6\u5377\u79ef\u540e\u6fc0\u6d3b</p>\n",
 "<p>Activation after point-wise convolution </p>\n": "<p>\u9010\u70b9\u5377\u79ef\u540e\u6fc0\u6d3b</p>\n",
 "<p>Activation and normalization </p>\n": "<p>\u6fc0\u6d3b\u548c\u89c4\u8303\u5316</p>\n",
 "<p>Activation function </p>\n": "<p>\u6fc0\u6d3b\u529f\u80fd</p>\n",
 "<p>Add residual connection </p>\n": "<p>\u6dfb\u52a0\u5269\u4f59\u8fde\u63a5</p>\n",
 "<p>Apply convolution layer </p>\n": "<p>\u5e94\u7528\u5377\u79ef\u5c42</p>\n",
 "<p>Average Pool </p>\n": "<p>\u5e73\u5747\u6c60</p>\n",
 "<p>Average pooling </p>\n": "<p>\u5e73\u5747\u6c47\u96c6</p>\n",
 "<p>Batch normalization </p>\n": "<p>\u6279\u91cf\u6807\u51c6\u5316</p>\n",
 "<p>Classification head </p>\n": "<p>\u5206\u7c7b\u4e3b\u7ba1</p>\n",
 "<p>Classification head, to get logits </p>\n": "<p>\u5206\u7c7b\u5934\uff0c\u83b7\u53d6\u65e5\u5fd7</p>\n",
 "<p>Depth-wise convolution is separate convolution for each channel. We do this with a convolution layer with the number of groups equal to the number of channels. So that each channel is it&#x27;s own group. </p>\n": "<p>\u6df1\u5ea6\u5377\u79ef\u662f\u6bcf\u4e2a\u901a\u9053\u7684\u5355\u72ec\u5377\u79ef\u3002\u6211\u4eec\u4f7f\u7528\u5377\u79ef\u5c42\u6765\u5b8c\u6210\u6b64\u64cd\u4f5c\uff0c\u8be5\u5377\u79ef\u5c42\u7684\u7ec4\u6570\u7b49\u4e8e\u901a\u9053\u6570\u3002\u56e0\u6b64\uff0c\u6bcf\u4e2a\u9891\u9053\u90fd\u662f\u5b83\u81ea\u5df1\u7684\u7ec4\u3002</p>\n",
 "<p>Depth-wise convolution, activation and normalization </p>\n": "<p>\u6df1\u5ea6\u5377\u79ef\u3001\u6fc0\u6d3b\u548c\u5f52\u4e00\u5316</p>\n",
 "<p>For the residual connection around the depth-wise convolution </p>\n": "<p>\u5bf9\u4e8e\u56f4\u7ed5\u6df1\u5ea6\u5377\u79ef\u7684\u5269\u4f59\u8fde\u63a5</p>\n",
 "<p>Get patch embeddings. This gives a tensor of shape <span translate=no>_^_0_^_</span>. </p>\n": "<p>\u83b7\u53d6\u8865\u4e01\u5d4c\u5165\u3002\u8fd9\u7ed9\u51fa\u4e86\u5f62\u72b6\u7684\u5f20\u91cf<span translate=no>_^_0_^_</span>\u3002</p>\n",
 "<p>Get the embedding, <span translate=no>_^_0_^_</span> will have shape <span translate=no>_^_1_^_</span> </p>\n": "<p>\u5f97\u5230\u5d4c\u5165\uff0c<span translate=no>_^_0_^_</span>\u4f1a\u6709\u5f62\u72b6<span translate=no>_^_1_^_</span></p>\n",
 "<p>Linear layer </p>\n": "<p>\u7ebf\u6027\u5c42</p>\n",
 "<p>Make copies of the <a href=\"#ConvMixerLayer\">ConvMixer layer</a> </p>\n": "<p>\u5236\u4f5c C <a href=\"#ConvMixerLayer\">onvMixer \u56fe\u5c42</a>\u7684\u526f\u672c</p>\n",
 "<p>Normalization after depth-wise convolution </p>\n": "<p>\u6df1\u5ea6\u5377\u79ef\u540e\u7684\u5f52\u4e00\u5316</p>\n",
 "<p>Normalization after point-wise convolution </p>\n": "<p>\u9010\u70b9\u5377\u79ef\u540e\u7684\u5f52\u4e00\u5316</p>\n",
 "<p>Pass through <a href=\"#ConvMixerLayer\">ConvMixer layers</a> </p>\n": "<p>\u7a7f\u8fc7 <a href=\"#ConvMixerLayer\">ConvMixer \u56fe\u5c42</a></p>\n",
 "<p>Patch embeddings </p>\n": "<p>\u8865\u4e01\u5d4c\u5165</p>\n",
 "<p>Point-wise convolution is a <span translate=no>_^_0_^_</span> convolution. i.e. a linear transformation of patch embeddings </p>\n": "<p>\u9010\u70b9\u5377\u79ef\u662f\u4e00\u79cd<span translate=no>_^_0_^_</span>\u5377\u79ef\u3002\u5373\u8865\u4e01\u5d4c\u5165\u7684\u7ebf\u6027\u53d8\u6362</p>\n",
 "<p>Point-wise convolution, activation and normalization </p>\n": "<p>\u9010\u70b9\u5377\u79ef\u3001\u6fc0\u6d3b\u548c\u5f52\u4e00\u5316</p>\n",
 "<p>We create a convolution layer with a kernel size and and stride length equal to patch size. This is equivalent to splitting the image into patches and doing a linear transformation on each patch. </p>\n": "<p>\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5377\u79ef\u5c42\uff0c\u5176\u5185\u6838\u5927\u5c0f\u548c\u6b65\u957f\u7b49\u4e8e\u8865\u4e01\u5927\u5c0f\u3002\u8fd9\u76f8\u5f53\u4e8e\u5c06\u56fe\u50cf\u5206\u5272\u6210\u8272\u5757\u5e76\u5728\u6bcf\u4e2a\u9762\u7247\u4e0a\u8fdb\u884c\u7ebf\u6027\u53d8\u6362\u3002</p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is a copy of a single <a href=\"#ConvMixerLayer\">ConvMixer layer</a>.  We make copies of it to make ConvMixer with <span translate=no>_^_1_^_</span>. </li>\n<li><span translate=no>_^_2_^_</span> is the number of ConvMixer layers (or depth), <span translate=no>_^_3_^_</span>. </li>\n<li><span translate=no>_^_4_^_</span> is the <a href=\"#PatchEmbeddings\">patch embeddings layer</a>. </li>\n<li><span translate=no>_^_5_^_</span> is the <a href=\"#ClassificationHead\">classification head</a>.</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u5355\u4e2a C <a href=\"#ConvMixerLayer\">onvMixer \u5c42</a>\u7684\u526f\u672c\u3002\u6211\u4eec\u5236\u4f5c\u5b83\u7684\u526f\u672c\u6765\u5236\u4f5c ConvMixer<span translate=no>_^_1_^_</span>\u3002</li>\n<li><span translate=no>_^_2_^_</span>\u662f ConvMixer \u5c42\uff08\u6216\u6df1\u5ea6\uff09\u7684\u6570\u91cf<span translate=no>_^_3_^_</span>\u3002</li>\n<li><span translate=no>_^_4_^_</span>\u662f<a href=\"#PatchEmbeddings\">\u8865\u4e01\u5d4c\u5165\u5c42</a>\u3002</li>\n<li><span translate=no>_^_5_^_</span>\u662f<a href=\"#ClassificationHead\">\u5206\u7c7b\u5934</a>\u3002</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the input image of shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u5f62\u72b6\u7684\u8f93\u5165\u56fe\u50cf<span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of channels in patch embeddings <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span> is the size of the patch, <span translate=no>_^_3_^_</span> </li>\n<li><span translate=no>_^_4_^_</span> is the number of channels in the input image (3 for rgb)</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u8865\u4e01\u5d4c\u5165\u4e2d\u7684\u901a\u9053\u6570<span translate=no>_^_1_^_</span></li>\n<li><span translate=no>_^_2_^_</span>\u662f\u8865\u4e01\u7684\u5927\u5c0f\uff0c<span translate=no>_^_3_^_</span></li>\n<li><span translate=no>_^_4_^_</span>\u662f\u8f93\u5165\u56fe\u50cf\u4e2d\u7684\u901a\u9053\u6570\uff08rgb \u4e3a 3\uff09</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of channels in patch embeddings, <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span> is the number of classes in the classification task</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u8865\u4e01\u5d4c\u5165\u4e2d\u7684\u901a\u9053\u6570\uff0c<span translate=no>_^_1_^_</span></li>\n<li><span translate=no>_^_2_^_</span>\u662f\u5206\u7c7b\u4efb\u52a1\u4e2d\u7684\u7c7b\u6570</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of channels in patch embeddings, <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span> is the size of the kernel of spatial convolution, <span translate=no>_^_3_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u662f\u8865\u4e01\u5d4c\u5165\u4e2d\u7684\u901a\u9053\u6570\uff0c<span translate=no>_^_1_^_</span></li>\n<li><span translate=no>_^_2_^_</span>\u662f\u7a7a\u95f4\u5377\u79ef\u5185\u6838\u7684\u5927\u5c0f\uff0c<span translate=no>_^_3_^_</span></li></ul>\n",
 "A PyTorch implementation/tutorial of the paper \"Patches Are All You Need?\"": "\u8bba\u6587 \u201c\u8865\u4e01\u5c31\u662f\u4f60\u6240\u9700\u8981\u7684\u5417\uff1f\u201d \u7684 PyTorch \u5b9e\u73b0/\u6559\u7a0b",
 "Patches Are All You Need? (ConvMixer)": "\u8865\u4e01\u662f\u4f60\u6240\u9700\u8981\u7684\u5417\uff1f\uff08convMixer\uff09"
}