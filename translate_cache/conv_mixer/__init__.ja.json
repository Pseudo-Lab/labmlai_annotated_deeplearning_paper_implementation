{
 "<h1>Patches Are All You Need? (ConvMixer)</h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of the paper <a href=\"https://papers.labml.ai/paper/2201.09792\">Patches Are All You Need?</a>.</p>\n<p><span translate=no>_^_0_^_</span></p>\n<p>ConvMixer is Similar to <a href=\"../transformers/mlp_mixer/index.html\">MLP-Mixer</a>. MLP-Mixer separates mixing of spatial and channel dimensions, by applying an MLP across spatial dimension and then an MLP across the channel dimension (spatial MLP replaces the <a href=\"../transformers/vit/index.html\">ViT</a> attention and channel MLP is the <a href=\"../transformers/feed_forward.html\">FFN</a> of ViT).</p>\n<p>ConvMixer uses a <span translate=no>_^_1_^_</span> convolution for channel mixing and a depth-wise convolution for spatial mixing. Since it&#x27;s a convolution instead of a full MLP across the space, it mixes only the nearby batches in contrast to ViT or MLP-Mixer. Also, the MLP-mixer uses MLPs of two layers for each mixing and ConvMixer uses a single layer for each mixing.</p>\n<p>The paper recommends removing the residual connection across the channel mixing (point-wise convolution) and having only a residual connection over the spatial mixing (depth-wise convolution). They also use <a href=\"../normalization/batch_norm/index.html\">Batch normalization</a> instead of <a href=\"../normalization/layer_norm/index.html\">Layer normalization</a>.</p>\n<p>Here&#x27;s <a href=\"experiment.html\">an experiment</a> that trains ConvMixer on CIFAR-10.</p>\n": "<h1>\u5fc5\u8981\u306a\u306e\u306f\u30d1\u30c3\u30c1\u3060\u3051\uff1f(\u30b3\u30f3\u30d0\u30fc\u30b8\u30e7\u30f3\u30df\u30ad\u30b5\u30fc</h1>)\n<p><a href=\"https://pytorch.org\">\u3053\u308c\u306f\u7d19\u306e\u30d1\u30c3\u30c1\u3092PyTorch\u3067\u5b9f\u88c5\u3057\u305f\u3082\u306e\u3067\u3059</a><a href=\"https://papers.labml.ai/paper/2201.09792\">\u3002\u5fc5\u8981\u306a\u306e\u306f\u30d1\u30c3\u30c1\u3060\u3051\u3067\u3059\u304b</a>\uff1f</p>\u3002\n<p><span translate=no>_^_0_^_</span></p>\n<p><a href=\"../transformers/mlp_mixer/index.html\">ConvMixer\u306fMLP\u30df\u30ad\u30b5\u30fc\u306b\u4f3c\u3066\u3044\u307e\u3059\u3002</a></p><a href=\"../transformers/feed_forward.html\">MLP-Mixer\u306f\u3001\u7a7a\u9593\u6b21\u5143\u5168\u4f53\u306bMLP\u3092\u9069\u7528\u3057\u3001\u6b21\u306b\u30c1\u30e3\u30cd\u30eb\u6b21\u5143\u5168\u4f53\u306bMLP\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u7a7a\u9593\u6b21\u5143\u3068\u30c1\u30e3\u30cd\u30eb\u6b21\u5143\u306e\u6df7\u5408\u3092\u5206\u96e2\u3057\u307e\u3059\uff08\u7a7a\u9593MLP\u306fvIT\u306e\u30a2\u30c6\u30f3\u30b7\u30e7\u30f3\u306b\u4ee3\u308f\u308a\u3001<a href=\"../transformers/vit/index.html\">\u30c1\u30e3\u30cd\u30ebMLP\u306fVIT\u306eFFN\u3067\u3059</a>\uff09\u3002</a>\n<p>ConvMixer\u306f\u3001<span translate=no>_^_1_^_</span>\u30c1\u30e3\u30f3\u30cd\u30eb\u30df\u30ad\u30b7\u30f3\u30b0\u306b\u306f\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3001\u7a7a\u9593\u30df\u30ad\u30b7\u30f3\u30b0\u306b\u306f\u5965\u884c\u304d\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u30b9\u30da\u30fc\u30b9\u5168\u4f53\u3067\u30d5\u30ebMLP\u3067\u306f\u306a\u304f\u7573\u307f\u8fbc\u307f\u306a\u306e\u3067\u3001VIT\u3084MLP\u30df\u30ad\u30b5\u30fc\u3068\u306f\u5bfe\u7167\u7684\u306b\u3001\u8fd1\u304f\u306e\u30d0\u30c3\u30c1\u306e\u307f\u3092\u30df\u30ad\u30b7\u30f3\u30b0\u3057\u307e\u3059\u3002\u307e\u305f\u3001MLP\u30df\u30ad\u30b5\u30fc\u306f\u30df\u30ad\u30b7\u30f3\u30b0\u3054\u3068\u306b2\u5c64\u306eMLP\u3092\u4f7f\u7528\u3057\u3001ConvMixer\u306f\u30df\u30ad\u30b7\u30f3\u30b0\u3054\u3068\u306b1\u5c64\u306eMLP\u3092\u4f7f\u7528\u3057\u307e\u3059</p>\u3002\n<p>\u3053\u306e\u8ad6\u6587\u3067\u306f\u3001\u30c1\u30e3\u30cd\u30eb\u30df\u30ad\u30b7\u30f3\u30b0\u5168\u4f53\u306e\u6b8b\u7559\u63a5\u7d9a\u3092\u524a\u9664\u3057\uff08\u70b9\u5358\u4f4d\u306e\u7573\u307f\u8fbc\u307f\uff09\u3001\u7a7a\u9593\u30df\u30ad\u30b7\u30f3\u30b0\u3067\u306f\u6b8b\u7559\u63a5\u7d9a\u306e\u307f\u306b\u3059\u308b\uff08\u6df1\u3055\u65b9\u5411\u306e\u7573\u307f\u8fbc\u307f\uff09\u3053\u3068\u3092\u63a8\u5968\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001</p><a href=\"../normalization/batch_norm/index.html\"><a href=\"../normalization/layer_norm/index.html\">\u30ec\u30a4\u30e4\u30fc\u6b63\u898f\u5316\u306e\u4ee3\u308f\u308a\u306b\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u3092\u4f7f\u7528\u3057\u307e\u3059</a></a>\u3002\n<p>\u3053\u308c\u306f<a href=\"experiment.html\">\u3001CIFAR-10 \u3067 ConvMixer \u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u5b9f\u9a13\u3067\u3059</a>\u3002</p>\n",
 "<h2>ConvMixer</h2>\n<p>This combines the patch embeddings block, a number of ConvMixer layers and a classification head.</p>\n": "<h2>\u30b3\u30f3\u30d0\u30fc\u30b8\u30e7\u30f3\u30df\u30ad\u30b5\u30fc</h2>\n<p>\u3053\u308c\u306b\u3088\u308a\u3001\u30d1\u30c3\u30c1\u57cb\u3081\u8fbc\u307f\u30d6\u30ed\u30c3\u30af\u3001\u591a\u6570\u306e ConvMixer \u30ec\u30a4\u30e4\u30fc\u3001\u304a\u3088\u3073\u5206\u985e\u30d8\u30c3\u30c9\u304c\u7d44\u307f\u5408\u308f\u3055\u308c\u307e\u3059\u3002</p>\n",
 "<p> </p>\n": "<p></p>\n",
 "<p> <a id=\"ClassificationHead\"></a></p>\n<h2>Classification Head</h2>\n<p>They do average pooling (taking the mean of all patch embeddings) and a final linear transformation to predict the log-probabilities of the image classes.</p>\n": "<p><a id=\"ClassificationHead\"></a></p>\n<h2>\u5206\u985e\u8cac\u4efb\u8005</h2>\n<p>\u5e73\u5747\u30d7\u30fc\u30ea\u30f3\u30b0\uff08\u3059\u3079\u3066\u306e\u30d1\u30c3\u30c1\u57cb\u3081\u8fbc\u307f\u306e\u5e73\u5747\u3092\u53d6\u308b\uff09\u3068\u6700\u7d42\u7684\u306a\u7dda\u5f62\u5909\u63db\u3092\u884c\u3063\u3066\u3001\u753b\u50cf\u30af\u30e9\u30b9\u306e\u5bfe\u6570\u78ba\u7387\u3092\u4e88\u6e2c\u3057\u307e\u3059\u3002</p>\n",
 "<p> <a id=\"ConvMixerLayer\"></a></p>\n<h2>ConvMixer layer</h2>\n<p>This is a single ConvMixer layer. The model will have a series of these.</p>\n": "<p><a id=\"ConvMixerLayer\"></a></p>\n<h2>ConvMixer \u30ec\u30a4\u30e4\u30fc</h2>\n<p>\u3053\u308c\u306f\u5358\u4e00\u306e ConvMixer \u30ec\u30a4\u30e4\u30fc\u3067\u3059\u3002\u30e2\u30c7\u30eb\u306b\u306f\u3053\u308c\u3089\u306e\u30b7\u30ea\u30fc\u30ba\u304c\u3042\u308a\u307e\u3059\u3002</p>\n",
 "<p> <a id=\"PatchEmbeddings\"></a></p>\n<h2>Get patch embeddings</h2>\n<p>This splits the image into patches of size <span translate=no>_^_0_^_</span> and gives an embedding for each patch.</p>\n": "<p><a id=\"PatchEmbeddings\"></a></p>\n<h2>\u30d1\u30c3\u30c1\u57cb\u3081\u8fbc\u307f\u3092\u5165\u624b</h2>\n<p>\u3053\u308c\u306b\u3088\u308a\u3001<span translate=no>_^_0_^_</span>\u753b\u50cf\u304c\u8907\u6570\u306e\u30b5\u30a4\u30ba\u306e\u30d1\u30c3\u30c1\u306b\u5206\u5272\u3055\u308c\u3001\u5404\u30d1\u30c3\u30c1\u304c\u57cb\u3081\u8fbc\u307e\u308c\u307e\u3059\u3002</p>\n",
 "<p>Activation after depth-wise convolution </p>\n": "<p>\u6df1\u3055\u65b9\u5411\u306e\u7573\u307f\u8fbc\u307f\u5f8c\u306e\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30b7\u30e7\u30f3</p>\n",
 "<p>Activation after point-wise convolution </p>\n": "<p>\u70b9\u5358\u4f4d\u306e\u7573\u307f\u8fbc\u307f\u5f8c\u306e\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30b7\u30e7\u30f3</p>\n",
 "<p>Activation and normalization </p>\n": "<p>\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30b7\u30e7\u30f3\u3068\u6b63\u898f\u5316</p>\n",
 "<p>Activation function </p>\n": "<p>\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30b7\u30e7\u30f3\u6a5f\u80fd</p>\n",
 "<p>Add residual connection </p>\n": "<p>\u6b8b\u4f59\u63a5\u7d9a\u3092\u8ffd\u52a0</p>\n",
 "<p>Apply convolution layer </p>\n": "<p>\u7573\u307f\u8fbc\u307f\u5c64\u3092\u9069\u7528</p>\n",
 "<p>Average Pool </p>\n": "<p>\u30a2\u30d9\u30ec\u30fc\u30b8\u30d7\u30fc\u30eb</p>\n",
 "<p>Average pooling </p>\n": "<p>\u5e73\u5747\u30d7\u30fc\u30ea\u30f3\u30b0</p>\n",
 "<p>Batch normalization </p>\n": "<p>\u30d0\u30c3\u30c1\u6b63\u898f\u5316</p>\n",
 "<p>Classification head </p>\n": "<p>\u5206\u985e\u30d8\u30c3\u30c9</p>\n",
 "<p>Classification head, to get logits </p>\n": "<p>\u30ed\u30b8\u30c3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u5206\u985e\u30d8\u30c3\u30c9</p>\n",
 "<p>Depth-wise convolution is separate convolution for each channel. We do this with a convolution layer with the number of groups equal to the number of channels. So that each channel is it&#x27;s own group. </p>\n": "<p>\u6df1\u5ea6\u65b9\u5411\u306e\u7573\u307f\u8fbc\u307f\u306f\u3001\u30c1\u30e3\u30f3\u30cd\u30eb\u3054\u3068\u306b\u5225\u3005\u306e\u7573\u307f\u8fbc\u307f\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30b0\u30eb\u30fc\u30d7\u306e\u6570\u304c\u30c1\u30e3\u30cd\u30eb\u6570\u3068\u7b49\u3057\u3044\u7573\u307f\u8fbc\u307f\u5c64\u3067\u884c\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u5404\u30c1\u30e3\u30f3\u30cd\u30eb\u306f\u305d\u308c\u305e\u308c\u72ec\u81ea\u306e\u30b0\u30eb\u30fc\u30d7\u306b\u306a\u308a\u307e\u3059\u3002</p>\n",
 "<p>Depth-wise convolution, activation and normalization </p>\n": "<p>\u6df1\u5ea6\u65b9\u5411\u306e\u7573\u307f\u8fbc\u307f\u3001\u6d3b\u6027\u5316\u3001\u6b63\u898f\u5316</p>\n",
 "<p>For the residual connection around the depth-wise convolution </p>\n": "<p>\u6df1\u3055\u65b9\u5411\u306e\u7573\u307f\u8fbc\u307f\u306e\u5468\u308a\u306e\u6b8b\u5dee\u7d50\u5408\u306b\u3064\u3044\u3066</p>\n",
 "<p>Get patch embeddings. This gives a tensor of shape <span translate=no>_^_0_^_</span>. </p>\n": "<p>\u30d1\u30c3\u30c1\u306e\u57cb\u3081\u8fbc\u307f\u3092\u5165\u624b\u3057\u3066\u304f\u3060\u3055\u3044\u3002<span translate=no>_^_0_^_</span>\u3053\u308c\u306b\u3088\u308a\u5f62\u72b6\u306e\u30c6\u30f3\u30bd\u30eb\u304c\u5f97\u3089\u308c\u307e\u3059</p>\u3002\n",
 "<p>Get the embedding, <span translate=no>_^_0_^_</span> will have shape <span translate=no>_^_1_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span>\u57cb\u3081\u8fbc\u307f\u3092\u5165\u308c\u308b\u3068\u3001\u5f62\u304c\u6574\u3044\u307e\u3059 <span translate=no>_^_1_^_</span></p>\n",
 "<p>Linear layer </p>\n": "<p>\u30ea\u30cb\u30a2\u30ec\u30a4\u30e4\u30fc</p>\n",
 "<p>Make copies of the <a href=\"#ConvMixerLayer\">ConvMixer layer</a> </p>\n": "<p><a href=\"#ConvMixerLayer\">ConvMixer</a> \u30ec\u30a4\u30e4\u30fc\u306e\u30b3\u30d4\u30fc\u3092\u4f5c\u6210</p>\n",
 "<p>Normalization after depth-wise convolution </p>\n": "<p>\u6df1\u3055\u65b9\u5411\u306e\u7573\u307f\u8fbc\u307f\u5f8c\u306e\u6b63\u898f\u5316</p>\n",
 "<p>Normalization after point-wise convolution </p>\n": "<p>\u70b9\u5358\u4f4d\u306e\u7573\u307f\u8fbc\u307f\u5f8c\u306e\u6b63\u898f\u5316</p>\n",
 "<p>Pass through <a href=\"#ConvMixerLayer\">ConvMixer layers</a> </p>\n": "<p><a href=\"#ConvMixerLayer\">ConvMixer \u30ec\u30a4\u30e4\u30fc\u3092\u30d1\u30b9\u30b9\u30eb\u30fc\u3059\u308b</a></p>\n",
 "<p>Patch embeddings </p>\n": "<p>\u30d1\u30c3\u30c1\u57cb\u3081\u8fbc\u307f</p>\n",
 "<p>Point-wise convolution is a <span translate=no>_^_0_^_</span> convolution. i.e. a linear transformation of patch embeddings </p>\n": "<p>\u70b9\u5358\u4f4d\u306e\u7573\u307f\u8fbc\u307f\u306f\u7573\u307f\u8fbc\u307f\u3067\u3059\u3002\u3064\u307e\u308a\u3001<span translate=no>_^_0_^_</span>\u30d1\u30c3\u30c1\u57cb\u3081\u8fbc\u307f\u306e\u7dda\u5f62\u5909\u63db\u3067\u3059</p>\n",
 "<p>Point-wise convolution, activation and normalization </p>\n": "<p>\u70b9\u5358\u4f4d\u306e\u7573\u307f\u8fbc\u307f\u3001\u6d3b\u6027\u5316\u3001\u6b63\u898f\u5316</p>\n",
 "<p>We create a convolution layer with a kernel size and and stride length equal to patch size. This is equivalent to splitting the image into patches and doing a linear transformation on each patch. </p>\n": "<p>\u30ab\u30fc\u30cd\u30eb\u30b5\u30a4\u30ba\u3067\u30b9\u30c8\u30e9\u30a4\u30c9\u306e\u9577\u3055\u304c\u30d1\u30c3\u30c1\u30b5\u30a4\u30ba\u3068\u540c\u3058\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u753b\u50cf\u3092\u30d1\u30c3\u30c1\u306b\u5206\u5272\u3057\u3001\u5404\u30d1\u30c3\u30c1\u3067\u7dda\u5f62\u5909\u63db\u3092\u884c\u3046\u306e\u3068\u540c\u3058\u3067\u3059</p>\u3002\n",
 "<ul><li><span translate=no>_^_0_^_</span> is a copy of a single <a href=\"#ConvMixerLayer\">ConvMixer layer</a>.  We make copies of it to make ConvMixer with <span translate=no>_^_1_^_</span>. </li>\n<li><span translate=no>_^_2_^_</span> is the number of ConvMixer layers (or depth), <span translate=no>_^_3_^_</span>. </li>\n<li><span translate=no>_^_4_^_</span> is the <a href=\"#PatchEmbeddings\">patch embeddings layer</a>. </li>\n<li><span translate=no>_^_5_^_</span> is the <a href=\"#ClassificationHead\">classification head</a>.</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u5358\u4e00\u306e <a href=\"#ConvMixerLayer\">ConvMixer</a> \u30ec\u30a4\u30e4\u30fc\u306e\u30b3\u30d4\u30fc\u3067\u3059\u3002\u305d\u306e\u30b3\u30d4\u30fc\u3092\u4f5c\u6210\u3057\u3066 ConvMixer</li> \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002<span translate=no>_^_1_^_</span>\n<li><span translate=no>_^_2_^_</span>\u306f ConvMixer \u30ec\u30a4\u30e4\u30fc\u306e\u6570 (\u307e\u305f\u306f\u6df1\u3055) \u3067\u3059\u3002<span translate=no>_^_3_^_</span></li>\n<li><span translate=no>_^_4_^_</span><a href=\"#PatchEmbeddings\">\u30d1\u30c3\u30c1\u57cb\u3081\u8fbc\u307f\u30ec\u30a4\u30e4\u30fc\u3067\u3059</a>\u3002</li>\n<li><span translate=no>_^_5_^_</span><a href=\"#ClassificationHead\">\u5206\u985e\u8cac\u4efb\u8005\u3067\u3059</a>\u3002</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the input image of shape <span translate=no>_^_1_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u5f62\u72b6\u306e\u5165\u529b\u753b\u50cf\u3067\u3059 <span translate=no>_^_1_^_</span></li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of channels in patch embeddings <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span> is the size of the patch, <span translate=no>_^_3_^_</span> </li>\n<li><span translate=no>_^_4_^_</span> is the number of channels in the input image (3 for rgb)</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u30d1\u30c3\u30c1\u57cb\u3081\u8fbc\u307f\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u3067\u3059 <span translate=no>_^_1_^_</span></li>\n<li><span translate=no>_^_2_^_</span>\u306f\u30d1\u30c3\u30c1\u306e\u30b5\u30a4\u30ba\u3001<span translate=no>_^_3_^_</span></li>\n<li><span translate=no>_^_4_^_</span>\u306f\u5165\u529b\u753b\u50cf\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570 (RGB \u306e\u5834\u5408\u306f 3)</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of channels in patch embeddings, <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span> is the number of classes in the classification task</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u306f\u30d1\u30c3\u30c1\u57cb\u3081\u8fbc\u307f\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u3001<span translate=no>_^_1_^_</span></li>\n<li><span translate=no>_^_2_^_</span>\u5206\u985e\u30bf\u30b9\u30af\u5185\u306e\u30af\u30e9\u30b9\u6570\u3067\u3059</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of channels in patch embeddings, <span translate=no>_^_1_^_</span> </li>\n<li><span translate=no>_^_2_^_</span> is the size of the kernel of spatial convolution, <span translate=no>_^_3_^_</span></li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u306f\u30d1\u30c3\u30c1\u57cb\u3081\u8fbc\u307f\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u3001<span translate=no>_^_1_^_</span></li>\n<li><span translate=no>_^_2_^_</span>\u306f\u7a7a\u9593\u7573\u307f\u8fbc\u307f\u306e\u30ab\u30fc\u30cd\u30eb\u306e\u5927\u304d\u3055\u3067\u3059 <span translate=no>_^_3_^_</span></li></ul>\n",
 "A PyTorch implementation/tutorial of the paper \"Patches Are All You Need?\"": "\u300c\u5fc5\u8981\u306a\u306e\u306f\u30d1\u30c3\u30c1\u3060\u3051\uff1f\u300d\u3068\u3044\u3046\u8ad6\u6587\u306ePyTorch\u5b9f\u88c5/\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb",
 "Patches Are All You Need? (ConvMixer)": "\u5fc5\u8981\u306a\u306e\u306f\u30d1\u30c3\u30c1\u3060\u3051\uff1f(\u30b3\u30f3\u30d0\u30fc\u30b8\u30e7\u30f3\u30df\u30ad\u30b5\u30fc)"
}