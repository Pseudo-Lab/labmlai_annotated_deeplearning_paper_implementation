{
 "<h1>HyperLSTM module</h1>\n": "<h1>HyperLSTM \u30e2\u30b8\u30e5\u30fc\u30eb</h1>\n",
 "<h1>HyperNetworks - HyperLSTM</h1>\n<p>We have implemented HyperLSTM introduced in paper <a href=\"https://papers.labml.ai/paper/1609.09106\">HyperNetworks</a>, with annotations using <a href=\"https://pytorch.org\">PyTorch</a>. <a href=\"https://blog.otoro.net/2016/09/28/hyper-networks/\">This blog post</a> by David Ha gives a good explanation of HyperNetworks.</p>\n<p>We have an experiment that trains a HyperLSTM to predict text on Shakespeare dataset. Here&#x27;s the link to code: <a href=\"experiment.html\"><span translate=no>_^_0_^_</span></a></p>\n<p><a href=\"https://colab.research.google.com/github/labmlai/annotated_deep_learning_paper_implementations/blob/master/labml_nn/hypernetworks/experiment.ipynb\"><span translate=no>_^_1_^_</span></a></p>\n<p>HyperNetworks use a smaller network to generate weights of a larger network. There are two variants: static hyper-networks and dynamic hyper-networks. Static HyperNetworks have smaller networks that generate weights (kernels) of a convolutional network. Dynamic HyperNetworks generate parameters of a recurrent neural network for each step. This is an implementation of the latter.</p>\n<h2>Dynamic HyperNetworks</h2>\n<p>In a RNN the parameters stay constant for each step. Dynamic HyperNetworks generate different parameters for each step. HyperLSTM has the structure of a LSTM but the parameters of each step are changed by a smaller LSTM network.</p>\n<p>In the basic form, a Dynamic HyperNetwork has a smaller recurrent network that generates a feature vector corresponding to each parameter tensor of the larger recurrent network. Let&#x27;s say the larger network has some parameter <span translate=no>_^_2_^_</span> the smaller network generates a feature vector <span translate=no>_^_3_^_</span> and we dynamically compute <span translate=no>_^_4_^_</span> as a linear transformation of <span translate=no>_^_5_^_</span>. For instance <span translate=no>_^_6_^_</span> where <span translate=no>_^_7_^_</span> is a 3-d tensor parameter and <span translate=no>_^_8_^_</span> is a tensor-vector multiplication. <span translate=no>_^_9_^_</span> is usually a linear transformation of the output of the smaller recurrent network.</p>\n<h3>Weight scaling instead of computing</h3>\n<p>Large recurrent networks have large dynamically computed parameters. These are calculated using linear transformation of feature vector <span translate=no>_^_10_^_</span>. And this transformation requires an even larger weight tensor. That is, when <span translate=no>_^_11_^_</span> has shape <span translate=no>_^_12_^_</span>, <span translate=no>_^_13_^_</span> will be <span translate=no>_^_14_^_</span>.</p>\n<p>To overcome this, we compute the weight parameters of the recurrent network by dynamically scaling each row of a matrix of same size.</p>\n<span translate=no>_^_15_^_</span><p>where <span translate=no>_^_16_^_</span> is a <span translate=no>_^_17_^_</span> parameter matrix.</p>\n<p>We can further optimize this when we compute <span translate=no>_^_18_^_</span>, as <span translate=no>_^_19_^_</span> where <span translate=no>_^_20_^_</span> stands for element-wise multiplication.</p>\n": "<h1>\u30cf\u30a4\u30d1\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af-HyperLSTM</h1>\n<p><a href=\"https://papers.labml.ai/paper/1609.09106\">\u8ad6\u6587\u3067\u7d39\u4ecb\u3057\u305fHyperNetworks\u3067\u7d39\u4ecb\u3057\u305fHyperLSTM\u3092\u3001PyTorch\u3092\u4f7f\u3063\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u4ed8\u304d\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f</a><a href=\"https://pytorch.org\">\u3002</a><a href=\"https://blog.otoro.net/2016/09/28/hyper-networks/\">David Ha \u306b\u3088\u308b\u3053\u306e\u30d6\u30ed\u30b0\u8a18\u4e8b\u3067\u306f</a>\u3001\u30cf\u30a4\u30d1\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3064\u3044\u3066\u308f\u304b\u308a\u3084\u3059\u304f\u8aac\u660e\u3057\u3066\u3044\u307e\u3059</p>\u3002\n<p>\u30b7\u30a7\u30a4\u30af\u30b9\u30d4\u30a2\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u4e88\u6e2c\u3059\u308b\u3088\u3046\u306b HyperLSTM \u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u5b9f\u9a13\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\u30b3\u30fc\u30c9\u3078\u306e\u30ea\u30f3\u30af\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002<a href=\"experiment.html\"><span translate=no>_^_0_^_</span></a></p>\n<p><a href=\"https://colab.research.google.com/github/labmlai/annotated_deep_learning_paper_implementations/blob/master/labml_nn/hypernetworks/experiment.ipynb\"><span translate=no>_^_1_^_</span></a></p>\n<p>\u30cf\u30a4\u30d1\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u3001\u5c0f\u3055\u3044\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u7528\u3057\u3066\u5927\u304d\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u91cd\u307f\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u9759\u7684\u30cf\u30a4\u30d1\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u52d5\u7684\u30cf\u30a4\u30d1\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e 2 \u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002\u9759\u7684\u30cf\u30a4\u30d1\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u306f\u3001\u7573\u307f\u8fbc\u307f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30a6\u30a7\u30a4\u30c8 (\u30ab\u30fc\u30cd\u30eb) \u3092\u751f\u6210\u3059\u308b\u5c0f\u898f\u6a21\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u3042\u308a\u307e\u3059\u3002\u52d5\u7684\u30cf\u30a4\u30d1\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u3001\u30b9\u30c6\u30c3\u30d7\u3054\u3068\u306b\u30ea\u30ab\u30ec\u30f3\u30c8\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u5f8c\u8005\u306e\u5b9f\u88c5\u3067\u3059\u3002</p>\n<h2>\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30fb\u30cf\u30a4\u30d1\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af</h2>\n<p>RNN \u3067\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5404\u30b9\u30c6\u30c3\u30d7\u3067\u4e00\u5b9a\u306b\u4fdd\u305f\u308c\u307e\u3059\u3002\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30cf\u30a4\u30d1\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u3001\u30b9\u30c6\u30c3\u30d7\u3054\u3068\u306b\u7570\u306a\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u751f\u6210\u3057\u307e\u3059\u3002HyperLSTM\u306fLSTM\u306e\u69cb\u9020\u3067\u3059\u304c\u3001\u5404\u30b9\u30c6\u30c3\u30d7\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5c0f\u898f\u6a21\u306aLSTM\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u3063\u3066\u5909\u66f4\u3055\u308c\u307e\u3059</p>\u3002\n<p>\u57fa\u672c\u7684\u306b\u306f\u3001\u52d5\u7684\u30cf\u30a4\u30d1\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u306f\u5c0f\u3055\u306a\u518d\u5e30\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u3042\u308a\u3001\u5927\u304d\u3044\u65b9\u306e\u518d\u5e30\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5404\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u30c6\u30f3\u30bd\u30eb\u306b\u5bfe\u5fdc\u3059\u308b\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u5927\u304d\u3044\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u4f55\u3089\u304b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002<span translate=no>_^_2_^_</span><span translate=no>_^_3_^_</span>\u5c0f\u3055\u3044\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u3092\u751f\u6210\u3057\u3001<span translate=no>_^_4_^_</span>\u7dda\u5f62\u5909\u63db\u3068\u3057\u3066\u52d5\u7684\u306b\u8a08\u7b97\u3057\u307e\u3059\u3002<span translate=no>_^_5_^_</span>\u305f\u3068\u3048\u3070\u3001<span translate=no>_^_7_^_</span>\u306f 3 <span translate=no>_^_6_^_</span> \u6b21\u5143\u306e\u30c6\u30f3\u30bd\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3067\u3001<span translate=no>_^_8_^_</span>\u306f\u30c6\u30f3\u30bd\u30eb\u3068\u30d9\u30af\u30c8\u30eb\u306e\u4e57\u7b97\u3067\u3059\u3002<span translate=no>_^_9_^_</span>\u901a\u5e38\u306f\u3001\u5c0f\u898f\u6a21\u306a\u518d\u5e30\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u51fa\u529b\u3092\u7dda\u5f62\u5909\u63db\u3057\u305f\u3082\u306e\u3067\u3059</p>\u3002\n<h3>\u8a08\u7b97\u306e\u4ee3\u308f\u308a\u306b\u30a6\u30a7\u30a4\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u884c\u3046</h3>\n<p>\u5927\u898f\u6a21\u306a\u30ea\u30ab\u30ec\u30f3\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u306f\u3001\u52d5\u7684\u306b\u8a08\u7b97\u3055\u308c\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u304c\u5927\u304d\u304f\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3001\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u306e\u7dda\u5f62\u5909\u63db\u3092\u4f7f\u7528\u3057\u3066\u8a08\u7b97\u3055\u308c\u307e\u3059<span translate=no>_^_10_^_</span>\u3002\u305d\u3057\u3066\u3001\u3053\u306e\u5909\u63db\u306b\u306f\u3055\u3089\u306b\u5927\u304d\u306a\u91cd\u307f\u30c6\u30f3\u30bd\u30eb\u304c\u5fc5\u8981\u3067\u3059\u3002\u3064\u307e\u308a<span translate=no>_^_11_^_</span><span translate=no>_^_12_^_</span>\u3001<span translate=no>_^_13_^_</span>\u5f62\u304c\u3042\u308c\u3070\u5f62\u306b\u306a\u308a\u307e\u3059<span translate=no>_^_14_^_</span>\u3002</p>\n<p>\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3001\u540c\u3058\u30b5\u30a4\u30ba\u306e\u884c\u5217\u306e\u5404\u884c\u3092\u52d5\u7684\u306b\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u518d\u5e30\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u91cd\u307f\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002</p>\n<span translate=no>_^_15_^_</span><p>\u3053\u3053\u3067<span translate=no>_^_16_^_</span>\u3001<span translate=no>_^_17_^_</span>\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u3067\u3059\u3002</p>\n<p><span translate=no>_^_19_^_</span>\u3053\u3053\u3067\u3001<span translate=no>_^_20_^_</span>\u8981\u7d20\u5358\u4f4d\u306e\u4e57\u7b97\u3092\u610f\u5473\u3059\u308b\u306e\u3067<span translate=no>_^_18_^_</span>\u3001\u8a08\u7b97\u6642\u306b\u3053\u308c\u3092\u3055\u3089\u306b\u6700\u9069\u5316\u3067\u304d\u307e\u3059\u3002</p>\n",
 "<h2>HyperLSTM Cell</h2>\n<p>For HyperLSTM the smaller network and the larger network both have the LSTM structure. This is defined in Appendix A.2.2 in the paper.</p>\n": "<h2>\u30cf\u30a4\u30d1\u30fcLSTM\u30bb\u30eb</h2>\n<p>HyperLSTM \u3067\u306f\u3001\u5c0f\u3055\u3044\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u5927\u304d\u3044\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u4e21\u65b9\u304c LSTM \u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u8ad6\u6587\u306e\u4ed8\u9332A.2.2\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059</p>\u3002\n",
 "<p> </p>\n": "<p></p>\n",
 "<p> <span translate=no>_^_0_^_</span> is the size of the input <span translate=no>_^_1_^_</span>, <span translate=no>_^_2_^_</span> is the size of the LSTM, and <span translate=no>_^_3_^_</span> is the size of the smaller LSTM that alters the weights of the larger outer LSTM. <span translate=no>_^_4_^_</span> is the size of the feature vectors used to alter the LSTM weights.</p>\n<p>We use the output of the smaller LSTM to compute <span translate=no>_^_5_^_</span>, <span translate=no>_^_6_^_</span> and <span translate=no>_^_7_^_</span> using linear transformations. We calculate <span translate=no>_^_8_^_</span>, <span translate=no>_^_9_^_</span>, and <span translate=no>_^_10_^_</span> from these, using linear transformations again. These are then used to scale the rows of weight and bias tensors of the main LSTM.</p>\n<p>\ud83d\udcdd Since the computation of <span translate=no>_^_11_^_</span> and <span translate=no>_^_12_^_</span> are two sequential linear transformations these can be combined into a single linear transformation. However we&#x27;ve implemented this separately so that it matches with the description in the paper.</p>\n": "<p><span translate=no>_^_0_^_</span>\u306f\u5165\u529b\u306e\u30b5\u30a4\u30ba<span translate=no>_^_1_^_</span>\u3001<span translate=no>_^_2_^_</span>\u306f LSTM \u306e\u30b5\u30a4\u30ba\u3001\u306f\u5c0f\u3055\u3044\u65b9\u306e LSTM \u306e\u30b5\u30a4\u30ba\u3067\u3001\u5927\u304d\u3044\u65b9\u306e\u5916\u5074\u306e LSTM <span translate=no>_^_3_^_</span> \u306e\u91cd\u307f\u306f\u5909\u5316\u3057\u307e\u3059\u3002<span translate=no>_^_4_^_</span>LSTM \u30a6\u30a7\u30a4\u30c8\u306e\u5909\u66f4\u306b\u4f7f\u7528\u3055\u308c\u308b\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u306e\u30b5\u30a4\u30ba\u3067\u3059</p>\u3002\n<p><span translate=no>_^_6_^_</span><span translate=no>_^_7_^_</span>\u5c0f\u3055\u3044\u65b9\u306eLSTM\u306e\u51fa\u529b\u3092\u4f7f\u7528\u3057\u3066\u8a08\u7b97\u3057<span translate=no>_^_5_^_</span>\u3001\u7dda\u5f62\u5909\u63db\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u518d\u5ea6<span translate=no>_^_8_^_</span><span translate=no>_^_9_^_</span>\u3001\u7dda\u5f62\u5909\u63db\u3092\u4f7f\u7528\u3057\u3066\u8a08\u7b97\u3057\u3001<span translate=no>_^_10_^_</span>\u3053\u308c\u3089\u304b\u3089\u884c\u3044\u307e\u3059\u3002\u6b21\u306b\u3001\u3053\u308c\u3089\u3092\u4f7f\u7528\u3057\u3066\u30e1\u30a4\u30f3LSTM\u306e\u91cd\u307f\u3068\u30d0\u30a4\u30a2\u30b9\u30c6\u30f3\u30bd\u30eb\u306e\u884c\u3092\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u307e\u3059</p>\u3002\n<p>\ud83d\udcdd <span translate=no>_^_12_^_</span> \u3068\u306e\u8a08\u7b97\u306f2\u3064\u306e\u9023\u7d9a\u3057\u305f\u7dda\u5f62\u5909\u63db\u306a\u306e\u3067<span translate=no>_^_11_^_</span>\u3001\u3053\u308c\u3089\u30921\u3064\u306e\u7dda\u5f62\u5909\u63db\u306b\u307e\u3068\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u8ad6\u6587\u306e\u8aac\u660e\u3068\u4e00\u81f4\u3059\u308b\u3088\u3046\u306b\u3053\u308c\u3092\u500b\u5225\u306b\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002</p>\n",
 "<p> Create a network of <span translate=no>_^_0_^_</span> of HyperLSTM.</p>\n": "<p>HyperLSTM <span translate=no>_^_0_^_</span> \u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p>\n",
 "<p><span translate=no>_^_0_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span></p>\n",
 "<p><span translate=no>_^_0_^_</span> \ud83e\udd14 In the paper it was specified as <span translate=no>_^_1_^_</span> I feel that it&#x27;s a typo. </p>\n": "<p><span translate=no>_^_0_^_</span>\ud83e\udd14 <span translate=no>_^_1_^_</span> \u8ad6\u6587\u3067\u306f\u30bf\u30a4\u30d7\u30df\u30b9\u3060\u3068\u601d\u3046\u306e\u3067\u660e\u8a18\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002</p>\n",
 "<p>Collect the output <span translate=no>_^_0_^_</span> of the final layer </p>\n": "<p><span translate=no>_^_0_^_</span>\u6700\u7d42\u30ec\u30a4\u30e4\u30fc\u306e\u51fa\u529b\u3092\u96c6\u3081\u308b</p>\n",
 "<p>Collect the outputs of the final layer at each step </p>\n": "<p>\u5404\u30b9\u30c6\u30c3\u30d7\u3067\u6700\u7d42\u30ec\u30a4\u30e4\u30fc\u306e\u51fa\u529b\u3092\u96c6\u3081\u308b</p>\n",
 "<p>Create cells for each layer. Note that only the first layer gets the input directly. Rest of the layers get the input from the layer below </p>\n": "<p>\u30ec\u30a4\u30e4\u30fc\u3054\u3068\u306b\u30bb\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u6700\u521d\u306e\u30ec\u30a4\u30e4\u30fc\u3060\u3051\u304c\u76f4\u63a5\u5165\u529b\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u6b8b\u308a\u306e\u30ec\u30a4\u30e4\u30fc\u306f\u3001\u4e0b\u306e\u30ec\u30a4\u30e4\u30fc\u304b\u3089\u5165\u529b\u3092\u53d6\u5f97\u3057\u307e\u3059</p>\u3002\n",
 "<p>Get the state of the layer </p>\n": "<p>\u30ec\u30a4\u30e4\u30fc\u306e\u72b6\u614b\u3092\u53d6\u5f97</p>\n",
 "<p>Initialize the state with zeros if <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6b21\u306e\u5834\u5408\u306f\u3001\u72b6\u614b\u3092\u30bc\u30ed\u3067\u521d\u671f\u5316\u3057\u307e\u3059 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Input to the first layer is the input itself </p>\n": "<p>\u6700\u521d\u306e\u30ec\u30a4\u30e4\u30fc\u3078\u306e\u5165\u529b\u306f\u5165\u529b\u305d\u306e\u3082\u306e\u3067\u3059</p>\n",
 "<p>Input to the next layer is the state of this layer </p>\n": "<p>\u6b21\u306e\u30ec\u30a4\u30e4\u30fc\u3078\u306e\u5165\u529b\u306f\u3001\u3053\u306e\u30ec\u30a4\u30e4\u30fc\u306e\u72b6\u614b\u3067\u3059</p>\n",
 "<p>Layer normalization </p>\n": "<p>\u30ec\u30a4\u30e4\u30fc\u6b63\u898f\u5316</p>\n",
 "<p>Loop through the layers </p>\n": "<p>\u30ec\u30a4\u30e4\u30fc\u3092\u30eb\u30fc\u30d7\u3059\u308b</p>\n",
 "<p>Reverse stack the tensors to get the states of each layer</p>\n<p>\ud83d\udcdd You can just work with the tensor itself but this is easier to debug </p>\n": "<p>\u30c6\u30f3\u30bd\u30eb\u3092\u9006\u306b\u7a4d\u307f\u91cd\u306d\u3066\u5404\u30ec\u30a4\u30e4\u30fc\u306e\u72b6\u614b\u3092\u53d6\u5f97\u3057\u307e\u3059</p>\n<p>\ud83d\udcdd \u30c6\u30f3\u30bd\u30eb\u81ea\u4f53\u3067\u4f5c\u696d\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u30c7\u30d0\u30c3\u30b0\u306f\u7c21\u5358\u3067\u3059</p>\n",
 "<p>Stack the outputs and states </p>\n": "<p>\u51fa\u529b\u3068\u30b9\u30c6\u30fc\u30c8\u3092\u7a4d\u307f\u91cd\u306d\u308b</p>\n",
 "<p>Store sizes to initialize state </p>\n": "<p>\u30b5\u30a4\u30ba\u3092\u4fdd\u5b58\u3057\u3066\u72b6\u614b\u3092\u521d\u671f\u5316\u3057\u307e\u3059</p>\n",
 "<p>The input to the hyperLSTM is <span translate=no>_^_0_^_</span> where <span translate=no>_^_1_^_</span> is the input and <span translate=no>_^_2_^_</span> is the output of the outer LSTM at previous step. So the input size is <span translate=no>_^_3_^_</span>.</p>\n<p>The output of hyperLSTM is <span translate=no>_^_4_^_</span> and <span translate=no>_^_5_^_</span>. </p>\n": "<p>HyperLSTM \u3078\u306e\u5165\u529b\u306f\u3001<span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>\u524d\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u5916\u90e8\u306e LSTM <span translate=no>_^_2_^_</span> \u306e\u5165\u529b\u3068\u51fa\u529b\u3067\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u5165\u529b\u30b5\u30a4\u30ba\u306f\u3067\u3059<span translate=no>_^_3_^_</span>\u3002</p>\n<p>HyperLSTM \u306e\u51fa\u529b\u306f\u304a\u3088\u3073\u3067\u3059\u3002<span translate=no>_^_4_^_</span> <span translate=no>_^_5_^_</span></p>\n",
 "<p>The weight matrices <span translate=no>_^_0_^_</span> </p>\n": "<p>\u30a6\u30a7\u30a4\u30c8\u30de\u30c8\u30ea\u30c3\u30af\u30b9 <span translate=no>_^_0_^_</span></p>\n",
 "<p>We calculate <span translate=no>_^_0_^_</span>, <span translate=no>_^_1_^_</span>, <span translate=no>_^_2_^_</span> and <span translate=no>_^_3_^_</span> in a loop </p>\n": "<p><span translate=no>_^_0_^_</span>\u3001<span translate=no>_^_1_^_</span>\u3001<span translate=no>_^_2_^_</span><span translate=no>_^_3_^_</span>\u3092\u30eb\u30fc\u30d7\u3067\u8a08\u7b97\u3057\u307e\u3059</p>\n",
 "<span translate=no>_^_0_^_</span><p> </p>\n": "<span translate=no>_^_0_^_</span><p></p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> has shape <span translate=no>_^_1_^_</span> and </li>\n<li><span translate=no>_^_2_^_</span> is a tuple of <span translate=no>_^_3_^_</span>.  <span translate=no>_^_4_^_</span> have shape <span translate=no>_^_5_^_</span> and  <span translate=no>_^_6_^_</span> have shape <span translate=no>_^_7_^_</span>.</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>\u5f62\u304c\u3042\u3063\u3066</li>\n<li><span translate=no>_^_2_^_</span>\u306e\u30bf\u30d7\u30eb\u3067\u3059\u3002<span translate=no>_^_3_^_</span><span translate=no>_^_4_^_</span><span translate=no>_^_5_^_</span><span translate=no>_^_6_^_</span><span translate=no>_^_7_^_</span>\u5f62\u304c\u3042\u3063\u3066\u5f62\u304c\u3042\u308b</li></ul>\n",
 "A PyTorch implementation/tutorial of HyperLSTM introduced in paper HyperNetworks.": "HyperLSTM\u306ePyTorch\u5b9f\u88c5/\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306f\u3001\u8ad6\u6587\u306e\u30cf\u30a4\u30d1\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002",
 "HyperNetworks - HyperLSTM": "\u30cf\u30a4\u30d1\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af-HyperLSTM"
}