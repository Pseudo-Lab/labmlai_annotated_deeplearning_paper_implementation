{
 "<h1>Distilling the Knowledge in a Neural Network</h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation/tutorial of the paper <a href=\"https://papers.labml.ai/paper/1503.02531\">Distilling the Knowledge in a Neural Network</a>.</p>\n<p>It&#x27;s a way of training a small network using the knowledge in a trained larger network; i.e. distilling the knowledge from the large network.</p>\n<p>A large model with regularization or an ensemble of models (using dropout) generalizes better than a small model when trained directly on the data and labels. However, a small model can be trained to generalize better with help of a large model. Smaller models are better in production: faster, less compute, less memory.</p>\n<p>The output probabilities of a trained model give more information than the labels because it assigns non-zero probabilities to incorrect classes as well. These probabilities tell us that a sample has a chance of belonging to certain classes. For instance, when classifying digits, when given an image of digit <em>7</em>, a generalized model will give a high probability to 7 and a small but non-zero probability to 2, while assigning almost zero probability to other digits. Distillation uses this information to train a small model better.</p>\n<h2>Soft Targets</h2>\n<p>The probabilities are usually computed with a softmax operation,</p>\n<p><span translate=no>_^_0_^_</span></p>\n<p>where <span translate=no>_^_1_^_</span> is the probability for class <span translate=no>_^_2_^_</span> and <span translate=no>_^_3_^_</span> is the logit.</p>\n<p>We train the small model to minimize the Cross entropy or KL Divergence between its output probability distribution and the large network&#x27;s output probability distribution (soft targets).</p>\n<p>One of the problems here is that the probabilities assigned to incorrect classes by the large network are often very small and don&#x27;t contribute to the loss. So they soften the probabilities by applying a temperature <span translate=no>_^_4_^_</span>,</p>\n<p><span translate=no>_^_5_^_</span></p>\n<p>where higher values for <span translate=no>_^_6_^_</span> will produce softer probabilities.</p>\n<h2>Training</h2>\n<p>Paper suggests adding a second loss term for predicting the actual labels when training the small model. We calculate the composite loss as the weighted sum of the two loss terms:  soft targets and actual labels.</p>\n<p>The dataset for distillation is called <em>the transfer set</em>, and the paper suggests using the same training data.</p>\n<h2>Our experiment</h2>\n<p>We train on CIFAR-10 dataset. We <a href=\"large.html\">train a large model</a> that has <span translate=no>_^_7_^_</span> parameters with dropout and it gives an accuracy of 85% on the validation set. A <a href=\"small.html\">small model</a> with <span translate=no>_^_8_^_</span> parameters gives an accuracy of 80%.</p>\n<p>We then train the small model with distillation from the large model, and it gives an accuracy of 82%; a 2% increase in the accuracy.</p>\n": "<h1>\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u306e\u77e5\u8b58\u306e\u62bd\u51fa</h1>\n<p>\u3053\u308c\u306f\u3001<a href=\"https://papers.labml.ai/paper/1503.02531\">\u8ad6\u6587\u300c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u304a\u3051\u308b\u77e5\u8b58\u306e\u62bd\u51fa</a>\u300d<a href=\"https://pytorch.org\">\u306ePyTorch\u5b9f\u88c5/\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u3059</a>\u3002</p>\n<p>\u3053\u308c\u306f\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u6e08\u307f\u306e\u5927\u898f\u6a21\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u77e5\u8b58\u3092\u4f7f\u7528\u3057\u3066\u5c0f\u898f\u6a21\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\u3064\u307e\u308a\u3001\u5927\u898f\u6a21\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304b\u3089\u77e5\u8b58\u3092\u62bd\u51fa\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002</p>\n<p>\u30c7\u30fc\u30bf\u3084\u30e9\u30d9\u30eb\u3067\u76f4\u63a5\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u305f\u5834\u5408\u3001\u6b63\u5247\u5316\u3092\u884c\u3063\u305f\u5927\u898f\u6a21\u306a\u30e2\u30c7\u30eb\u3084 (\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u3092\u4f7f\u7528\u3057\u305f) \u30e2\u30c7\u30eb\u306e\u30a2\u30f3\u30b5\u30f3\u30d6\u30eb\u306f\u3001\u5c0f\u3055\u306a\u30e2\u30c7\u30eb\u3088\u308a\u3082\u4e00\u822c\u5316\u304c\u5bb9\u6613\u3067\u3059\u3002\u305f\u3060\u3057\u3001\u5c0f\u3055\u3044\u30e2\u30c7\u30eb\u3067\u3082\u3001\u5927\u304d\u306a\u30e2\u30c7\u30eb\u306e\u52a9\u3051\u3092\u501f\u308a\u3066\u3088\u308a\u4e00\u822c\u5316\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002\u672c\u756a\u74b0\u5883\u3067\u306f\u3001\u30e2\u30c7\u30eb\u304c\u5c0f\u3055\u3044\u307b\u3069\u901f\u304f\u3001\u51e6\u7406\u80fd\u529b\u304c\u5c11\u306a\u304f\u3001\u30e1\u30e2\u30ea\u3082\u5c11\u306a\u304f\u3066\u6e08\u307f\u307e\u3059\u3002</p>\n<p>\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u6e08\u307f\u30e2\u30c7\u30eb\u306e\u51fa\u529b\u78ba\u7387\u306f\u3001\u8aa4\u3063\u305f\u30af\u30e9\u30b9\u306b\u3082\u30bc\u30ed\u4ee5\u5916\u306e\u78ba\u7387\u3092\u5272\u308a\u5f53\u3066\u308b\u305f\u3081\u3001\u30e9\u30d9\u30eb\u3088\u308a\u3082\u591a\u304f\u306e\u60c5\u5831\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u78ba\u7387\u304b\u3089\u3001\u30b5\u30f3\u30d7\u30eb\u304c\u7279\u5b9a\u306e\u30af\u30e9\u30b9\u306b\u5c5e\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u6570\u5b57\u3092\u5206\u985e\u3059\u308b\u969b\u3001<em>7 \u6841\u306e\u753b\u50cf\u304c\u4e0e\u3048\u3089\u308c\u305f\u5834\u5408\u3001\u4e00\u822c\u5316\u30e2\u30c7\u30eb\u3067\u306f 7</em> \u306b\u306f\u9ad8\u3044\u78ba\u7387\u30012 \u306b\u306f\u5c0f\u3055\u3044\u306a\u304c\u3089\u3082\u30bc\u30ed\u3067\u306f\u306a\u3044\u78ba\u7387\u304c\u4e0e\u3048\u3089\u308c\u3001\u4ed6\u306e\u6570\u5b57\u306b\u306f\u307b\u307c\u30bc\u30ed\u306e\u78ba\u7387\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\u84b8\u7559\u3067\u306f\u3001\u3053\u306e\u60c5\u5831\u3092\u5229\u7528\u3057\u3066\u5c0f\u578b\u30e2\u30c7\u30eb\u306e\u5b66\u7fd2\u52b9\u679c\u3092\u9ad8\u3081\u307e\u3059</p>\u3002\n<h2>\u30bd\u30d5\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8</h2>\n<p>\u78ba\u7387\u306f\u901a\u5e38\u3001\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u6f14\u7b97\u3067\u8a08\u7b97\u3055\u308c\u307e\u3059\u3002</p>\n<p><span translate=no>_^_0_^_</span></p>\n<p>\u3053\u3053\u3067<span translate=no>_^_1_^_</span>\u3001<span translate=no>_^_2_^_</span>\u306f\u30af\u30e9\u30b9\u306e\u78ba\u7387\u3067\u3001<span translate=no>_^_3_^_</span>\u306f\u30ed\u30b8\u30c3\u30c8\u3067\u3059\u3002</p>\n<p>\u51fa\u529b\u78ba\u7387\u5206\u5e03\u3068\u5927\u898f\u6a21\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u51fa\u529b\u78ba\u7387\u5206\u5e03 (\u30bd\u30d5\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8) \u306e\u9593\u306e\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u307e\u305f\u306f KL \u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9\u3092\u6700\u5c0f\u5316\u3059\u308b\u3088\u3046\u306b\u30b9\u30e2\u30fc\u30eb\u30e2\u30c7\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u307e\u3059\u3002</p>\n<p>\u3053\u3053\u3067\u306e\u554f\u984c\u306e 1 \u3064\u306f\u3001\u5927\u898f\u6a21\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3088\u3063\u3066\u8aa4\u3063\u305f\u30af\u30e9\u30b9\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u78ba\u7387\u304c\u305f\u3044\u3066\u3044\u975e\u5e38\u306b\u5c0f\u3055\u304f\u3001\u640d\u5931\u306e\u539f\u56e0\u306b\u306a\u3089\u306a\u3044\u3053\u3068\u3067\u3059\u3002\u305d\u3053\u3067\u3001\u6e29\u5ea6\u3092\u5f53\u3066\u308b\u3053\u3068\u3067\u78ba\u7387\u3092\u5f31\u3081\u307e\u3059 <span translate=no>_^_4_^_</span></p>\n<p><span translate=no>_^_5_^_</span></p>\n<p>\u5024\u304c\u5927\u304d\u3044\u307b\u3069<span translate=no>_^_6_^_</span>\u3001\u78ba\u7387\u306f\u4f4e\u304f\u306a\u308a\u307e\u3059\u3002</p>\n<h2>\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0</h2>\n<p>\u8ad6\u6587\u3067\u306f\u3001\u5c0f\u578b\u30e2\u30c7\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u969b\u306b\u5b9f\u969b\u306e\u30e9\u30d9\u30eb\u3092\u4e88\u6e2c\u3059\u308b\u305f\u3081\u306b 2 \u3064\u76ee\u306e\u640d\u5931\u9805\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3092\u63d0\u6848\u3057\u3066\u3044\u307e\u3059\u3002\u8907\u5408\u640d\u5931\u306f\u3001\u30bd\u30d5\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u5b9f\u969b\u306e\u30e9\u30d9\u30eb\u3068\u3044\u30462\u3064\u306e\u640d\u5931\u9805\u306e\u52a0\u91cd\u5408\u8a08\u3068\u3057\u3066\u8a08\u7b97\u3055\u308c\u307e\u3059\u3002</p>\n<p><em>\u84b8\u7559\u7528\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u30c8\u30e9\u30f3\u30b9\u30d5\u30a1\u30fc\u30bb\u30c3\u30c8\u3068\u547c\u3070\u308c</em>\u3001\u8ad6\u6587\u3067\u306f\u540c\u3058\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u63d0\u6848\u3057\u3066\u3044\u307e\u3059\u3002</p>\n<h2>\u79c1\u305f\u3061\u306e\u5b9f\u9a13</h2>\n<p>CIFAR-10\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u307e\u3059\u3002<a href=\"large.html\"><span translate=no>_^_7_^_</span>\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u306e\u3042\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u3064\u5927\u898f\u6a21\u306a\u30e2\u30c7\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u3068</a>\u3001\u691c\u8a3c\u30bb\u30c3\u30c8\u306e\u7cbe\u5ea6\u304c 85% \u306b\u306a\u308a\u307e\u3059\u3002<a href=\"small.html\"><span translate=no>_^_8_^_</span>\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u542b\u3080\u5c0f\u3055\u306a\u30e2\u30c7\u30eb\u3067\u306f</a>\u300180\uff05\u306e\u7cbe\u5ea6\u304c\u5f97\u3089\u308c\u307e\u3059\u3002</p>\n<p>\u6b21\u306b\u3001\u5927\u304d\u3044\u30e2\u30c7\u30eb\u304b\u3089\u84b8\u7559\u3057\u3066\u5c0f\u3055\u306a\u30e2\u30c7\u30eb\u306b\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3046\u3068\u3001\u7cbe\u5ea6\u306f 82%\u3001\u7cbe\u5ea6\u306f 2% \u5411\u4e0a\u3057\u307e\u3059\u3002</p>\n",
 "<h2>Configurations</h2>\n<p>This extends from <a href=\"../experiments/cifar10.html\"><span translate=no>_^_0_^_</span></a> which defines all the dataset related configurations, optimizer, and a training loop.</p>\n": "<h2>\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3</h2>\n<p>\u3053\u308c\u3092\u62e1\u5f35\u3057\u3066<a href=\"../experiments/cifar10.html\"><span translate=no>_^_0_^_</span></a>\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u95a2\u9023\u3059\u308b\u3059\u3079\u3066\u306e\u69cb\u6210\u3001\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u3001\u304a\u3088\u3073\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30eb\u30fc\u30d7\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</p>\n",
 "<h3>Create large model</h3>\n": "<h3>\u5927\u304d\u3044\u30e2\u30c7\u30eb\u3092\u4f5c\u6210</h3>\n",
 "<h3>Create small model</h3>\n": "<h3>\u5c0f\u578b\u30e2\u30c7\u30eb\u3092\u4f5c\u6210</h3>\n",
 "<h3>Load <a href=\"large.html\">trained large model</a></h3>\n": "<h3><a href=\"large.html\">\u8ca0\u8377\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u6e08\u307f\u306e\u5927\u578b\u30e2\u30c7\u30eb</a></h3>\n",
 "<h3>Training/validation step</h3>\n<p>We define a custom training/validation step to include the distillation</p>\n": "<h3>\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0/\u691c\u8a3c\u30b9\u30c6\u30c3\u30d7</h3>\n<p>\u84b8\u7559\u3092\u542b\u3080\u30ab\u30b9\u30bf\u30e0\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0/\u691c\u8a3c\u30b9\u30c6\u30c3\u30d7\u3092\u5b9a\u7fa9\u3057\u307e\u3059</p>\n",
 "<p> </p>\n": "<p></p>\n",
 "<p> Train a small model with distillation</p>\n": "<p>\u84b8\u7559\u306b\u3088\u308b\u5c0f\u578b\u30e2\u30c7\u30eb\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0</p>\n",
 "<p>Calculate and log accuracy </p>\n": "<p>\u7cbe\u5ea6\u306e\u8a08\u7b97\u3068\u8a18\u9332</p>\n",
 "<p>Calculate gradients </p>\n": "<p>\u52fe\u914d\u306e\u8a08\u7b97</p>\n",
 "<p>Calculate the soft targets loss </p>\n": "<p>\u30bd\u30d5\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u640d\u5931\u306e\u8a08\u7b97</p>\n",
 "<p>Calculate the true label loss </p>\n": "<p>\u5b9f\u969b\u306e\u30e9\u30d9\u30eb\u30ed\u30b9\u3092\u8a08\u7b97</p>\n",
 "<p>Clear the gradients </p>\n": "<p>\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u30af\u30ea\u30a2</p>\n",
 "<p>Create configurations </p>\n": "<p>\u69cb\u6210\u306e\u4f5c\u6210</p>\n",
 "<p>Create experiment </p>\n": "<p>\u5b9f\u9a13\u3092\u4f5c\u6210</p>\n",
 "<p>Cross entropy loss for true label loss </p>\n": "<p>\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u640d\u5931\u306b\u3088\u308b\u771f\u306e\u30e9\u30d9\u30eb\u30ed\u30b9</p>\n",
 "<p>Get the output logits, <span translate=no>_^_0_^_</span>, from the large model </p>\n": "<p>\u30e9\u30fc\u30b8\u30e2\u30c7\u30eb\u304b\u3089\u51fa\u529b\u30ed\u30b8\u30c3\u30c8\u3092\u53d6\u5f97 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Get the output logits, <span translate=no>_^_0_^_</span>, from the small model </p>\n": "<p>\u5c0f\u3055\u3044\u30e2\u30c7\u30eb\u304b\u3089\u51fa\u529b\u30ed\u30b8\u30c3\u30c8\u3092\u53d6\u5f97 <span translate=no>_^_0_^_</span></p>\n",
 "<p>In evaluation mode (no recording) </p>\n": "<p>\u8a55\u4fa1\u30e2\u30fc\u30c9 (\u8a18\u9332\u306a\u3057)</p>\n",
 "<p>Initialize configs of the large model training experiment </p>\n": "<p>\u30e9\u30fc\u30b8\u30e2\u30c7\u30eb\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u5b9f\u9a13\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u3092\u521d\u671f\u5316</p>\n",
 "<p>KL Divergence loss for soft targets </p>\n": "<p>\u30bd\u30d5\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u306eKL\u30c0\u30a4\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9\u30ed\u30b9</p>\n",
 "<p>Large model in evaluation mode </p>\n": "<p>\u8a55\u4fa1\u30e2\u30fc\u30c9\u306e\u5927\u578b\u30e2\u30c7\u30eb</p>\n",
 "<p>Load configurations </p>\n": "<p>\u69cb\u6210\u3092\u30ed\u30fc\u30c9</p>\n",
 "<p>Load saved configs </p>\n": "<p>\u4fdd\u5b58\u3057\u305f\u8a2d\u5b9a\u3092\u8aad\u307f\u8fbc\u3080</p>\n",
 "<p>Load saved model </p>\n": "<p>\u4fdd\u5b58\u3057\u305f\u30e2\u30c7\u30eb\u3092\u30ed\u30fc\u30c9</p>\n",
 "<p>Log the losses </p>\n": "<p>\u640d\u5931\u3092\u8a18\u9332\u3059\u308b</p>\n",
 "<p>Log the model parameters and gradients on last batch of every epoch </p>\n": "<p>\u5404\u30a8\u30dd\u30c3\u30af\u306e\u6700\u5f8c\u306e\u30d0\u30c3\u30c1\u3067\u30e2\u30c7\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u52fe\u914d\u3092\u8a18\u9332\u3057\u307e\u3059</p>\n",
 "<p>Move data to the device </p>\n": "<p>\u30c7\u30fc\u30bf\u3092\u30c7\u30d0\u30a4\u30b9\u306b\u79fb\u52d5</p>\n",
 "<p>Return the model </p>\n": "<p>\u30e2\u30c7\u30eb\u3092\u8fd4\u5374\u3059\u308b</p>\n",
 "<p>Save the tracked metrics </p>\n": "<p>\u8ffd\u8de1\u3057\u305f\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u4fdd\u5b58\u3059\u308b</p>\n",
 "<p>Set model for saving/loading </p>\n": "<p>\u4fdd\u5b58/\u8aad\u307f\u8fbc\u307f\u7528\u306e\u30e2\u30c7\u30eb\u3092\u8a2d\u5b9a</p>\n",
 "<p>Set models for saving/loading </p>\n": "<p>\u4fdd\u5b58/\u8aad\u307f\u8fbc\u307f\u7528\u306e\u30e2\u30c7\u30eb\u3092\u8a2d\u5b9a</p>\n",
 "<p>Set the loaded large model </p>\n": "<p>\u8aad\u307f\u8fbc\u3093\u3060\u30e9\u30fc\u30b8\u30e2\u30c7\u30eb\u3092\u8a2d\u5b9a\u3059\u308b</p>\n",
 "<p>Set which run and checkpoint to load </p>\n": "<p>\u3069\u306e\u30e9\u30f3\u3068\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u30ed\u30fc\u30c9\u3059\u308b\u304b\u3092\u8a2d\u5b9a</p>\n",
 "<p>Soft targets <span translate=no>_^_0_^_</span> </p>\n": "<p>\u30bd\u30d5\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Start experiment from scratch </p>\n": "<p>\u5b9f\u9a13\u3092\u30bc\u30ed\u304b\u3089\u59cb\u3081\u308b</p>\n",
 "<p>Start the experiment - this will load the model, and prepare everything </p>\n": "<p>\u5b9f\u9a13\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\u3053\u308c\u3067\u30e2\u30c7\u30eb\u304c\u8aad\u307f\u8fbc\u307e\u308c\u3001\u3059\u3079\u3066\u306e\u6e96\u5099\u304c\u6574\u3044\u307e\u3059</p>\n",
 "<p>Start the experiment and run the training loop </p>\n": "<p>\u5b9f\u9a13\u3092\u958b\u59cb\u3057\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30eb\u30fc\u30d7\u3092\u5b9f\u884c\u3057\u307e\u3059</p>\n",
 "<p>Take optimizer step </p>\n": "<p>\u6700\u9069\u5316\u306e\u4e00\u6b69\u3092\u8e0f\u307f\u51fa\u3059</p>\n",
 "<p>Temperature adjusted probabilities of the small model <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5c0f\u578b\u30e2\u30c7\u30eb\u306e\u6e29\u5ea6\u8abf\u6574\u6e08\u307f\u78ba\u7387 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Temperature, <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6e29\u5ea6\u3001<span translate=no>_^_0_^_</span></p>\n",
 "<p>The large model </p>\n": "<p>\u30e9\u30fc\u30b8\u30e2\u30c7\u30eb</p>\n",
 "<p>The small model </p>\n": "<p>\u30b9\u30e2\u30fc\u30eb\u30e2\u30c7\u30eb</p>\n",
 "<p>Train the model </p>\n": "<p>\u30e2\u30c7\u30eb\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0</p>\n",
 "<p>Training/Evaluation mode for the small model </p>\n": "<p>\u5c0f\u578b\u30e2\u30c7\u30eb\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0/\u8a55\u4fa1\u30e2\u30fc\u30c9</p>\n",
 "<p>Update global step (number of samples processed) when in training mode </p>\n": "<p>\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30e2\u30fc\u30c9\u6642\u306b\u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30c6\u30c3\u30d7 (\u51e6\u7406\u3055\u308c\u305f\u30b5\u30f3\u30d7\u30eb\u6570) \u3092\u66f4\u65b0</p>\n",
 "<p>Weight for soft targets loss.</p>\n<p>The gradients produced by soft targets get scaled by <span translate=no>_^_0_^_</span>. To compensate for this the paper suggests scaling the soft targets loss by a factor of <span translate=no>_^_1_^_</span> </p>\n": "<p>\u30bd\u30d5\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u91cd\u91cf\u304c\u6e1b\u308a\u307e\u3059\u3002</p>\n<p>\u30bd\u30d5\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u308b\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u6b21\u306e\u65b9\u6cd5\u3067\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002<span translate=no>_^_0_^_</span>\u3053\u308c\u3092\u88dc\u3046\u305f\u3081\u306b\u3001\u3053\u306e\u8ad6\u6587\u3067\u306f\u30bd\u30d5\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u640d\u5931\u3092\u6b21\u306e\u500d\u306b\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u3092\u63d0\u6848\u3057\u3066\u3044\u307e\u3059</p>\u3002<span translate=no>_^_1_^_</span>\n",
 "<p>Weight for true label cross entropy loss </p>\n": "<p>\u771f\u306e\u30e9\u30d9\u30eb\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u640d\u5931\u3092\u5b9f\u73fe\u3059\u308b\u91cd\u91cf</p>\n",
 "<p>Weighted sum of the two losses </p>\n": "<p>2 \u3064\u306e\u640d\u5931\u306e\u52a0\u91cd\u548c</p>\n",
 "Distilling the Knowledge in a Neural Network": "\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u306e\u77e5\u8b58\u306e\u62bd\u51fa",
 "PyTorch implementation and tutorial of the paper Distilling the Knowledge in a Neural Network.": "PyTorch\u306e\u5b9f\u88c5\u3068\u8ad6\u6587\u300c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u304a\u3051\u308b\u77e5\u8b58\u306e\u62bd\u51fa\u300d\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3002"
}