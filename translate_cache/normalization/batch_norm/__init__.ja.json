{
 "<h1>Batch Normalization</h1>\n": "<h1>\u30d0\u30c3\u30c1\u6b63\u898f\u5316</h1>\n",
 "<h2>Batch Normalization Layer</h2>\n<p>Batch normalization layer <span translate=no>_^_0_^_</span> normalizes the input <span translate=no>_^_1_^_</span> as follows:</p>\n<p>When input <span translate=no>_^_2_^_</span> is a batch of image representations, where <span translate=no>_^_3_^_</span> is the batch size, <span translate=no>_^_4_^_</span> is the number of channels, <span translate=no>_^_5_^_</span> is the height and <span translate=no>_^_6_^_</span> is the width. <span translate=no>_^_7_^_</span> and <span translate=no>_^_8_^_</span>. <span translate=no>_^_9_^_</span></p>\n<p>When input <span translate=no>_^_10_^_</span> is a batch of embeddings, where <span translate=no>_^_11_^_</span> is the batch size and <span translate=no>_^_12_^_</span> is the number of features. <span translate=no>_^_13_^_</span> and <span translate=no>_^_14_^_</span>. <span translate=no>_^_15_^_</span></p>\n<p>When input <span translate=no>_^_16_^_</span> is a batch of a sequence embeddings, where <span translate=no>_^_17_^_</span> is the batch size, <span translate=no>_^_18_^_</span> is the number of features, and <span translate=no>_^_19_^_</span> is the length of the sequence. <span translate=no>_^_20_^_</span> and <span translate=no>_^_21_^_</span>. <span translate=no>_^_22_^_</span></p>\n": "<h2>\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u30ec\u30a4\u30e4\u30fc</h2>\n<p>\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u5c64\u306f\u3001<span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>\u6b21\u306e\u3088\u3046\u306b\u5165\u529b\u3092\u6b63\u898f\u5316\u3057\u307e\u3059\u3002</p>\n<p><span translate=no>_^_2_^_</span>\u5165\u529b\u304c\u30a4\u30e1\u30fc\u30b8\u8868\u73fe\u306e\u30d0\u30c3\u30c1\u306e\u5834\u5408\u3001<span translate=no>_^_3_^_</span>\u306f\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3001<span translate=no>_^_4_^_</span>\u306f\u30c1\u30e3\u30cd\u30eb\u6570\u3001<span translate=no>_^_5_^_</span>\u306f\u9ad8\u3055\u3001<span translate=no>_^_6_^_</span>\u306f\u5e45\u3067\u3059\u3002<span translate=no>_^_7_^_</span>\u3068<span translate=no>_^_8_^_</span>\u3002<span translate=no>_^_9_^_</span></p>\n<p>\u5165\u529b\u304c\u57cb\u3081\u8fbc\u307f\u306e\u30d0\u30c3\u30c1\u306e\u5834\u5408\u3001<span translate=no>_^_10_^_</span>\u306f\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3001<span translate=no>_^_11_^_</span><span translate=no>_^_12_^_</span>\u306f\u30d5\u30a3\u30fc\u30c1\u30e3\u306e\u6570\u3067\u3059\u3002<span translate=no>_^_13_^_</span>\u3068<span translate=no>_^_14_^_</span>\u3002<span translate=no>_^_15_^_</span></p>\n<p><span translate=no>_^_16_^_</span>\u5165\u529b\u304c\u30b7\u30fc\u30b1\u30f3\u30b9\u57cb\u3081\u8fbc\u307f\u306e\u30d0\u30c3\u30c1\u306e\u5834\u5408\u3001<span translate=no>_^_17_^_</span>\u306f\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3001<span translate=no>_^_18_^_</span>\u306f\u30d5\u30a3\u30fc\u30c1\u30e3\u6570\u3001<span translate=no>_^_19_^_</span>\u306f\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u9577\u3055\u3067\u3059\u3002<span translate=no>_^_20_^_</span>\u3068<span translate=no>_^_21_^_</span>\u3002<span translate=no>_^_22_^_</span></p>\n",
 "<h2>Inference</h2>\n": "<h2>\u63a8\u8ad6</h2>\n",
 "<h2>Normalization</h2>\n": "<h2>\u30ce\u30fc\u30de\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3</h2>\n",
 "<h3>Batch Normalization</h3>\n": "<h3>\u30d0\u30c3\u30c1\u6b63\u898f\u5316</h3>\n",
 "<h3>Internal Covariate Shift</h3>\n": "<h3>\u5185\u90e8\u5171\u5909\u91cf\u30b7\u30d5\u30c8</h3>\n",
 "<h3>Normalizing outside gradient computation doesn&#x27;t work</h3>\n": "<h3>\u5916\u90e8\u52fe\u914d\u8a08\u7b97\u306e\u6b63\u898f\u5316\u306f\u6a5f\u80fd\u3057\u307e\u305b\u3093</h3>\n",
 "<p> </p>\n": "<p></p>\n",
 "<p> <span translate=no>_^_0_^_</span> is a tensor of shape <span translate=no>_^_1_^_</span>. <span translate=no>_^_2_^_</span> denotes any number of (possibly 0) dimensions.  For example, in an image (2D) convolution this will be <span translate=no>_^_3_^_</span></p>\n": "<p><span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>\u5f62\u72b6\u306e\u30c6\u30f3\u30bd\u30eb\u3067\u3059\u3002<span translate=no>_^_2_^_</span>\u4efb\u610f\u306e\u6570 (0 \u306e\u5834\u5408\u3082\u3042\u308a\u307e\u3059) \u306e\u6b21\u5143\u3092\u793a\u3057\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u753b\u50cf (2D) \u306e\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059</p>\u3002<span translate=no>_^_3_^_</span>\n",
 "<p> Simple test</p>\n": "<p>\u7c21\u5358\u306a\u30c6\u30b9\u30c8</p>\n",
 "<p><a href=\"https://colab.research.google.com/github/labmlai/annotated_deep_learning_paper_implementations/blob/master/labml_nn/normalization/batch_norm/mnist.ipynb\"><span translate=no>_^_0_^_</span></a></p>\n": "<p><a href=\"https://colab.research.google.com/github/labmlai/annotated_deep_learning_paper_implementations/blob/master/labml_nn/normalization/batch_norm/mnist.ipynb\"><span translate=no>_^_0_^_</span></a></p>\n",
 "<p>Batch normalization also makes the back propagation invariant to the scale of the weights and empirically it improves generalization, so it has regularization effects too.</p>\n": "<p>\u307e\u305f\u3001\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u3067\u306f\u9006\u4f1d\u64ad\u304c\u91cd\u307f\u306e\u30b9\u30b1\u30fc\u30eb\u306b\u5bfe\u3057\u3066\u4e0d\u5909\u306b\u306a\u308a\u3001\u7d4c\u9a13\u7684\u306b\u30b8\u30a7\u30cd\u30e9\u30e9\u30a4\u30ba\u304c\u6539\u5584\u3055\u308c\u308b\u305f\u3081\u3001\u6b63\u5247\u5316\u52b9\u679c\u3082\u3042\u308a\u307e\u3059\u3002</p>\n",
 "<p>By stabilizing the distribution, batch normalization minimizes the internal covariate shift.</p>\n": "<p>\u5206\u5e03\u3092\u5b89\u5b9a\u3055\u305b\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u306f\u5185\u90e8\u5171\u5909\u91cf\u30b7\u30d5\u30c8\u3092\u6700\u5c0f\u9650\u306b\u6291\u3048\u307e\u3059\u3002</p>\n",
 "<p>Calculate the mean across first and last dimension; i.e. the means for each feature <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6700\u521d\u306e\u30c7\u30a3\u30e1\u30f3\u30b7\u30e7\u30f3\u3068\u6700\u5f8c\u306e\u30c7\u30a3\u30e1\u30f3\u30b7\u30e7\u30f3\u306e\u5e73\u5747\u3001\u3064\u307e\u308a\u5404\u30d5\u30a3\u30fc\u30c1\u30e3\u306e\u5e73\u5747\u3092\u8a08\u7b97\u3057\u307e\u3059 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Calculate the squared mean across first and last dimension; i.e. the means for each feature <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6700\u521d\u3068\u6700\u5f8c\u306e\u6b21\u5143\u306e\u4e8c\u4e57\u5e73\u5747\u3001\u3064\u307e\u308a\u5404\u7279\u5fb4\u306e\u5e73\u5747\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002<span translate=no>_^_0_^_</span></p>\n",
 "<p>Create buffers to store exponential moving averages of mean <span translate=no>_^_0_^_</span> and variance <span translate=no>_^_1_^_</span> </p>\n": "<p>\u5e73\u5747\u3068\u5206\u6563\u306e\u6307\u6570\u79fb\u52d5\u5e73\u5747\u3092\u683c\u7d0d\u3059\u308b\u30d0\u30c3\u30d5\u30a1\u30fc\u306e\u4f5c\u6210 <span translate=no>_^_0_^_</span> <span translate=no>_^_1_^_</span></p>\n",
 "<p>Create parameters for <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> for scale and shift </p>\n": "<p><span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>\u30b9\u30b1\u30fc\u30eb\u3068\u30b7\u30d5\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4f5c\u6210</p>\n",
 "<p>Get the batch size </p>\n": "<p>\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3092\u53d6\u5f97</p>\n",
 "<p>Here&#x27;s <a href=\"mnist.html\">the training code</a> and a notebook for training a CNN classifier that uses batch normalization for MNIST dataset.</p>\n": "<p>\u4ee5\u4e0b\u306f<a href=\"mnist.html\">\u3001MNIST \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u3092\u4f7f\u7528\u3059\u308b CNN \u5206\u985e\u5668\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30b3\u30fc\u30c9\u3068\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u3067\u3059</a>\u3002</p>\n",
 "<p>Internal covariate shift will adversely affect training speed because the later layers (<span translate=no>_^_0_^_</span> in the above example) have to adapt to this shifted distribution.</p>\n": "<p>\u5185\u90e8\u5171\u5909\u91cf\u30b7\u30d5\u30c8\u306f\u3001\u5f8c\u306e\u5c64\uff08<span translate=no>_^_0_^_</span>\u4e0a\u306e\u4f8b\uff09\u304c\u3053\u306e\u30b7\u30d5\u30c8\u3057\u305f\u5206\u5e03\u306b\u9069\u5fdc\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u305f\u3081\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u901f\u5ea6\u306b\u60aa\u5f71\u97ff\u3092\u53ca\u307c\u3057\u307e\u3059\u3002</p>\n",
 "<p>It is known that whitening improves training speed and convergence. <em>Whitening</em> is linearly transforming inputs to have zero mean, unit variance, and be uncorrelated.</p>\n": "<p>\u30db\u30ef\u30a4\u30c8\u30cb\u30f3\u30b0\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u30b9\u30d4\u30fc\u30c9\u3068\u30b3\u30f3\u30d0\u30fc\u30b8\u30a7\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u3053\u3068\u304c\u77e5\u3089\u308c\u3066\u3044\u307e\u3059\u3002<em>\u30db\u30ef\u30a4\u30c8\u30cb\u30f3\u30b0\u3068\u306f</em>\u3001\u5165\u529b\u3092\u5e73\u5747\u304c\u30bc\u30ed\u3001\u5358\u4f4d\u5206\u6563\u3001\u7121\u76f8\u95a2\u306b\u306a\u308b\u3088\u3046\u306b\u7dda\u5f62\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u3059</p>\u3002\n",
 "<p>Keep the original shape </p>\n": "<p>\u5143\u306e\u5f62\u3092\u4fdd\u3064</p>\n",
 "<p>Normalize <span translate=no>_^_0_^_</span> </p>\n": "<p>\u30ce\u30fc\u30de\u30e9\u30a4\u30ba <span translate=no>_^_0_^_</span></p>\n",
 "<p>Normalizing each feature to zero mean and unit variance could affect what the layer can represent. As an example paper illustrates that, if the inputs to a sigmoid are normalized most of it will be within <span translate=no>_^_0_^_</span> range where the sigmoid is linear. To overcome this each feature is scaled and shifted by two trained parameters <span translate=no>_^_1_^_</span> and <span translate=no>_^_2_^_</span>. <span translate=no>_^_3_^_</span> where <span translate=no>_^_4_^_</span> is the output of the batch normalization layer.</p>\n": "<p>\u5404\u7279\u5fb4\u91cf\u3092\u5e73\u5747\u30bc\u30ed\u3068\u5358\u4f4d\u5206\u6563\u306b\u6b63\u898f\u5316\u3059\u308b\u3068\u3001\u30ec\u30a4\u30e4\u30fc\u304c\u8868\u73fe\u3067\u304d\u308b\u5185\u5bb9\u306b\u5f71\u97ff\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u793a\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u3001\u30b7\u30b0\u30e2\u30a4\u30c9\u3078\u306e\u5165\u529b\u304c\u6b63\u898f\u5316\u3055\u308c\u308b\u3068\u3001<span translate=no>_^_0_^_</span>\u305d\u306e\u307b\u3068\u3093\u3069\u306f\u30b7\u30b0\u30e2\u30a4\u30c9\u304c\u7dda\u5f62\u3067\u3042\u308b\u7bc4\u56f2\u5185\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3001\u5404\u6a5f\u80fd\u306e\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3068\u30b7\u30d5\u30c8\u3092\u5b66\u7fd2\u6e08\u307f\u306e 2 <span translate=no>_^_1_^_</span> \u3064\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3068\u3067\u8abf\u6574\u3057\u307e\u3059\u3002<span translate=no>_^_2_^_</span><span translate=no>_^_3_^_</span>\u3053\u3053\u3067<span translate=no>_^_4_^_</span>\u3001\u306f\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u5c64\u306e\u51fa\u529b\u3067\u3059</p>\u3002\n",
 "<p>Normalizing outside the gradient computation using pre-computed (detached) means and variances doesn&#x27;t work. For instance. (ignoring variance), let <span translate=no>_^_0_^_</span> where <span translate=no>_^_1_^_</span> and <span translate=no>_^_2_^_</span> is a trained bias and <span translate=no>_^_3_^_</span> is an outside gradient computation (pre-computed constant).</p>\n": "<p>\u4e8b\u524d\u306b\u8a08\u7b97\u3055\u308c\u305f\uff08\u5206\u96e2\u3055\u308c\u305f\uff09\u5e73\u5747\u3068\u5206\u6563\u3092\u4f7f\u7528\u3057\u3066\u52fe\u914d\u8a08\u7b97\u306e\u5916\u3067\u6b63\u898f\u5316\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3002(\u5206\u6563\u306f\u7121\u8996)\u3001<span translate=no>_^_0_^_</span>\u3053\u3053\u3067\u3001<span translate=no>_^_1_^_</span> and <span translate=no>_^_2_^_</span> \u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u6e08\u307f\u306e\u30d0\u30a4\u30a2\u30b9\u3067\u3001\u5916\u90e8\u52fe\u914d\u8a08\u7b97 (\u4e8b\u524d\u306b\u8a08\u7b97\u3055\u308c\u305f\u5b9a\u6570) <span translate=no>_^_3_^_</span> \u3067\u3059</p>\u3002\n",
 "<p>Note that <span translate=no>_^_0_^_</span> has no effect on <span translate=no>_^_1_^_</span>. Therefore, <span translate=no>_^_2_^_</span> will increase or decrease based <span translate=no>_^_3_^_</span>, and keep on growing indefinitely in each training update. The paper notes that similar explosions happen with variances.</p>\n": "<p><span translate=no>_^_0_^_</span>\u306b\u306f\u5f71\u97ff\u3057\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044<span translate=no>_^_1_^_</span>\u3002\u3057\u305f\u304c\u3063\u3066\u3001<span translate=no>_^_2_^_</span>\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092\u66f4\u65b0\u3059\u308b\u305f\u3073\u306b\u5897\u52a0\u307e\u305f\u306f\u6e1b\u5c11\u3057<span translate=no>_^_3_^_</span>\u3001\u7121\u671f\u9650\u306b\u6210\u9577\u3057\u7d9a\u3051\u307e\u3059\u3002\u3053\u306e\u8ad6\u6587\u306f\u3001\u540c\u69d8\u306e\u7206\u767a\u306b\u306f\u3070\u3089\u3064\u304d\u304c\u3042\u308b\u3068\u8ff0\u3079\u3066\u3044\u307e\u3059</p>\u3002\n",
 "<p>Note that when applying batch normalization after a linear transform like <span translate=no>_^_0_^_</span> the bias parameter <span translate=no>_^_1_^_</span> gets cancelled due to normalization. So you can and should omit bias parameter in linear transforms right before the batch normalization.</p>\n": "<p><span translate=no>_^_0_^_</span>\u7dda\u5f62\u5909\u63db\u306e\u3088\u3046\u306a\u7dda\u5f62\u5909\u63db\u306e\u5f8c\u306b\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u3092\u9069\u7528\u3059\u308b\u3068\u3001<span translate=no>_^_1_^_</span>\u6b63\u898f\u5316\u306b\u3088\u308a\u30d0\u30a4\u30a2\u30b9\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u30ad\u30e3\u30f3\u30bb\u30eb\u3055\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u306e\u305f\u3081\u3001\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u306e\u76f4\u524d\u306b\u7dda\u5f62\u5909\u63db\u306e\u30d0\u30a4\u30a2\u30b9\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u307e\u305f\u7701\u7565\u3059\u3079\u304d\u3067\u3059</p>\u3002\n",
 "<p>Reshape into <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5f62\u3092\u5909\u3048\u3066 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Reshape to original and return </p>\n": "<p>\u5143\u306e\u5f62\u306b\u623b\u3057\u3066\u623b\u3059</p>\n",
 "<p>Sanity check to make sure the number of features is the same </p>\n": "<p>\u6a5f\u80fd\u306e\u6570\u304c\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306e\u30b5\u30cb\u30c6\u30a3\u30c1\u30a7\u30c3\u30af</p>\n",
 "<p>Scale and shift <span translate=no>_^_0_^_</span> </p>\n": "<p>\u30b9\u30b1\u30fc\u30eb\u3068\u30b7\u30d5\u30c8 <span translate=no>_^_0_^_</span></p>\n",
 "<p>The paper defines <em>Internal Covariate Shift</em> as the change in the distribution of network activations due to the change in network parameters during training. For example, let&#x27;s say there are two layers <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span>. During the beginning of the training <span translate=no>_^_2_^_</span> outputs (inputs to <span translate=no>_^_3_^_</span>) could be in distribution <span translate=no>_^_4_^_</span>. Then, after some training steps, it could move to <span translate=no>_^_5_^_</span>. This is <em>internal covariate shift</em>.</p>\n": "<p>\u3053\u306e\u8ad6\u6587\u3067\u306f\u3001<em>\u5185\u90e8\u5171\u5909\u91cf\u30b7\u30d5\u30c8\u3092</em>\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u4e2d\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u5909\u5316\u306b\u3088\u308b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30b7\u30e7\u30f3\u306e\u5206\u5e03\u306e\u5909\u5316\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001<span translate=no>_^_0_^_</span>\u3068\u306e 2 \u3064\u306e\u30ec\u30a4\u30e4\u30fc\u304c\u3042\u308b\u3068\u3057\u307e\u3059<span translate=no>_^_1_^_</span>\u3002\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u958b\u59cb\u6642\u306b\u3001<span translate=no>_^_2_^_</span>\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\uff08\u3078\u306e\u30a4\u30f3\u30d7\u30c3\u30c8<span translate=no>_^_3_^_</span>\uff09\u304c\u914d\u5e03\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059<span translate=no>_^_4_^_</span>\u3002\u305d\u306e\u5f8c\u3001\u3044\u304f\u3064\u304b\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u624b\u9806\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u306b\u79fb\u52d5\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059<span translate=no>_^_5_^_</span>\u3002<em>\u3053\u308c\u306f\u5185\u90e8\u5171\u5909\u91cf\u30b7\u30d5\u30c8\u3067\u3059</em></p>\u3002\n",
 "<p>The paper introduces a simplified version which they call <em>Batch Normalization</em>. First simplification is that it normalizes each feature independently to have zero mean and unit variance: <span translate=no>_^_0_^_</span> where <span translate=no>_^_1_^_</span> is the <span translate=no>_^_2_^_</span>-dimensional input.</p>\n": "<p>\u3053\u306e\u8ad6\u6587\u3067\u306f\u3001<em>\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u3068\u547c\u3070\u308c\u308b\u7c21\u7565\u7248\u3092\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3059</em>\u30021 \u3064\u76ee\u306e\u7c21\u7565\u5316\u306f\u3001\u5404\u7279\u5fb4\u91cf\u3092\u72ec\u7acb\u3057\u3066\u5e73\u5747\u304c 0\u3001\u5358\u4f4d\u5206\u6563\u306b\u306a\u308b\u3088\u3046\u306b\u6b63\u898f\u5316\u3059\u308b\u3053\u3068\u3067\u3059\u3002<span translate=no>_^_0_^_</span>\u3053\u3053\u3067\u3001\u306f <span translate=no>_^_1_^_</span>-\u6b21\u5143\u306e\u5165\u529b\u3067\u3059</p>\u3002<span translate=no>_^_2_^_</span>\n",
 "<p>The second simplification is to use estimates of mean <span translate=no>_^_0_^_</span> and variance <span translate=no>_^_1_^_</span> from the mini-batch for normalization; instead of calculating the mean and variance across the whole dataset.</p>\n": "<p>2 \u3064\u76ee\u306e\u7c21\u7565\u5316\u306f\u3001<span translate=no>_^_0_^_</span>\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u5168\u4f53\u306e\u5e73\u5747\u3068\u5206\u6563\u3092\u8a08\u7b97\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001<span translate=no>_^_1_^_</span>\u30df\u30cb\u30d0\u30c3\u30c1\u304b\u3089\u306e\u5e73\u5747\u3068\u5206\u6563\u306e\u63a8\u5b9a\u5024\u3092\u6b63\u898f\u5316\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3059\u3002</p>\n",
 "<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of Batch Normalization from paper  <a href=\"https://papers.labml.ai/paper/1502.03167\">Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift</a>.</p>\n": "<p>\u3053\u308c\u306f\u3001\u300c\u30d0\u30c3\u30c1\u6b63\u898f\u5316<a href=\"https://papers.labml.ai/paper/1502.03167\">:\u5185\u90e8\u5171\u5909\u91cf\u30b7\u30d5\u30c8\u3092\u6e1b\u3089\u3059\u3053\u3068\u306b\u3088\u308b\u30c7\u30a3\u30fc\u30d7\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u9ad8\u901f\u5316\u300d<a href=\"https://pytorch.org\">\u3068\u3044\u3046\u8ad6\u6587\u304b\u3089\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u3092PyTorch\u3067\u5b9f\u88c5\u3057\u305f\u3082\u306e\u3067\u3059</a></a>\u3002</p>\n",
 "<p>Update exponential moving averages </p>\n": "<p>\u6307\u6570\u79fb\u52d5\u5e73\u5747\u306e\u66f4\u65b0</p>\n",
 "<p>Use exponential moving averages as estimates </p>\n": "<p>\u6307\u6570\u79fb\u52d5\u5e73\u5747\u3092\u63a8\u5b9a\u5024\u3068\u3057\u3066\u4f7f\u7528</p>\n",
 "<p>Variance for each feature <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5404\u6a5f\u80fd\u306e\u5dee\u7570 <span translate=no>_^_0_^_</span></p>\n",
 "<p>We need to know <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> in order to perform the normalization. So during inference, you either need to go through the whole (or part of) dataset and find the mean and variance, or you can use an estimate calculated during training. The usual practice is to calculate an exponential moving average of mean and variance during the training phase and use that for inference.</p>\n": "<p>\u6b63\u898f\u5316\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f<span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>\u3001\u3068\u3092\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u63a8\u8ad6\u6642\u306b\u306f\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u5168\u4f53 (\u307e\u305f\u306f\u4e00\u90e8) \u3092\u8abf\u3079\u3066\u5e73\u5747\u3068\u5206\u6563\u3092\u6c42\u3081\u308b\u304b\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u4e2d\u306b\u8a08\u7b97\u3055\u308c\u305f\u63a8\u5b9a\u5024\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u901a\u5e38\u306f\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u6bb5\u968e\u3067\u5e73\u5747\u3068\u5206\u6563\u306e\u6307\u6570\u79fb\u52d5\u5e73\u5747\u3092\u8a08\u7b97\u3057\u3001\u305d\u308c\u3092\u63a8\u8ad6\u306b\u4f7f\u7528\u3057\u307e\u3059</p>\u3002\n",
 "<p>We will calculate the mini-batch mean and variance if we are in training mode or if we have not tracked exponential moving averages </p>\n": "<p>\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30e2\u30fc\u30c9\u306e\u5834\u5408\u3001\u307e\u305f\u306f\u6307\u6570\u79fb\u52d5\u5e73\u5747\u3092\u8ffd\u8de1\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u30df\u30cb\u30d0\u30c3\u30c1\u306e\u5e73\u5747\u3068\u5206\u6563\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002</p>\n",
 "<p>Whitening is computationally expensive because you need to de-correlate and the gradients must flow through the full whitening calculation.</p>\n": "<p>\u30db\u30ef\u30a4\u30c8\u30cb\u30f3\u30b0\u306f\u3001\u76f8\u95a2\u3092\u306a\u304f\u3059\u5fc5\u8981\u304c\u3042\u308a\u3001\u52fe\u914d\u304c\u30db\u30ef\u30a4\u30c8\u30cb\u30f3\u30b0\u306e\u8a08\u7b97\u5168\u4f53\u3092\u901a\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3001\u8a08\u7b97\u91cf\u304c\u591a\u304f\u306a\u308a\u307e\u3059\u3002</p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of features in the input </li>\n<li><span translate=no>_^_1_^_</span> is <span translate=no>_^_2_^_</span>, used in <span translate=no>_^_3_^_</span> for numerical stability </li>\n<li><span translate=no>_^_4_^_</span> is the momentum in taking the exponential moving average </li>\n<li><span translate=no>_^_5_^_</span> is whether to scale and shift the normalized value </li>\n<li><span translate=no>_^_6_^_</span> is whether to calculate the moving averages or mean and variance</li></ul>\n<p>We&#x27;ve tried to use the same names for arguments as PyTorch <span translate=no>_^_7_^_</span> implementation.</p>\n": "<ul><li><span translate=no>_^_0_^_</span>\u306f\u5165\u529b\u5185\u306e\u7279\u5fb4\u306e\u6570\u3067\u3059</li>\n<li><span translate=no>_^_1_^_</span><span translate=no>_^_3_^_</span>\u6570\u5024\u306e\u5b89\u5b9a\u6027\u306e\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059 <span translate=no>_^_2_^_</span></li>\n<li><span translate=no>_^_4_^_</span>\u6307\u6570\u79fb\u52d5\u5e73\u5747\u3092\u53d6\u308b\u3068\u304d\u306e\u52e2\u3044\u3067\u3059</li>\n<li><span translate=no>_^_5_^_</span>\u6b63\u898f\u5316\u3055\u308c\u305f\u5024\u3092\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u3066\u30b7\u30d5\u30c8\u3059\u308b\u304b\u3069\u3046\u304b\u3067\u3059</li>\n<li><span translate=no>_^_6_^_</span>\u79fb\u52d5\u5e73\u5747\u3092\u8a08\u7b97\u3059\u308b\u304b\u3001\u5e73\u5747\u3068\u5206\u6563\u3092\u8a08\u7b97\u3059\u308b\u304b\u3067\u3059</li></ul>\n<p>\u5f15\u6570\u306b\u306f PyTorch <span translate=no>_^_7_^_</span> \u5b9f\u88c5\u3068\u540c\u3058\u540d\u524d\u3092\u4f7f\u7528\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f\u3002</p>\n",
 "A PyTorch implementation/tutorial of batch normalization.": "\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u306e PyTorch \u5b9f\u88c5/\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3002",
 "Batch Normalization": "\u30d0\u30c3\u30c1\u6b63\u898f\u5316"
}