{
 "<h1>Batch-Channel Normalization</h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of Batch-Channel Normalization from the paper  <a href=\"https://papers.labml.ai/paper/1903.10520\">Micro-Batch Training with Batch-Channel Normalization and Weight Standardization</a>. We also have an <a href=\"../weight_standardization/index.html\">annotated implementation of Weight Standardization</a>.</p>\n<p>Batch-Channel Normalization performs batch normalization followed by a channel normalization (similar to a <a href=\"../group_norm/index.html\">Group Normalization</a>. When the batch size is small a running mean and variance is used for batch normalization.</p>\n<p>Here is <a href=\"../weight_standardization/experiment.html\">the training code</a> for training a VGG network that uses weight standardization to classify CIFAR-10 data.</p>\n<p><a href=\"https://colab.research.google.com/github/labmlai/annotated_deep_learning_paper_implementations/blob/master/labml_nn/normalization/weight_standardization/experiment.ipynb\"><span translate=no>_^_0_^_</span></a></p>\n": "<h1>\u30d0\u30c3\u30c1\u30c1\u30e3\u30cd\u30eb\u6b63\u898f\u5316</h1>\n<p>\u3053\u308c\u306f\u3001\u8ad6\u6587\u300c<a href=\"https://papers.labml.ai/paper/1903.10520\">\u30d0\u30c3\u30c1\u30c1\u30e3\u30cd\u30eb\u6b63\u898f\u5316\u3068\u91cd\u307f\u6a19\u6e96\u5316\u306b\u3088\u308b\u30de\u30a4\u30af\u30ed\u30d0\u30c3\u30c1\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u300d<a href=\"https://pytorch.org\">\u306b\u3042\u308b\u30d0\u30c3\u30c1\u30c1\u30e3\u30cd\u30eb\u6b63\u898f\u5316\u306ePyTorch\u5b9f\u88c5\u3067\u3059</a></a>\u3002\u307e\u305f\u3001<a href=\"../weight_standardization/index.html\">\u91cd\u91cf\u6a19\u6e96\u5316\u306e\u6ce8\u91c8\u4ed8\u304d\u5b9f\u88c5\u3082\u3042\u308a\u307e\u3059\u3002</a></p>\n<p><a href=\"../group_norm/index.html\">\u30d0\u30c3\u30c1\u30c1\u30e3\u30cd\u30eb\u6b63\u898f\u5316\u306f\u3001\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u306e\u5f8c\u306b\u30c1\u30e3\u30cd\u30eb\u6b63\u898f\u5316\u3092\u884c\u3044\u307e\u3059 (\u30b0\u30eb\u30fc\u30d7\u6b63\u898f\u5316\u3068\u540c\u69d8)\u3002</a>\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u304c\u5c0f\u3055\u3044\u5834\u5408\u306f\u3001\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u306b\u5b9f\u884c\u5e73\u5747\u3068\u5206\u6563\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059</p>\u3002\n<p>\u91cd\u307f\u6a19\u6e96\u5316\u3092\u4f7f\u7528\u3057\u3066 CIFAR-10 \u30c7\u30fc\u30bf\u3092\u5206\u985e\u3059\u308b VGG <a href=\"../weight_standardization/experiment.html\">\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30b3\u30fc\u30c9\u3092\u6b21\u306b\u793a\u3057\u307e\u3059</a>\u3002</p>\n<p><a href=\"https://colab.research.google.com/github/labmlai/annotated_deep_learning_paper_implementations/blob/master/labml_nn/normalization/weight_standardization/experiment.ipynb\"><span translate=no>_^_0_^_</span></a></p>\n",
 "<h2>Batch-Channel Normalization</h2>\n<p>This first performs a batch normalization - either <a href=\"../batch_norm/index.html\">normal batch norm</a> or a batch norm with estimated mean and variance (exponential mean/variance over multiple batches). Then a channel normalization performed.</p>\n": "<h2>\u30d0\u30c3\u30c1\u30c1\u30e3\u30cd\u30eb\u6b63\u898f\u5316</h2>\n<p>\u3053\u308c\u306f\u6700\u521d\u306b\u30d0\u30c3\u30c1\u6b63\u898f\u5316\u3092\u884c\u3044\u307e\u3059\u3002<a href=\"../batch_norm/index.html\">\u901a\u5e38\u306e\u30d0\u30c3\u30c1\u30ce\u30eb\u30e0\u304b</a>\u3001\u63a8\u5b9a\u5e73\u5747\u3068\u5206\u6563 (\u8907\u6570\u306e\u30d0\u30c3\u30c1\u306b\u308f\u305f\u308b\u6307\u6570\u95a2\u6570\u7684\u5e73\u5747/\u5206\u6563) \u3092\u542b\u3080\u30d0\u30c3\u30c1\u30ce\u30eb\u30e0\u306e\u3069\u3061\u3089\u304b\u3067\u3059\u3002\u6b21\u306b\u3001\u30c1\u30e3\u30cd\u30eb\u6b63\u898f\u5316\u304c\u5b9f\u884c\u3055\u308c\u307e\u3057\u305f</p>\u3002\n",
 "<h2>Channel Normalization</h2>\n<p>This is similar to <a href=\"../group_norm/index.html\">Group Normalization</a> but affine transform is done group wise.</p>\n": "<h2>\u30c1\u30e3\u30f3\u30cd\u30eb\u6b63\u898f\u5316</h2>\n<p><a href=\"../group_norm/index.html\">\u3053\u308c\u306f\u30b0\u30eb\u30fc\u30d7\u6b63\u898f\u5316\u306b\u4f3c\u3066\u3044\u307e\u3059\u304c</a>\u3001\u30a2\u30d5\u30a3\u30f3\u5909\u63db\u306f\u30b0\u30eb\u30fc\u30d7\u3054\u3068\u306b\u884c\u308f\u308c\u307e\u3059\u3002</p>\n",
 "<h2>Estimated Batch Normalization</h2>\n<p>When input <span translate=no>_^_0_^_</span> is a batch of image representations, where <span translate=no>_^_1_^_</span> is the batch size, <span translate=no>_^_2_^_</span> is the number of channels, <span translate=no>_^_3_^_</span> is the height and <span translate=no>_^_4_^_</span> is the width. <span translate=no>_^_5_^_</span> and <span translate=no>_^_6_^_</span>.</p>\n<p><span translate=no>_^_7_^_</span></p>\n<p>where,</p>\n<span translate=no>_^_8_^_</span><p>are the running mean and variances. <span translate=no>_^_9_^_</span> is the momentum for calculating the exponential mean.</p>\n": "<h2>\u63a8\u5b9a\u30d0\u30c3\u30c1\u6b63\u898f\u5316</h2>\n<p><span translate=no>_^_0_^_</span>\u5165\u529b\u304c\u30a4\u30e1\u30fc\u30b8\u8868\u73fe\u306e\u30d0\u30c3\u30c1\u306e\u5834\u5408\u3001<span translate=no>_^_1_^_</span>\u306f\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3001<span translate=no>_^_2_^_</span>\u306f\u30c1\u30e3\u30cd\u30eb\u6570\u3001<span translate=no>_^_3_^_</span>\u306f\u9ad8\u3055\u3001<span translate=no>_^_4_^_</span>\u306f\u5e45\u3067\u3059\u3002<span translate=no>_^_5_^_</span>\u3068<span translate=no>_^_6_^_</span>\u3002</p>\n<p><span translate=no>_^_7_^_</span></p>\n<p>\u3069\u3053\u3001</p>\n<span translate=no>_^_8_^_</span><p>\u306f\u79fb\u52d5\u5e73\u5747\u3068\u5206\u6563\u3067\u3059\u3002<span translate=no>_^_9_^_</span>\u6307\u6570\u5e73\u5747\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306e\u904b\u52d5\u91cf\u3067\u3059\u3002</p>\n",
 "<p> <span translate=no>_^_0_^_</span> is a tensor of shape <span translate=no>_^_1_^_</span>. <span translate=no>_^_2_^_</span> denotes any number of (possibly 0) dimensions.  For example, in an image (2D) convolution this will be <span translate=no>_^_3_^_</span></p>\n": "<p><span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>\u5f62\u72b6\u306e\u30c6\u30f3\u30bd\u30eb\u3067\u3059\u3002<span translate=no>_^_2_^_</span>\u4efb\u610f\u306e\u6570 (0 \u306e\u5834\u5408\u3082\u3042\u308a\u307e\u3059) \u306e\u6b21\u5143\u3092\u793a\u3057\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u753b\u50cf (2D) \u306e\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059</p>\u3002<span translate=no>_^_3_^_</span>\n",
 "<p>Calculate the mean across first and last dimensions; <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6700\u521d\u306e\u6b21\u5143\u3068\u6700\u5f8c\u306e\u6b21\u5143\u306e\u5e73\u5747\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002<span translate=no>_^_0_^_</span></p>\n",
 "<p>Calculate the mean across last dimension; i.e. the means for each sample and channel group <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6700\u5f8c\u306e\u6b21\u5143\u306e\u5e73\u5747\u3001\u3064\u307e\u308a\u5404\u30b5\u30f3\u30d7\u30eb\u3068\u30c1\u30e3\u30cd\u30eb\u30b0\u30eb\u30fc\u30d7\u306e\u5e73\u5747\u3092\u8a08\u7b97\u3057\u307e\u3059 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Calculate the squared mean across first and last dimensions; <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6700\u521d\u306e\u6b21\u5143\u3068\u6700\u5f8c\u306e\u6b21\u5143\u306e\u4e8c\u4e57\u5e73\u5747\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002<span translate=no>_^_0_^_</span></p>\n",
 "<p>Calculate the squared mean across last dimension; i.e. the means for each sample and channel group <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6700\u5f8c\u306e\u6b21\u5143\u306e\u4e8c\u4e57\u5e73\u5747\u3001\u3064\u307e\u308a\u5404\u30b5\u30f3\u30d7\u30eb\u3068\u30c1\u30e3\u30cd\u30eb\u30b0\u30eb\u30fc\u30d7\u306e\u5e73\u5747\u3092\u8a08\u7b97\u3057\u307e\u3059 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Channel normalization </p>\n": "<p>\u30c1\u30e3\u30f3\u30cd\u30eb\u6b63\u898f\u5316</p>\n",
 "<p>Channel wise transformation parameters </p>\n": "<p>\u30c1\u30e3\u30f3\u30cd\u30eb\u5358\u4f4d\u306e\u5909\u63db\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc</p>\n",
 "<p>Get the batch size </p>\n": "<p>\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3092\u53d6\u5f97</p>\n",
 "<p>Keep old shape </p>\n": "<p>\u53e4\u3044\u5f62\u3092\u4fdd\u3064</p>\n",
 "<p>Keep the original shape </p>\n": "<p>\u5143\u306e\u5f62\u3092\u4fdd\u3064</p>\n",
 "<p>No backpropagation through <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> </p>\n": "<p>\u304a\u3088\u3073\u3092\u4ecb\u3057\u305f\u30d0\u30c3\u30af\u30d7\u30ed\u30d1\u30b2\u30fc\u30b7\u30e7\u30f3\u306a\u3057 <span translate=no>_^_0_^_</span> <span translate=no>_^_1_^_</span></p>\n",
 "<p>Normalize <span translate=no>_^_0_^_</span> </p>\n": "<p>\u30ce\u30fc\u30de\u30e9\u30a4\u30ba <span translate=no>_^_0_^_</span></p>\n",
 "<p>Parameters for affine transformation.</p>\n<p><em>Note that these transforms are per group, unlike in group norm where they are transformed channel-wise.</em> </p>\n": "<p>\u30a2\u30d5\u30a3\u30f3\u5909\u63db\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3002</p>\n<p><em>\u3053\u308c\u3089\u306e\u5909\u63db\u306f\u3001\u30c1\u30e3\u30cd\u30eb\u3054\u3068\u306b\u5909\u63db\u3055\u308c\u308b\u30b0\u30eb\u30fc\u30d7\u30ce\u30eb\u30e0\u3068\u306f\u7570\u306a\u308a\u3001\u30b0\u30eb\u30fc\u30d7\u3054\u3068\u306b\u884c\u308f\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002</em></p>\n",
 "<p>Reshape into <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5f62\u3092\u5909\u3048\u3066 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Reshape to original and return </p>\n": "<p>\u5143\u306e\u5f62\u306b\u623b\u3057\u3066\u623b\u3059</p>\n",
 "<p>Sanity check to make sure the number of features is correct </p>\n": "<p>\u6a5f\u80fd\u306e\u6570\u304c\u6b63\u3057\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306e\u30b5\u30cb\u30c6\u30a3\u30c1\u30a7\u30c3\u30af</p>\n",
 "<p>Sanity check to make sure the number of features is the same </p>\n": "<p>\u6a5f\u80fd\u306e\u6570\u304c\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306e\u30b5\u30cb\u30c6\u30a3\u30c1\u30a7\u30c3\u30af</p>\n",
 "<p>Scale and shift <span translate=no>_^_0_^_</span> </p>\n": "<p>\u30b9\u30b1\u30fc\u30eb\u3068\u30b7\u30d5\u30c8 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Scale and shift group-wise <span translate=no>_^_0_^_</span> </p>\n": "<p>\u30b0\u30eb\u30fc\u30d7\u3054\u3068\u306e\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3068\u30b7\u30d5\u30c8 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Tensors for <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span>\u304a\u3088\u3073\u306e\u30c6\u30f3\u30bd\u30eb <span translate=no>_^_1_^_</span></p>\n",
 "<p>Update <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> in training mode only </p>\n": "<p><span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u304a\u3088\u3073\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30e2\u30fc\u30c9\u306e\u307f</p>\n",
 "<p>Update exponential moving averages</p>\n<span translate=no>_^_0_^_</span><p> </p>\n": "<p>\u6307\u6570\u79fb\u52d5\u5e73\u5747\u306e\u66f4\u65b0</p>\n<span translate=no>_^_0_^_</span><p></p>\n",
 "<p>Use estimated batch norm or normal batch norm. </p>\n": "<p>\u63a8\u5b9a\u30d0\u30c3\u30c1\u30ce\u30eb\u30e0\u307e\u305f\u306f\u901a\u5e38\u306e\u30d0\u30c3\u30c1\u30ce\u30eb\u30e0\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>\n",
 "<p>Variance for each feature <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5404\u6a5f\u80fd\u306e\u5dee\u7570 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Variance for each sample and feature group <span translate=no>_^_0_^_</span> </p>\n": "<p>\u5404\u30b5\u30f3\u30d7\u30eb\u3068\u6a5f\u80fd\u30b0\u30eb\u30fc\u30d7\u306e\u5dee\u7570 <span translate=no>_^_0_^_</span></p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of features in the input </li>\n<li><span translate=no>_^_1_^_</span> is <span translate=no>_^_2_^_</span>, used in <span translate=no>_^_3_^_</span> for numerical stability </li>\n<li><span translate=no>_^_4_^_</span> is the momentum in taking the exponential moving average </li>\n<li><span translate=no>_^_5_^_</span> is whether to use running mean and variance for batch norm</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u306f\u5165\u529b\u5185\u306e\u7279\u5fb4\u306e\u6570\u3067\u3059</li>\n<li><span translate=no>_^_1_^_</span><span translate=no>_^_3_^_</span>\u6570\u5024\u306e\u5b89\u5b9a\u6027\u306e\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059 <span translate=no>_^_2_^_</span></li>\n<li><span translate=no>_^_4_^_</span>\u6307\u6570\u79fb\u52d5\u5e73\u5747\u3092\u53d6\u308b\u3068\u304d\u306e\u52e2\u3044\u3067\u3059</li>\n<li><span translate=no>_^_5_^_</span>\u30d0\u30c3\u30c1\u30ce\u30eb\u30e0\u306b\u5b9f\u884c\u5e73\u5747\u3068\u5206\u6563\u3092\u4f7f\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3067\u3059</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of features in the input </li>\n<li><span translate=no>_^_1_^_</span> is the number of groups the features are divided into </li>\n<li><span translate=no>_^_2_^_</span> is <span translate=no>_^_3_^_</span>, used in <span translate=no>_^_4_^_</span> for numerical stability </li>\n<li><span translate=no>_^_5_^_</span> is the momentum in taking the exponential moving average </li>\n<li><span translate=no>_^_6_^_</span> is whether to use running mean and variance for batch norm</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u306f\u5165\u529b\u5185\u306e\u7279\u5fb4\u306e\u6570\u3067\u3059</li>\n<li><span translate=no>_^_1_^_</span>\u30d5\u30a3\u30fc\u30c1\u30e3\u304c\u5206\u5272\u3055\u308c\u3066\u3044\u308b\u30b0\u30eb\u30fc\u30d7\u306e\u6570\u3067\u3059</li>\n<li><span translate=no>_^_2_^_</span><span translate=no>_^_4_^_</span>\u6570\u5024\u306e\u5b89\u5b9a\u6027\u306e\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059 <span translate=no>_^_3_^_</span></li>\n<li><span translate=no>_^_5_^_</span>\u6307\u6570\u79fb\u52d5\u5e73\u5747\u3092\u53d6\u308b\u3068\u304d\u306e\u52e2\u3044\u3067\u3059</li>\n<li><span translate=no>_^_6_^_</span>\u30d0\u30c3\u30c1\u30ce\u30eb\u30e0\u306b\u5b9f\u884c\u5e73\u5747\u3068\u5206\u6563\u3092\u4f7f\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3067\u3059</li></ul>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of groups the features are divided into </li>\n<li><span translate=no>_^_1_^_</span> is the number of features in the input </li>\n<li><span translate=no>_^_2_^_</span> is <span translate=no>_^_3_^_</span>, used in <span translate=no>_^_4_^_</span> for numerical stability </li>\n<li><span translate=no>_^_5_^_</span> is whether to scale and shift the normalized value</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span>\u30d5\u30a3\u30fc\u30c1\u30e3\u304c\u5206\u5272\u3055\u308c\u3066\u3044\u308b\u30b0\u30eb\u30fc\u30d7\u306e\u6570\u3067\u3059</li>\n<li><span translate=no>_^_1_^_</span>\u306f\u5165\u529b\u5185\u306e\u7279\u5fb4\u306e\u6570\u3067\u3059</li>\n<li><span translate=no>_^_2_^_</span><span translate=no>_^_4_^_</span>\u6570\u5024\u306e\u5b89\u5b9a\u6027\u306e\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059 <span translate=no>_^_3_^_</span></li>\n<li><span translate=no>_^_5_^_</span>\u6b63\u898f\u5316\u3055\u308c\u305f\u5024\u3092\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u3066\u30b7\u30d5\u30c8\u3059\u308b\u304b\u3069\u3046\u304b\u3067\u3059</li></ul>\n",
 "A PyTorch implementation/tutorial of Batch-Channel Normalization.": "\u30d0\u30c3\u30c1\u30c1\u30e3\u30cd\u30eb\u6b63\u898f\u5316\u306ePyTorch\u5b9f\u88c5/\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3002",
 "Batch-Channel Normalization": "\u30d0\u30c3\u30c1\u30c1\u30e3\u30cd\u30eb\u6b63\u898f\u5316"
}