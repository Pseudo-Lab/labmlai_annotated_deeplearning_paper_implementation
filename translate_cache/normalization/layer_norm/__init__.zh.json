{
 "<h1>Layer Normalization</h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of <a href=\"https://papers.labml.ai/paper/1607.06450\">Layer Normalization</a>.</p>\n<h3>Limitations of <a href=\"../batch_norm/index.html\">Batch Normalization</a></h3>\n<ul><li>You need to maintain running means. </li>\n<li>Tricky for RNNs. Do you need different normalizations for each step? </li>\n<li>Doesn&#x27;t work with small batch sizes; large NLP models are usually trained with small batch sizes. </li>\n<li>Need to compute means and variances across devices in distributed training.</li></ul>\n<h2>Layer Normalization</h2>\n<p>Layer normalization is a simpler normalization method that works on a wider range of settings. Layer normalization transforms the inputs to have zero mean and unit variance across the features. <em>Note that batch normalization fixes the zero mean and unit variance for each element.</em> Layer normalization does it for each batch across all elements.</p>\n<p>Layer normalization is generally used for NLP tasks.</p>\n<p>We have used layer normalization in most of the <a href=\"../../transformers/gpt/index.html\">transformer implementations</a>.</p>\n": "<h1>\u5c42\u89c4\u8303\u5316</h1>\n<p>\u8fd9\u662f<a href=\"https://papers.labml.ai/paper/1607.06450\">\u5c42\u89c4\u8303\u5316</a>\u7684 <a href=\"https://pytorch.org\">PyTorch</a> \u5b9e\u73b0\u3002</p>\n<h3><a href=\"../batch_norm/index.html\">\u6279\u91cf\u6807\u51c6\u5316\u7684</a>\u5c40\u9650\u6027</h3>\n<ul><li>\u4f60\u9700\u8981\u4fdd\u6301\u8dd1\u6b65\u624b\u6bb5\u3002</li>\n<li>\u5bf9\u4e8e RNN \u6765\u8bf4\u5f88\u68d8\u624b\u3002\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u9700\u8981\u4e0d\u540c\u7684\u89c4\u8303\u5316\u5417\uff1f</li>\n<li>\u4e0d\u9002\u7528\u4e8e\u5c0f\u6279\u91cf\uff1b\u5927\u578b NLP \u6a21\u578b\u901a\u5e38\u4f7f\u7528\u5c0f\u6279\u91cf\u8fdb\u884c\u8bad\u7ec3\u3002</li>\n<li>\u9700\u8981\u5728\u5206\u5e03\u5f0f\u8bad\u7ec3\u4e2d\u8ba1\u7b97\u8bbe\u5907\u95f4\u7684\u5747\u503c\u548c\u65b9\u5dee\u3002</li></ul>\n<h2>\u5c42\u89c4\u8303\u5316</h2>\n<p>\u56fe\u5c42\u5f52\u4e00\u5316\u662f\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u5f52\u4e00\u5316\u65b9\u6cd5\uff0c\u9002\u7528\u4e8e\u66f4\u5e7f\u6cdb\u7684\u8bbe\u7f6e\u3002\u56fe\u5c42\u5f52\u4e00\u5316\u4f1a\u5c06\u8f93\u5165\u53d8\u6362\u4e3a\u5404\u8981\u7d20\u7684\u5747\u503c\u548c\u5355\u4f4d\u65b9\u5dee\u4e3a\u96f6\u3002<em>\u8bf7\u6ce8\u610f\uff0c\u6279\u91cf\u5f52\u4e00\u5316\u4fee\u590d\u4e86\u6bcf\u4e2a\u5143\u7d20\u7684\u96f6\u5747\u503c\u548c\u5355\u4f4d\u65b9\u5dee\u3002</em>\u5c42\u5f52\u4e00\u5316\u5bf9\u6240\u6709\u5143\u7d20\u7684\u6bcf\u4e2a\u6279\u6b21\u6267\u884c\u6b64\u64cd\u4f5c\u3002</p>\n<p>\u5c42\u5f52\u4e00\u5316\u901a\u5e38\u7528\u4e8e NLP \u4efb\u52a1\u3002</p>\n<p>\u6211\u4eec\u5728\u5927\u591a\u6570<a href=\"../../transformers/gpt/index.html\">\u53d8\u538b\u5668\u5b9e\u73b0</a>\u4e2d\u90fd\u4f7f\u7528\u4e86\u5c42\u5f52\u4e00\u5316\u3002</p>\n",
 "<h2>Layer Normalization</h2>\n<p>Layer normalization <span translate=no>_^_0_^_</span> normalizes the input <span translate=no>_^_1_^_</span> as follows:</p>\n<p>When input <span translate=no>_^_2_^_</span> is a batch of embeddings, where <span translate=no>_^_3_^_</span> is the batch size and <span translate=no>_^_4_^_</span> is the number of features. <span translate=no>_^_5_^_</span> and <span translate=no>_^_6_^_</span>. <span translate=no>_^_7_^_</span></p>\n<p>When input <span translate=no>_^_8_^_</span> is a batch of a sequence of embeddings, where <span translate=no>_^_9_^_</span> is the batch size, <span translate=no>_^_10_^_</span> is the number of channels, <span translate=no>_^_11_^_</span> is the length of the sequence. <span translate=no>_^_12_^_</span> and <span translate=no>_^_13_^_</span>. <span translate=no>_^_14_^_</span></p>\n<p>When input <span translate=no>_^_15_^_</span> is a batch of image representations, where <span translate=no>_^_16_^_</span> is the batch size, <span translate=no>_^_17_^_</span> is the number of channels, <span translate=no>_^_18_^_</span> is the height and <span translate=no>_^_19_^_</span> is the width. This is not a widely used scenario. <span translate=no>_^_20_^_</span> and <span translate=no>_^_21_^_</span>. <span translate=no>_^_22_^_</span></p>\n": "<h2>\u5c42\u89c4\u8303\u5316</h2>\n<p>\u56fe\u5c42<span translate=no>_^_0_^_</span>\u5f52\u4e00\u5316\u5c06\u8f93\u5165\u5f52\u4e00\u5316<span translate=no>_^_1_^_</span>\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p>\n<p>\u5f53\u8f93\u5165<span translate=no>_^_2_^_</span>\u662f\u4e00\u6279\u5d4c\u5165\u65f6\uff0c\u5176\u4e2d<span translate=no>_^_3_^_</span>\u662f\u6279\u6b21\u5927\u5c0f\uff0c<span translate=no>_^_4_^_</span>\u662f\u8981\u7d20\u7684\u6570\u91cf\u3002<span translate=no>_^_5_^_</span>\u548c<span translate=no>_^_6_^_</span>\u3002<span translate=no>_^_7_^_</span></p>\n<p>\u5f53 input<span translate=no>_^_8_^_</span> \u662f\u5d4c\u5165\u5e8f\u5217\u4e2d\u7684\u4e00\u6279\u65f6\uff0c\u5176\u4e2d<span translate=no>_^_9_^_</span><span translate=no>_^_10_^_</span>\u662f\u6279\u6b21\u5927\u5c0f\uff0c<span translate=no>_^_11_^_</span>\u662f\u901a\u9053\u6570\uff0c\u662f\u987a\u5e8f\u3002<span translate=no>_^_12_^_</span>\u548c<span translate=no>_^_13_^_</span>\u3002<span translate=no>_^_14_^_</span></p>\n<p>\u5f53\u8f93\u5165<span translate=no>_^_15_^_</span>\u662f\u4e00\u6279\u56fe\u50cf\u8868\u793a\u65f6\uff0c\u5176\u4e2d<span translate=no>_^_16_^_</span>\u662f\u6279\u6b21\u5927\u5c0f\uff0c<span translate=no>_^_17_^_</span>\u662f\u901a\u9053\u6570\uff0c<span translate=no>_^_18_^_</span>\u662f\u9ad8\u5ea6\u548c<span translate=no>_^_19_^_</span>\u662f\u5bbd\u5ea6\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5e7f\u6cdb\u4f7f\u7528\u7684\u573a\u666f\u3002<span translate=no>_^_20_^_</span>\u548c<span translate=no>_^_21_^_</span>\u3002<span translate=no>_^_22_^_</span></p>\n",
 "<p> </p>\n": "<p></p>\n",
 "<p> <span translate=no>_^_0_^_</span> is a tensor of shape <span translate=no>_^_1_^_</span>. <span translate=no>_^_2_^_</span> could be any number of dimensions.  For example, in an NLP task this will be <span translate=no>_^_3_^_</span></p>\n": "<p><span translate=no>_^_0_^_</span>\u662f\u5f62\u72b6\u5f20\u91cf<span translate=no>_^_1_^_</span>\u3002<span translate=no>_^_2_^_</span>\u53ef\u4ee5\u662f\u4efb\u610f\u6570\u91cf\u7684\u7ef4\u5ea6\u3002\u4f8b\u5982\uff0c\u5728 NLP \u4efb\u52a1\u4e2d\uff0c\u8fd9\u5c06\u662f<span translate=no>_^_3_^_</span></p>\n",
 "<p> Simple test</p>\n": "<p>\u7b80\u5355\u6d4b\u8bd5</p>\n",
 "<p>Calculate the mean of all elements; i.e. the means for each element <span translate=no>_^_0_^_</span> </p>\n": "<p>\u8ba1\u7b97\u6240\u6709\u5143\u7d20\u7684\u5747\u503c\uff1b\u5373\u6bcf\u4e2a\u5143\u7d20\u7684\u5747\u503c<span translate=no>_^_0_^_</span></p>\n",
 "<p>Calculate the squared mean of all elements; i.e. the means for each element <span translate=no>_^_0_^_</span> </p>\n": "<p>\u8ba1\u7b97\u6240\u6709\u5143\u7d20\u7684\u5747\u65b9\u503c\uff1b\u5373\u6bcf\u4e2a\u5143\u7d20\u7684\u5747\u503c<span translate=no>_^_0_^_</span></p>\n",
 "<p>Convert <span translate=no>_^_0_^_</span> to <span translate=no>_^_1_^_</span> </p>\n": "<p>\u8f6c\u6362<span translate=no>_^_0_^_</span>\u4e3a<span translate=no>_^_1_^_</span></p>\n",
 "<p>Create parameters for <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> for gain and bias </p>\n": "<p>\u4e3a\u589e\u76ca<span translate=no>_^_0_^_</span>\u548c<span translate=no>_^_1_^_</span>\u504f\u7f6e\u521b\u5efa\u53c2\u6570\u548c\u53c2\u6570</p>\n",
 "<p>Normalize <span translate=no>_^_0_^_</span> </p>\n": "<p>\u89c4\u8303\u5316<span translate=no>_^_0_^_</span></p>\n",
 "<p>Sanity check to make sure the shapes match </p>\n": "<p>\u8fdb\u884c\u5065\u5168\u6027\u68c0\u67e5\u4ee5\u786e\u4fdd\u5f62\u72b6\u5339\u914d</p>\n",
 "<p>Scale and shift <span translate=no>_^_0_^_</span> </p>\n": "<p>\u7f29\u653e\u548c\u79fb\u52a8<span translate=no>_^_0_^_</span></p>\n",
 "<p>The dimensions to calculate the mean and variance on </p>\n": "<p>\u7528\u4e8e\u8ba1\u7b97\u5747\u503c\u548c\u65b9\u5dee\u7684\u7ef4\u5ea6</p>\n",
 "<p>Variance of all element <span translate=no>_^_0_^_</span> </p>\n": "<p>\u6240\u6709\u5143\u7d20\u7684\u65b9\u5dee<span translate=no>_^_0_^_</span></p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> <span translate=no>_^_1_^_</span> is the shape of the elements (except the batch).  The input should then be  <span translate=no>_^_2_^_</span> </li>\n<li><span translate=no>_^_3_^_</span> is <span translate=no>_^_4_^_</span>, used in <span translate=no>_^_5_^_</span> for numerical stability </li>\n<li><span translate=no>_^_6_^_</span> is whether to scale and shift the normalized value</li></ul>\n<p>We&#x27;ve tried to use the same names for arguments as PyTorch <span translate=no>_^_7_^_</span> implementation.</p>\n": "<ul><li><span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>\u662f\u5143\u7d20\u7684\u5f62\u72b6\uff08\u6279\u6b21\u9664\u5916\uff09\u3002\u90a3\u4e48\u8f93\u5165\u5e94\u8be5\u662f<span translate=no>_^_2_^_</span></li>\n<li><span translate=no>_^_3_^_</span>\u662f<span translate=no>_^_4_^_</span>\uff0c<span translate=no>_^_5_^_</span>\u7528\u4e8e\u6570\u503c\u7a33\u5b9a\u6027</li>\n<li><span translate=no>_^_6_^_</span>\u662f\u5426\u7f29\u653e\u548c\u79fb\u52a8\u5f52\u4e00\u5316\u503c</li></ul>\n<p>\u6211\u4eec\u5df2\u7ecf\u5c1d\u8bd5\u4f7f\u7528\u4e0e PyTorch<span translate=no>_^_7_^_</span> \u5b9e\u73b0\u76f8\u540c\u7684\u53c2\u6570\u540d\u79f0\u3002</p>\n",
 "A PyTorch implementation/tutorial of layer normalization.": "\u5173\u4e8e\u5c42\u89c4\u8303\u5316\u7684 PyTorch \u5b9e\u73b0/\u6559\u7a0b\u3002",
 "Layer Normalization": "\u5c42\u89c4\u8303\u5316"
}