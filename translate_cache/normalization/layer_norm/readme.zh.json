{
 "<h1><a href=\"https://nn.labml.ai/normalization/layer_norm/index.html\">Layer Normalization</a></h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of <a href=\"https://papers.labml.ai/paper/1607.06450\">Layer Normalization</a>.</p>\n<h3>Limitations of <a href=\"https://nn.labml.ai/normalization/batch_norm/index.html\">Batch Normalization</a></h3>\n<ul><li>You need to maintain running means. </li>\n<li>Tricky for RNNs. Do you need different normalizations for each step? </li>\n<li>Doesn&#x27;t work with small batch sizes; large NLP models are usually trained with small batch sizes. </li>\n<li>Need to compute means and variances across devices in distributed training.</li></ul>\n<h2>Layer Normalization</h2>\n<p>Layer normalization is a simpler normalization method that works on a wider range of settings. Layer normalization transforms the inputs to have zero mean and unit variance across the features. <em>Note that batch normalization fixes the zero mean and unit variance for each element.</em> Layer normalization does it for each batch across all elements.</p>\n<p>Layer normalization is generally used for NLP tasks.</p>\n<p>We have used layer normalization in most of the <a href=\"https://nn.labml.ai/transformers/gpt/index.html\">transformer implementations</a>.</p>\n": "<h1><a href=\"https://nn.labml.ai/normalization/layer_norm/index.html\">\u5c42\u89c4\u8303\u5316</a></h1>\n<p>\u8fd9\u662f<a href=\"https://papers.labml.ai/paper/1607.06450\">\u5c42\u89c4\u8303\u5316</a>\u7684 <a href=\"https://pytorch.org\">PyTorch</a> \u5b9e\u73b0\u3002</p>\n<h3><a href=\"https://nn.labml.ai/normalization/batch_norm/index.html\">\u6279\u91cf\u6807\u51c6\u5316\u7684</a>\u5c40\u9650\u6027</h3>\n<ul><li>\u4f60\u9700\u8981\u4fdd\u6301\u8dd1\u6b65\u624b\u6bb5\u3002</li>\n<li>\u5bf9\u4e8e RNN \u6765\u8bf4\u5f88\u68d8\u624b\u3002\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u9700\u8981\u4e0d\u540c\u7684\u89c4\u8303\u5316\u5417\uff1f</li>\n<li>\u4e0d\u9002\u7528\u4e8e\u5c0f\u6279\u91cf\uff1b\u5927\u578b NLP \u6a21\u578b\u901a\u5e38\u4f7f\u7528\u5c0f\u6279\u91cf\u8fdb\u884c\u8bad\u7ec3\u3002</li>\n<li>\u9700\u8981\u5728\u5206\u5e03\u5f0f\u8bad\u7ec3\u4e2d\u8ba1\u7b97\u8bbe\u5907\u95f4\u7684\u5747\u503c\u548c\u65b9\u5dee\u3002</li></ul>\n<h2>\u5c42\u89c4\u8303\u5316</h2>\n<p>\u56fe\u5c42\u5f52\u4e00\u5316\u662f\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u5f52\u4e00\u5316\u65b9\u6cd5\uff0c\u9002\u7528\u4e8e\u66f4\u5e7f\u6cdb\u7684\u8bbe\u7f6e\u3002\u56fe\u5c42\u5f52\u4e00\u5316\u4f1a\u5c06\u8f93\u5165\u53d8\u6362\u4e3a\u5404\u8981\u7d20\u7684\u5747\u503c\u548c\u5355\u4f4d\u65b9\u5dee\u4e3a\u96f6\u3002<em>\u8bf7\u6ce8\u610f\uff0c\u6279\u91cf\u5f52\u4e00\u5316\u4fee\u590d\u4e86\u6bcf\u4e2a\u5143\u7d20\u7684\u96f6\u5747\u503c\u548c\u5355\u4f4d\u65b9\u5dee\u3002</em>\u5c42\u5f52\u4e00\u5316\u5bf9\u6240\u6709\u5143\u7d20\u7684\u6bcf\u4e2a\u6279\u6b21\u6267\u884c\u6b64\u64cd\u4f5c\u3002</p>\n<p>\u5c42\u5f52\u4e00\u5316\u901a\u5e38\u7528\u4e8e NLP \u4efb\u52a1\u3002</p>\n<p>\u6211\u4eec\u5728\u5927\u591a\u6570<a href=\"https://nn.labml.ai/transformers/gpt/index.html\">\u53d8\u538b\u5668\u5b9e\u73b0</a>\u4e2d\u90fd\u4f7f\u7528\u4e86\u5c42\u5f52\u4e00\u5316\u3002</p>\n",
 "Layer Normalization": "\u5c42\u89c4\u8303\u5316"
}