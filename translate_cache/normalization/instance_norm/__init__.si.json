{
 "<h1>Instance Normalization</h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of <a href=\"https://papers.labml.ai/paper/1607.08022\">Instance Normalization: The Missing Ingredient for Fast Stylization</a>.</p>\n<p>Instance normalization was introduced to improve <a href=\"https://paperswithcode.com/task/style-transfer\">style transfer</a>. It is based on the observation that stylization should not depend on the contrast of the content image. The &quot;contrast normalization&quot; is</p>\n<p><span translate=no>_^_0_^_</span></p>\n<p>where <span translate=no>_^_1_^_</span> is a batch of images with dimensions image index <span translate=no>_^_2_^_</span>, feature channel <span translate=no>_^_3_^_</span>, and spatial position <span translate=no>_^_4_^_</span>.</p>\n<p>Since it&#x27;s hard for a convolutional network to learn &quot;contrast normalization&quot;, this paper introduces instance normalization which does that.</p>\n<p>Here&#x27;s a <a href=\"experiment.html\">CIFAR 10 classification model</a> that uses instance normalization.</p>\n": "<h1>\u0d8b\u0daf\u0dcf\u0dc4\u0dbb\u0dab\u0dba\u0d9a\u0dca\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba</h1>\n<p>\u0db8\u0dd9\u0dba <a href=\"https://pytorch.org\">PyTorch</a> \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 <a href=\"https://papers.labml.ai/paper/1607.08022\">\u0d8b\u0daf\u0dcf\u0dc4\u0dbb\u0dab\u0dba\u0d9a\u0dca \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba: \u0dc0\u0dda\u0d9c\u0dc0\u0dad\u0dca \u0dc1\u0ddb\u0dbd\u0dd3\u0d9a\u0dbb\u0dab\u0dba \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0dad\u0dd4\u0dbb\u0dd4\u0daf\u0dc4\u0db1\u0dca \u0dc0\u0dd6 \u0d85\u0db8\u0dd4\u0daf\u0dca\u0dbb\u0dc0\u0dca\u0dba\u0dba</a> . </p>\n<p><a href=\"https://paperswithcode.com/task/style-transfer\">\u0dc1\u0ddb\u0dbd\u0dd2\u0dba \u0db8\u0dcf\u0dbb\u0dd4</a>\u0dc0\u0dd0\u0da9\u0dd2 \u0daf\u0dd2\u0dba\u0dd4\u0dab\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0d8b\u0daf\u0dcf\u0dc4\u0dbb\u0dab\u0dba\u0d9a\u0dca \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0dc4\u0db3\u0dd4\u0db1\u0dca\u0dc0\u0dcf \u0daf\u0dd9\u0db1 \u0dbd\u0daf\u0dd3. \u0d91\u0dba \u0db4\u0daf\u0db1\u0db8\u0dca \u0dc0\u0dd3 \u0d87\u0dad\u0dca\u0dad\u0dda \u0d85\u0db1\u0dca\u0dad\u0dbb\u0dca\u0d9c\u0dad \u0dbb\u0dd6\u0db4\u0dba\u0dda \u0dc0\u0dd9\u0db1\u0dc3 \u0db8\u0dad \u0dc1\u0ddb\u0dbd\u0dd3\u0d9a\u0dbb\u0dab\u0dba \u0dbb\u0db3\u0dcf \u0db1\u0ddc\u0dad\u0dd2\u0db6\u0dd2\u0dba \u0dba\u0dd4\u0dad\u0dd4 \u0db6\u0dc0 \u0db1\u0dd2\u0dbb\u0dd3\u0d9a\u0dca\u0dc2\u0dab\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0db8\u0dad \u0dba. \u201c\u0db4\u0dca\u0dbb\u0dad\u0dd2\u0dc0\u0dd2\u0dbb\u0dd4\u0daf\u0dca\u0db0 \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba\u201d \u0dc0\u0dda</p>\n<p><span translate=no>_^_0_^_</span></p>\n<p>\u0db8\u0dcf\u0db1\u0dbb\u0dd6\u0db4 \u0daf\u0dbb\u0dca\u0dc1\u0d9a\u0dba <span translate=no>_^_2_^_</span>, \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf\u0dc0 <span translate=no>_^_3_^_</span>\u0dc3\u0dc4 <span translate=no>_^_4_^_</span>\u0d85\u0dc0\u0d9a\u0dcf\u0dc1\u0dd3\u0dba \u0db4\u0dd2\u0dc4\u0dd2\u0da7\u0dd3\u0db8 \u0dc3\u0dc4\u0dd2\u0dad \u0dbb\u0dd6\u0db4 \u0dc3\u0db8\u0dd6\u0dc4\u0dba\u0d9a\u0dca <span translate=no>_^_1_^_</span> \u0d9a\u0ddc\u0dc4\u0dda\u0daf? </p>\n<p>\u0dc3\u0db8\u0dca\u0db8\u0dd4\u0dad\u0dd2\u0da2\u0dcf\u0dbd\u0dba\u0d9a\u0da7 \u201c\u0db4\u0dca\u0dbb\u0dad\u0dd2\u0dc0\u0dd2\u0dbb\u0dd4\u0daf\u0dca\u0db0 \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba\u201d \u0d89\u0d9c\u0dd9\u0db1 \u0d9c\u0dd0\u0db1\u0dd3\u0db8 \u0daf\u0dd4\u0dc2\u0dca\u0d9a\u0dbb \u0db6\u0dd0\u0dc0\u0dd2\u0db1\u0dca, \u0db8\u0dd9\u0db8 \u0dbd\u0dd2\u0db4\u0dd2\u0dba \u0db8\u0d9f\u0dd2\u0db1\u0dca \u0d91\u0dba \u0dc3\u0dd2\u0daf\u0dd4 \u0d9a\u0dbb\u0db1 \u0d8b\u0daf\u0dcf\u0dc4\u0dbb\u0dab\u0dba\u0d9a\u0dca \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0dc4\u0db3\u0dd4\u0db1\u0dca\u0dc0\u0dcf \u0daf\u0dd9\u0dba\u0dd2. </p>\n<p>\u0db8\u0dd9\u0db1\u0dca\u0db1 <a href=\"experiment.html\">CIFAR \u0dad\u0dd2\u0dba\u0dd9\u0db1\u0dca\u0db1\u0dda 10 \u0d8b\u0daf\u0dcf\u0dc4\u0dbb\u0dab\u0dba\u0d9a\u0dca \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db1 \u0dc0\u0dbb\u0dca\u0d9c\u0dd3\u0d9a\u0dbb\u0dab\u0dba \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba</a> . </p>\n",
 "<h2>Instance Normalization Layer</h2>\n<p>Instance normalization layer <span translate=no>_^_0_^_</span> normalizes the input <span translate=no>_^_1_^_</span> as follows:</p>\n<p>When input <span translate=no>_^_2_^_</span> is a batch of image representations, where <span translate=no>_^_3_^_</span> is the batch size, <span translate=no>_^_4_^_</span> is the number of channels, <span translate=no>_^_5_^_</span> is the height and <span translate=no>_^_6_^_</span> is the width. <span translate=no>_^_7_^_</span> and <span translate=no>_^_8_^_</span>. The affine transformation with <span translate=no>_^_9_^_</span> and <span translate=no>_^_10_^_</span> are optional.</p>\n<p><span translate=no>_^_11_^_</span></p>\n": "<h2>\u0d8b\u0daf\u0dcf\u0dc4\u0dbb\u0dab\u0dba\u0d9a\u0dca\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0dc3\u0dca\u0dae\u0dbb\u0dba</h2>\n<p>\u0d8b\u0daf\u0dcf\u0dc4\u0dbb\u0dab\u0dba\u0d9a\u0dca\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0dc3\u0dca\u0dae\u0dbb\u0dba \u0db4\u0dc4\u0dad \u0dc3\u0db3\u0dc4\u0db1\u0dca <span translate=no>_^_1_^_</span> \u0db4\u0dbb\u0dd2\u0daf\u0dd2 \u0d86\u0daf\u0dcf\u0db1 <span translate=no>_^_0_^_</span> normalizes:</p>\n<p><span translate=no>_^_2_^_</span> \u0d86\u0daf\u0dcf\u0db1\u0dba \u0dbb\u0dd6\u0db4 \u0db1\u0dd2\u0dbb\u0dd6\u0db4\u0dab \u0dc3\u0db8\u0dd6\u0dc4\u0dba\u0d9a\u0dca <span translate=no>_^_3_^_</span> \u0dc0\u0db1 \u0dc0\u0dd2\u0da7, \u0d9a\u0dab\u0dca\u0da9\u0dcf\u0dba\u0db8\u0dca \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba \u0d9a\u0ddc\u0dad\u0dd0\u0db1\u0daf, <span translate=no>_^_4_^_</span> \u0db1\u0dcf\u0dbd\u0dd2\u0d9a\u0dcf \u0d9c\u0dab\u0db1, <span translate=no>_^_5_^_</span> \u0d8b\u0dc3 \u0dc3\u0dc4 <span translate=no>_^_6_^_</span> \u0db4\u0dc5\u0dbd \u0dc0\u0dda. <span translate=no>_^_7_^_</span> \u0dc3\u0dc4 <span translate=no>_^_8_^_</span>. \u0dc3\u0db8\u0d9c affine \u0db4\u0dbb\u0dd2\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0dba <span translate=no>_^_9_^_</span> \u0dc4\u0dcf \u0dc0\u0dd2\u0d9a\u0dbd\u0dca\u0db4 <span translate=no>_^_10_^_</span> \u0dc0\u0dda. </p>\n<p><span translate=no>_^_11_^_</span></p>\n",
 "<p> </p>\n": "<p> </p>\n",
 "<p> <span translate=no>_^_0_^_</span> is a tensor of shape <span translate=no>_^_1_^_</span>. <span translate=no>_^_2_^_</span> denotes any number of (possibly 0) dimensions.  For example, in an image (2D) convolution this will be <span translate=no>_^_3_^_</span></p>\n": "<p> <span translate=no>_^_0_^_</span> \u0dc4\u0dd0\u0da9\u0dba\u0dda \u0d86\u0dad\u0db1\u0dca\u0dba <span translate=no>_^_1_^_</span>\u0dc0\u0dda. <span translate=no>_^_2_^_</span> \u0d95\u0db1\u0dd1\u0db8 \u0dc3\u0d82\u0d9b\u0dca\u0dba\u0dcf\u0dc0\u0d9a\u0dca (\u0dc3\u0db8\u0dc4\u0dbb\u0dc0\u0dd2\u0da7 0) \u0db8\u0dcf\u0db1\u0dba\u0db1\u0dca \u0daf\u0d9a\u0dca\u0dc0\u0dba\u0dd2. \u0d8b\u0daf\u0dcf\u0dc4\u0dbb\u0dab\u0dba\u0d9a\u0dca \u0dbd\u0dd9\u0dc3, \u0dbb\u0dd6\u0db4\u0dba\u0d9a\u0dca (2D) \u0dc3\u0d82\u0d9a\u0ddd\u0da0\u0db1\u0dba \u0dad\u0dd4\u0dc5 \u0db8\u0dd9\u0dba \u0dc0\u0db1\u0dd4 \u0d87\u0dad <span translate=no>_^_3_^_</span></p>\n",
 "<p> Simple test</p>\n": "<p> \u0dc3\u0dbb\u0dbd\u0db4\u0dbb\u0dd3\u0d9a\u0dca\u0dc2\u0dab\u0dba</p>\n",
 "<p>Calculate the mean across last dimension i.e. the means for each feature <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d85\u0dc0\u0dc3\u0dcf\u0db1\u0db8\u0dcf\u0db1\u0dba \u0dc4\u0dbb\u0dc4\u0dcf \u0db8\u0db0\u0dca\u0dba\u0db1\u0dca\u0dba\u0dba \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1, \u0d91\u0db1\u0db8\u0dca \u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0dbd\u0d9a\u0dca\u0dc2\u0dab\u0dba \u0dc3\u0db3\u0dc4\u0dcf \u0db8\u0dcf\u0db0\u0dca\u0dba\u0dba\u0db1\u0dca <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Calculate the squared mean across first and last dimension; i.e. the means for each feature <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db4\u0dc5\u0db8\u0dd4\u0dc4\u0dcf \u0d85\u0dc0\u0dc3\u0dcf\u0db1 \u0db8\u0dcf\u0db1\u0dba\u0db1\u0dca \u0dc4\u0dbb\u0dc4\u0dcf \u0dc0\u0dbb\u0dca\u0d9c \u0d9a\u0dc5 \u0db8\u0db0\u0dca\u0dba\u0db1\u0dca\u0dba\u0dba \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1; \u0d91\u0db1\u0db8\u0dca \u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0dbd\u0d9a\u0dca\u0dc2\u0dab\u0dba \u0dc3\u0db3\u0dc4\u0dcf \u0db8\u0dcf\u0db0\u0dca\u0dba\u0dba\u0db1\u0dca <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Create parameters for <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> for scale and shift </p>\n": "<p>\u0db4\u0dbb\u0dd2\u0db8\u0dcf\u0dab\u0dba\u0dc3\u0dc4 \u0db8\u0dcf\u0dbb\u0dd4\u0dc0 <span translate=no>_^_1_^_</span> \u0dc3\u0db3\u0dc4\u0dcf <span translate=no>_^_0_^_</span> \u0dc3\u0dc4 \u0db4\u0dbb\u0dcf\u0db8\u0dd2\u0dad\u0dd3\u0db1\u0dca \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get the batch size </p>\n": "<p>\u0d9a\u0dab\u0dca\u0da9\u0dcf\u0dba\u0db8\u0dca\u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Keep the original shape </p>\n": "<p>\u0db8\u0dd4\u0dbd\u0dca\u0dc4\u0dd0\u0da9\u0dba \u0dad\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Normalize <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u200d\u0dba\u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Reshape into <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db1\u0dd0\u0dc0\u0dad\u0dc4\u0dd0\u0da9\u0d9c\u0dc3\u0dca\u0dc0\u0dcf \u0d9c\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Reshape to original and return </p>\n": "<p>\u0db8\u0dd4\u0dbd\u0dca\u0db4\u0dd2\u0da7\u0db4\u0dad\u0da7 \u0db1\u0dd0\u0dc0\u0dad \u0dc4\u0dd0\u0da9\u0d9c\u0dc3\u0dca\u0dc0\u0dcf \u0db1\u0dd0\u0dc0\u0dad \u0db4\u0dd0\u0db8\u0dd2\u0dab\u0dd3\u0db8 </p>\n",
 "<p>Sanity check to make sure the number of features is the same </p>\n": "<p>\u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c\u0d9c\u0dab\u0db1 \u0dc3\u0db8\u0dcf\u0db1 \u0db6\u0dc0 \u0dad\u0dc4\u0dc0\u0dd4\u0dbb\u0dd4 \u0d9a\u0dbb \u0d9c\u0dd0\u0db1\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0db1\u0dd3\u0db4\u0dcf\u0dbb\u0d9a\u0dca\u0dc2\u0dcf\u0dc0 \u0db4\u0dbb\u0dd3\u0d9a\u0dca\u0dc2\u0dcf \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Scale and shift <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db4\u0dbb\u0dd2\u0db8\u0dcf\u0dab\u0dba\u0dc3\u0dc4 \u0db8\u0dcf\u0dbb\u0dd4\u0dc0 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Variance for each feature <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d91\u0d9a\u0dca\u0d91\u0d9a\u0dca \u0dbd\u0d9a\u0dca\u0dc2\u0dab\u0dba \u0dc3\u0db3\u0dc4\u0dcf \u0dc0\u0dd2\u0da0\u0dbd\u0dad\u0dcf\u0dc0 <span translate=no>_^_0_^_</span> </p>\n",
 "<ul><li><span translate=no>_^_0_^_</span> is the number of features in the input </li>\n<li><span translate=no>_^_1_^_</span> is <span translate=no>_^_2_^_</span>, used in <span translate=no>_^_3_^_</span> for numerical stability </li>\n<li><span translate=no>_^_4_^_</span> is whether to scale and shift the normalized value</li></ul>\n": "<ul><li><span translate=no>_^_0_^_</span> \u0dba\u0db1\u0dd4 \u0d86\u0daf\u0dcf\u0db1\u0dba\u0dda \u0d87\u0dad\u0dd2 \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0d9c\u0dab\u0db1 </li>\n<li><span translate=no>_^_1_^_</span> \u0dc3\u0d82\u0d9b\u0dca\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0dc3\u0dca\u0dae\u0dcf\u0dba\u0dd2\u0dad\u0dcf\u0dc0 <span translate=no>_^_3_^_</span> \u0dc3\u0db3\u0dc4\u0dcf \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0dc0\u0dda <span translate=no>_^_2_^_</span></li>\n<li><span translate=no>_^_4_^_</span> \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0d9a\u0dc5 \u0d85\u0d9c\u0dba \u0db4\u0dbb\u0dd2\u0db8\u0dcf\u0dab\u0dba \u0d9a\u0dbb \u0db8\u0dcf\u0dbb\u0dd4 \u0d9a\u0dc5 \u0dba\u0dd4\u0dad\u0dd4\u0daf \u0dba\u0db1\u0dca\u0db1\u0dba\u0dd2</li></ul>\n",
 "A PyTorch implementation/tutorial of instance normalization.": "\u0d8b\u0daf\u0dcf\u0dc4\u0dbb\u0dab\u0dba\u0d9a\u0dca \u0dbd\u0dd9\u0dc3 \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda PyTorch \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8/\u0db1\u0dd2\u0db6\u0db1\u0dca\u0db0\u0db1\u0dba.",
 "Instance Normalization": "\u0d8b\u0daf\u0dcf\u0dc4\u0dbb\u0dab\u0dba\u0d9a\u0dca \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba\u0d9a\u0dbb\u0dab\u0dba"
}