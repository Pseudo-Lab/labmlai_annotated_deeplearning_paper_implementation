{
 "<h1>Optimizers</h1>\n<h2>Optimizer Implementations</h2>\n<ul><li><a href=\"adam.html\">Adam Optimizer</a> </li>\n<li><a href=\"amsgrad.html\">AMSGrad Optimizer</a> </li>\n<li><a href=\"adam_warmup.html\">Adam Optimizer with warmup</a> </li>\n<li><a href=\"noam.html\">Noam Optimizer</a> </li>\n<li><a href=\"radam.html\">Rectified Adam Optimizer</a> </li>\n<li><a href=\"ada_belief.html\">AdaBelief Optimizer</a></li></ul>\n<p>This <a href=\"mnist_experiment.html\">MNIST example</a> uses these optimizers.</p>\n<h2>Generic Adaptive Optimizer Base class and Weight Decay</h2>\n<p>This file defines a common base class for <em>Adam</em> and extensions of it. The base class helps use implement other optimizers with minimal code because of re-usability.</p>\n<p>We also define a special class for L2 weight decay, so that we don&#x27;t have to implement it inside each of the optimizers, and can easily extend to other weight decays like L1 without changing the optimizers.</p>\n<p>Here are some concepts on PyTorch optimizers:</p>\n<h3>Parameter groups</h3>\n<p>PyTorch optimizers group parameters into sets called groups. Each group can have its own hyper-parameters like learning rates.</p>\n<p>In most common cases there will be only one group. This is when you initialize your optimizer with,</p>\n<span translate=no>_^_0_^_</span><p>You can define multiple parameter groups when initializing the optimizer:</p>\n<span translate=no>_^_1_^_</span><p>Here we pass a list of groups. Each group is a dictionary with its parameters under the key &#x27;params&#x27;. You specify any hyper-parameters as well. If the hyper parameters are not defined they will default to the optimizer level defaults.</p>\n<p>You can access (and even change) these groups, and their hyper-parameters with <span translate=no>_^_2_^_</span>. Most learning rate schedule implementations I&#x27;ve come across do access this and change &#x27;lr&#x27;.</p>\n<h3>States</h3>\n<p>Optimizer maintains states (a dictionary) for each parameter (a tensor), in a dictionary <span translate=no>_^_3_^_</span>. This is where the optimizer maintains things like exponential averages.</p>\n": "<h1>\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc</h1>\n<h2>\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u306e\u5b9f\u88c5</h2>\n<ul><li><a href=\"adam.html\">\u30a2\u30c0\u30e0\u30fb\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc</a></li>\n<li><a href=\"amsgrad.html\">\u30de\u30b9\u30b0\u30e9\u30fc\u30c9\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc</a></li>\n<li><a href=\"adam_warmup.html\">\u30a6\u30a9\u30fc\u30e0\u30a2\u30c3\u30d7\u6a5f\u80fd\u4ed8\u304d Adam \u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc</a></li>\n<li><a href=\"noam.html\">\u30ce\u30fc\u30e0\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc</a></li>\n<li><a href=\"radam.html\">\u4fee\u6b63\u3055\u308c\u305f\u30a2\u30c0\u30e0\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc</a></li>\n<li><a href=\"ada_belief.html\">\u30a2\u30c0\u30d6\u30ea\u30ea\u30fc\u30d5\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc</a></li></ul>\n<p>\u3053\u306e <a href=\"mnist_experiment.html\">MNIST \u306e\u4f8b\u3067\u306f</a>\u3001\u3053\u308c\u3089\u306e\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002</p>\n<h2>\u6c4e\u7528\u30a2\u30c0\u30d7\u30c6\u30a3\u30d6\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u57fa\u672c\u30af\u30e9\u30b9\u3068\u30a6\u30a7\u30a4\u30c8\u30c7\u30a3\u30b1\u30a4</h2>\n<p>\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u3001<em>Adam</em> \u306e\u5171\u901a\u57fa\u672c\u30af\u30e9\u30b9\u3068\u305d\u306e\u62e1\u5f35\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\u57fa\u672c\u30af\u30e9\u30b9\u306f\u3001\u518d\u5229\u7528\u304c\u53ef\u80fd\u306a\u305f\u3081\u3001\u6700\u5c0f\u9650\u306e\u30b3\u30fc\u30c9\u3067\u4ed6\u306e\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u3092\u5b9f\u88c5\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059</p>\u3002\n<p>\u307e\u305f\u3001L2\u306e\u91cd\u307f\u6e1b\u8870\u7528\u306e\u7279\u5225\u306a\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5404\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u5185\u306b\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u3092\u5909\u66f4\u305b\u305a\u306bL1\u306e\u3088\u3046\u306a\u4ed6\u306e\u91cd\u307f\u6e1b\u8870\u306b\u3082\u7c21\u5358\u306b\u62e1\u5f35\u3067\u304d\u307e\u3059\u3002</p>\n<p>PyTorch \u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u306e\u6982\u5ff5\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002</p>\n<h3>\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30eb\u30fc\u30d7</h3>\n<p>PyTorch \u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u30b0\u30eb\u30fc\u30d7\u3068\u547c\u3070\u308c\u308b\u30bb\u30c3\u30c8\u306b\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u307e\u3059\u3002\u5404\u30b0\u30eb\u30fc\u30d7\u306b\u306f\u3001\u5b66\u7fd2\u7387\u306a\u3069\u306e\u72ec\u81ea\u306e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059</p>\u3002\n<p>\u305f\u3044\u3066\u3044\u306e\u5834\u5408\u3001\u30b0\u30eb\u30fc\u30d7\u304c 1 \u3064\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u3068\u304d\u3001\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u3092\u6b21\u306e\u3088\u3046\u306b\u521d\u671f\u5316\u3057\u307e\u3059</p>\u3002\n<span translate=no>_^_0_^_</span><p>\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u3092\u521d\u671f\u5316\u3059\u308b\u3068\u304d\u306b\u3001\u8907\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30eb\u30fc\u30d7\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002</p>\n<span translate=no>_^_1_^_</span><p>\u3053\u3053\u306b\u30b0\u30eb\u30fc\u30d7\u306e\u30ea\u30b9\u30c8\u3092\u6e21\u3057\u307e\u3059\u3002\u5404\u30b0\u30eb\u30fc\u30d7\u306f\u8f9e\u66f8\u3067\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306f 'params' \u3067\u3059\u3002\u4efb\u610f\u306e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3082\u6307\u5b9a\u3057\u307e\u3059\u3002\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30ec\u30d9\u30eb\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u306a\u308a\u307e\u3059</p>\u3002\n<p>\u3092\u4f7f\u7528\u3057\u3066\u3053\u308c\u3089\u306e\u30b0\u30eb\u30fc\u30d7\u3068\u305d\u306e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u308a\u3001\u5909\u66f4\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002<span translate=no>_^_2_^_</span>\u79c1\u304c\u51fa\u4f1a\u3063\u305f\u307b\u3068\u3093\u3069\u306e\u5b66\u7fd2\u7387\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u306e\u5b9f\u88c5\u306f\u3001\u3053\u308c\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u300clr\u300d\u3092\u5909\u66f4\u3057\u307e\u3059</p>\u3002\n<h3>\u5dde</h3>\n<p>\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u306f\u3001\u5404\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc (\u30c6\u30f3\u30bd\u30eb) \u306e\u72b6\u614b (\u8f9e\u66f8) \u3092\u8f9e\u66f8\u306b\u4fdd\u6301\u3057\u307e\u3059\u3002<span translate=no>_^_3_^_</span>\u3053\u3053\u3067\u3001\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u306f\u6307\u6570\u5e73\u5747\u306a\u3069\u3092\u7ba1\u7406\u3057\u307e\u3059</p>\u3002\n",
 "<h2>Base class for <em>Adam</em> and extensions</h2>\n": "<h2><em>Adam</em> \u3068\u62e1\u5f35\u6a5f\u80fd\u306e\u57fa\u5e95\u30af\u30e9\u30b9</h2>\n",
 "<h2>L2 Weight decay</h2>\n": "<h2>L2 \u30a6\u30a7\u30a4\u30c8\u30fb\u30c7\u30a3\u30b1\u30a4</h2>\n",
 "<h3>Initialize state for a given parameter tensor</h3>\n<p>This should be overridden with code to initialize <span translate=no>_^_0_^_</span> for parameters <span translate=no>_^_1_^_</span>. <span translate=no>_^_2_^_</span> is the parameter group dictionary to which <span translate=no>_^_3_^_</span> belongs.</p>\n": "<h3>\u4e0e\u3048\u3089\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u30c6\u30f3\u30bd\u30eb\u306e\u72b6\u614b\u3092\u521d\u671f\u5316</h3>\n<p><span translate=no>_^_0_^_</span>\u3053\u308c\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u521d\u671f\u5316\u3059\u308b\u30b3\u30fc\u30c9\u3092\u4f7f\u3046\u3079\u304d\u3067\u3059\u3002<span translate=no>_^_1_^_</span><span translate=no>_^_2_^_</span><span translate=no>_^_3_^_</span>\u304c\u5c5e\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30eb\u30fc\u30d7\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\u3067\u3059\u3002</p>\n",
 "<h3>Initialize weight decay</h3>\n<ul><li><span translate=no>_^_0_^_</span> is the decay coefficient </li>\n<li><span translate=no>_^_1_^_</span> is a flag indicating whether to add the weight decay to the gradient or directly decay from the parameter. If added to the gradient it will go through the normal optimizer update. </li>\n<li><span translate=no>_^_2_^_</span> this flag indicates whether the weight decay coefficient is absolute. This is applicable when the decay is performed directly on the parameter. If this is false the actual decay is <span translate=no>_^_3_^_</span> </li>\n<li><span translate=no>_^_4_^_</span>.</li></ul>\n": "<h3>\u4f53\u91cd\u6e1b\u8870\u3092\u521d\u671f\u5316</h3>\n<ul><li><span translate=no>_^_0_^_</span>\u306f\u6e1b\u8870\u4fc2\u6570</li>\n<li><span translate=no>_^_1_^_</span>\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u306b\u30a6\u30a7\u30a4\u30c8\u30c7\u30a3\u30b1\u30a4\u3092\u8ffd\u52a0\u3059\u308b\u304b\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u304b\u3089\u76f4\u63a5\u30c7\u30a3\u30b1\u30a4\u3092\u52a0\u3048\u308b\u304b\u3092\u793a\u3059\u30d5\u30e9\u30b0\u3067\u3059\u3002\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u306b\u8ffd\u52a0\u3059\u308b\u3068\u3001\u901a\u5e38\u306e\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u306e\u66f4\u65b0\u304c\u884c\u308f\u308c\u307e\u3059</li>\u3002\n<li><span translate=no>_^_2_^_</span>\u3053\u306e\u30d5\u30e9\u30b0\u306f\u91cd\u91cf\u6e1b\u8870\u4fc2\u6570\u304c\u7d76\u5bfe\u5024\u304b\u3069\u3046\u304b\u3092\u793a\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30c7\u30a3\u30b1\u30a4\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u76f4\u63a5\u9069\u7528\u3059\u308b\u5834\u5408\u306b\u9069\u7528\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u304c false \u306e\u5834\u5408\u3001\u5b9f\u969b\u306e\u6e1b\u8870\u306f <span translate=no>_^_3_^_</span></li>\n</ul><li><span translate=no>_^_4_^_</span>\u3002</li>\n",
 "<h3>Initialize</h3>\n<ul><li><span translate=no>_^_0_^_</span> is the collection of parameters or set of parameter groups. </li>\n<li><span translate=no>_^_1_^_</span> a dictionary of default hyper-parameters </li>\n<li><span translate=no>_^_2_^_</span> is the learning rate, <span translate=no>_^_3_^_</span> </li>\n<li><span translate=no>_^_4_^_</span> is the tuple <span translate=no>_^_5_^_</span> </li>\n<li><span translate=no>_^_6_^_</span> is <span translate=no>_^_7_^_</span></li></ul>\n": "<h3>[\u521d\u671f\u5316]</h3>\n<ul><li><span translate=no>_^_0_^_</span>\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u307e\u305f\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30eb\u30fc\u30d7\u306e\u30bb\u30c3\u30c8\u3067\u3059\u3002</li>\n<li><span translate=no>_^_1_^_</span>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8f9e\u66f8</li>\n<li><span translate=no>_^_2_^_</span>\u306f\u5b66\u7fd2\u7387 <span translate=no>_^_3_^_</span></li>\n<li><span translate=no>_^_4_^_</span>\u306f\u30bf\u30d7\u30eb\u3067\u3059 <span translate=no>_^_5_^_</span></li>\n</ul><li><span translate=no>_^_6_^_</span>\u306f <span translate=no>_^_7_^_</span></li>\n",
 "<h3>Optimizer step</h3>\n<p>We have created a template method that does the common stuff every <em>Adam</em> based optimizer needs.</p>\n": "<h3>\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u30b9\u30c6\u30c3\u30d7</h3>\n<p><em>\u3059\u3079\u3066\u306eAdam\u30d9\u30fc\u30b9\u306e\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u304c\u5fc5\u8981\u3068\u3059\u308b\u4e00\u822c\u7684\u306a\u51e6\u7406\u3092\u884c\u3046\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f</em>\u3002</p>\n",
 "<h3>Perform weight decay and return the gradient</h3>\n": "<h3>\u30a6\u30a7\u30a4\u30c8\u30c7\u30a3\u30b1\u30a4\u3092\u5b9f\u884c\u3057\u3066\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u623b\u3059</h3>\n",
 "<h3>Take optimizer step on a parameter tensor</h3>\n<p>This should be overridden and take the optimization step on <span translate=no>_^_0_^_</span> tensor <span translate=no>_^_1_^_</span>, where <span translate=no>_^_2_^_</span> is the gradient for that parameter, <span translate=no>_^_3_^_</span>, <span translate=no>_^_4_^_</span> is the optimizer state dictionary for that parameter, and <span translate=no>_^_5_^_</span> is the parameter group dictionary <span translate=no>_^_6_^_</span> belongs to.</p>\n": "<h3>\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u30c6\u30f3\u30bd\u30eb\u3067\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u30b9\u30c6\u30c3\u30d7\u3092\u5b9f\u884c\u3059\u308b</h3>\n<p>\u3053\u308c\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3001<span translate=no>_^_0_^_</span>\u30c6\u30f3\u30bd\u30eb\u3067\u6700\u9069\u5316\u30b9\u30c6\u30c3\u30d7\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u3067<span translate=no>_^_1_^_</span><span translate=no>_^_2_^_</span>\u3001\u306f\u305d\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u52fe\u914d\u3001\u306f\u305d\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u72b6\u614b\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\u3001<span translate=no>_^_4_^_</span><span translate=no>_^_5_^_</span>\u306f\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\u304c\u5c5e\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u30b0\u30eb\u30fc\u30d7\u3067\u3059\u3002<span translate=no>_^_3_^_</span> <span translate=no>_^_6_^_</span></p>\n",
 "<p> Return defaults for parameter groups</p>\n": "<p>\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30eb\u30fc\u30d7\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u8fd4\u3059</p>\n",
 "<p>Add the hyper-parameters to the defaults </p>\n": "<p>\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u8ffd\u52a0</p>\n",
 "<p>Add the weight decay to the gradient and return the modified gradient </p>\n": "<p>\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u306b\u30a6\u30a7\u30a4\u30c8\u30c7\u30a3\u30b1\u30a4\u3092\u8ffd\u52a0\u3057\u3001\u5909\u66f4\u3057\u305f\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u8fd4\u3057\u307e\u3059\u3002</p>\n",
 "<p>Calculate loss.</p>\n<p>\ud83e\udd14 I&#x27;m not sure when you need this. I guess it&#x27;s if you define a function that calculates the loss, does <span translate=no>_^_0_^_</span> and return the loss, instead of calling it on your own you could pass it to <span translate=no>_^_1_^_</span>. \ud83e\udd37\u200d\u2642\ufe0f </p>\n": "<p>\u640d\u5931\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002</p>\n<p>\ud83e\udd14 \u3044\u3064\u3053\u308c\u304c\u5fc5\u8981\u306a\u306e\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u81ea\u5206\u3067\u547c\u3073\u51fa\u3059\u306e\u3067\u306f\u306a\u304f\u3001<span translate=no>_^_0_^_</span>\u640d\u5931\u3092\u8a08\u7b97\u3057\u3066\u640d\u5931\u3092\u51fa\u3057\u3066\u8fd4\u3059\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308c\u3070\u3001\u305d\u306e\u95a2\u6570\u3092\u6e21\u305b\u308b\u3068\u601d\u3044\u307e\u3059<span translate=no>_^_1_^_</span>\u3002\ud83e\udd37\u200d\u2642\ufe0f</p>\n",
 "<p>Check hyper-parameters </p>\n": "<p>\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30c1\u30a7\u30c3\u30af</p>\n",
 "<p>Check the hyper-parameters </p>\n": "<p>\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u78ba\u8a8d</p>\n",
 "<p>Get the gradient tensor </p>\n": "<p>\u52fe\u914d\u30c6\u30f3\u30bd\u30eb\u3092\u53d6\u5f97</p>\n",
 "<p>Get the state for the parameter </p>\n": "<p>\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u72b6\u614b\u3092\u53d6\u5f97</p>\n",
 "<p>If the weight decay coefficient is absolute </p>\n": "<p>\u91cd\u91cf\u6e1b\u8870\u4fc2\u6570\u304c\u7d76\u5bfe\u5024\u306e\u5834\u5408</p>\n",
 "<p>If we are doing the decay on the parameter directly </p>\n": "<p>\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u76f4\u63a5\u30c7\u30a3\u30b1\u30a4\u3092\u884c\u3046\u5834\u5408</p>\n",
 "<p>Initialize the PyTorch optimizer. This will create parameter groups with the default hyper-parameters </p>\n": "<p>PyTorch \u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u3092\u521d\u671f\u5316\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30eb\u30fc\u30d7\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059</p>\n",
 "<p>Initialize the state if state is uninitialized </p>\n": "<p>\u72b6\u614b\u304c\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u72b6\u614b\u3092\u521d\u671f\u5316\u3057\u307e\u3059</p>\n",
 "<p>Iterate through the parameter groups </p>\n": "<p>\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30eb\u30fc\u30d7\u3092\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3059\u308b</p>\n",
 "<p>Iterate through the parameters in the parameter group </p>\n": "<p>\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30eb\u30fc\u30d7\u5185\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3057\u307e\u3059</p>\n",
 "<p>Otherwise, </p>\n": "<p>\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u3001</p>\n",
 "<p>Return the loss, calculated from closure </p>\n": "<p>\u6c7a\u6e08\u304b\u3089\u8a08\u7b97\u3057\u305f\u640d\u5931\u984d\u3092\u8fd4\u91d1</p>\n",
 "<p>Return the unmodified gradient </p>\n": "<p>\u5909\u66f4\u3055\u308c\u3066\u3044\u306a\u3044\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u8fd4\u3059</p>\n",
 "<p>Skip if the parameter has no gradient </p>\n": "<p>\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u304c\u306a\u3044\u5834\u5408\u306f\u30b9\u30ad\u30c3\u30d7</p>\n",
 "<p>Take the optimization step on the parameter </p>\n": "<p>\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6700\u9069\u5316\u624b\u9806\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044</p>\n",
 "<p>We don&#x27;t handle sparse gradients </p>\n": "<p>\u30b9\u30d1\u30fc\u30b9\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u306f\u6271\u3044\u307e\u305b\u3093</p>\n",
 "A set of PyTorch implementations/tutorials of popular gradient descent based optimizers. Currently includes Adam, AMSGrad and RAdam optimizers.": "\u4eba\u6c17\u306e\u3042\u308b\u52fe\u914d\u964d\u4e0b\u30d9\u30fc\u30b9\u306e\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u306ePyTorch\u5b9f\u88c5/\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u30bb\u30c3\u30c8\u3002\u73fe\u5728\u3001Adam\u3001Masgrad\u3001\u304a\u3088\u3073 Adam\u306e\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002",
 "Optimizers": "\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc"
}