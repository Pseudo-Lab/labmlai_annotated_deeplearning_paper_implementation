{
 "<h1>Sketch RNN</h1>\n<p>This is an annotated <a href=\"https://pytorch.org\">PyTorch</a> implementation of the paper <a href=\"https://papers.labml.ai/paper/1704.03477\">A Neural Representation of Sketch Drawings</a>.</p>\n<p>Sketch RNN is a sequence-to-sequence variational auto-encoder. Both encoder and decoder are recurrent neural network models. It learns to reconstruct stroke based simple drawings, by predicting a series of strokes. Decoder predicts each stroke as a mixture of Gaussian&#x27;s.</p>\n<h3>Getting data</h3>\n<p>Download data from <a href=\"https://github.com/googlecreativelab/quickdraw-dataset\">Quick, Draw! Dataset</a>. There is a link to download <span translate=no>_^_0_^_</span> files in <em>Sketch-RNN QuickDraw Dataset</em> section of the readme. Place the downloaded <span translate=no>_^_1_^_</span> file(s) in <span translate=no>_^_2_^_</span> folder. This code is configured to use <span translate=no>_^_3_^_</span> dataset. You can change this in configurations.</p>\n<h3>Acknowledgements</h3>\n<p>Took help from <a href=\"https://github.com/alexis-jacq/Pytorch-Sketch-RNN\">PyTorch Sketch RNN</a> project by <a href=\"https://github.com/alexis-jacq\">Alexis David Jacq</a></p>\n": "<h1>\u0d9a\u0da7\u0dd4\u0dc3\u0da7\u0dc4\u0db1\u0d9a\u0dca RNN</h1>\n<p>\u0db8\u0dd9\u0dba\u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0db4\u0dd2\u0dc5\u0dd2\u0db6\u0db3 \u0dc0\u0dd2\u0dc0\u0dbb\u0dab \u0d9a\u0dbb\u0db1 \u0dbd\u0daf <a href=\"https://pytorch.org\">PyTorch</a> \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 <a href=\"https://papers.labml.ai/paper/1704.03477\">\u0dc3\u0dca\u0d9a\u0dd9\u0da0\u0dca \u0d87\u0db3\u0dd3\u0db8\u0dca\u0dc0\u0dbd \u0dc3\u0dca\u0db1\u0dcf\u0dba\u0dd4\u0d9a \u0db1\u0dd2\u0dbb\u0dd6\u0db4\u0dab\u0dba\u0d9a\u0dd2</a> . </p>\n<p>\u0dc3\u0dca\u0d9a\u0dd9\u0da0\u0dca\u0d86\u0dbb\u0dca\u0d91\u0db1\u0dca\u0d91\u0db1\u0dca \u0dba\u0db1\u0dd4 \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8-\u0dc3\u0dd2\u0da7-\u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dd2\u0d9a \u0dc0\u0dd2\u0da0\u0dbd\u0dca\u0dba\u0dad\u0dcf \u0dc3\u0dca\u0dc0\u0dba\u0d82\u0d9a\u0dca\u0dbb\u0dd3\u0dba \u0d86\u0d9a\u0dda\u0dad\u0dba\u0d9a\u0dd2. \u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dba \u0dc3\u0dc4 \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a\u0dba \u0dba\u0db1 \u0daf\u0dd9\u0d9a\u0db8 \u0db4\u0dd4\u0db1\u0dbb\u0dcf\u0dc0\u0dbb\u0dca\u0dad\u0db1 \u0dc3\u0dca\u0db1\u0dcf\u0dba\u0dd4\u0d9a \u0da2\u0dcf\u0dbd \u0d86\u0d9a\u0dd8\u0dad\u0dd2 \u0dc0\u0dda. \u0d86 roke \u0dcf\u0dad \u0db8\u0dcf\u0dbd\u0dcf\u0dc0\u0d9a\u0dca \u0db4\u0dd4\u0dbb\u0ddd\u0d9a\u0dae\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dd9\u0db1\u0dca \u0d86 roke \u0dcf\u0dad\u0dba \u0db4\u0daf\u0db1\u0db8\u0dca \u0d9a\u0dbb\u0d9c\u0dad\u0dca \u0dc3\u0dbb\u0dbd \u0d87\u0db3\u0dd3\u0db8\u0dca \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0db1\u0dd2\u0dbb\u0dca\u0db8\u0dcf\u0dab\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0d91\u0dba \u0d89\u0d9c\u0dd9\u0db1 \u0d9c\u0db1\u0dd3. \u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0d86 roke \u0dcf\u0dad\u0dba \u0d9c\u0dc0\u0dd4\u0dc3\u0dd2\u0dba\u0dcf\u0db1\u0dd4 \u0db8\u0dd2\u0dc1\u0dca\u0dbb\u0dab\u0dba\u0d9a\u0dca \u0dbd\u0dd9\u0dc3 \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a\u0dba \u0db4\u0dd4\u0dbb\u0ddd\u0d9a\u0dae\u0db1\u0dba \u0d9a\u0dbb\u0dba\u0dd2.</p>\n<h3>\u0daf\u0dad\u0dca\u0dad\u0dbd\u0db6\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8</h3>\n<p><a href=\"https://github.com/googlecreativelab/quickdraw-dataset\">\u0d89\u0d9a\u0dca\u0db8\u0db1\u0dca \u0dc0\u0dd9\u0dad\u0dd2\u0db1\u0dca \u0daf\u0dad\u0dca\u0dad \u0db6\u0dcf\u0d9c\u0db1\u0dca\u0db1, \u0d85\u0db3\u0dd2\u0db1\u0dca\u0db1! \u0daf\u0dad\u0dca\u0dad \u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba</a>. <em>Sketch-RNN\u0dc4\u0dd2 <span translate=no>_^_0_^_</span> \u0d9c\u0ddc\u0db1\u0dd4 \u0db6\u0dcf\u0d9c\u0dad \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0db6\u0dd0\u0db3\u0dd2\u0dba\u0d9a\u0dca \u0d87\u0dad QuickDraw \u0daf\u0dad\u0dca\u0dad \u0dc3\u0db8\u0dd4\u0daf\u0dcf\u0dba</em> \u0d9a\u0dd2\u0dba\u0dc0\u0dd3\u0db8\u0dda \u0d9a\u0ddc\u0da7\u0dc3. \u0db6\u0dcf\u0d9c\u0dad \u0d9a\u0dc5 <span translate=no>_^_1_^_</span> \u0d9c\u0ddc\u0db1\u0dd4\u0dc0 (\u0dba) <span translate=no>_^_2_^_</span> \u0dc6\u0ddd\u0dbd\u0dca\u0da9\u0dbb\u0dba\u0dda \u0dad\u0db6\u0db1\u0dca\u0db1. \u0db8\u0dd9\u0db8 \u0d9a\u0dda\u0dad\u0dba <span translate=no>_^_3_^_</span> \u0daf\u0dad\u0dca\u0dad \u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0dc0\u0dd2\u0db1\u0dca\u0dba\u0dcf\u0dc3 \u0d9a\u0dbb \u0d87\u0dad. \u0d94\u0db6\u0da7 \u0db8\u0dd9\u0dba \u0dc0\u0dd2\u0db1\u0dca\u0dba\u0dcf\u0dc3\u0dba\u0db1\u0dca \u0dad\u0dd4\u0dc5 \u0dc0\u0dd9\u0db1\u0dc3\u0dca \u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2\u0dba. </p>\n<h3>\u0db4\u0dd2\u0dc5\u0dd2\u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0dca</h3>\n<p><a href=\"https://github.com/alexis-jacq\">\u0d87\u0dbd\u0dd9\u0d9a\u0dca\u0dc3\u0dd2\u0dc3\u0dca \u0da9\u0dda\u0dc0\u0dd2\u0da9\u0dca \u0da2\u0dd0\u0d9a\u0dca</a> \u0dc0\u0dd2\u0dc3\u0dd2\u0db1\u0dca <a href=\"https://github.com/alexis-jacq/Pytorch-Sketch-RNN\">\u0db4\u0dba\u0dd2\u0da7\u0ddd\u0dbb\u0dca\u0da0\u0dca \u0dc3\u0dca\u0d9a\u0dd9\u0da0\u0dca \u0d86\u0dbb\u0dca\u0d91\u0db1\u0dca\u0d91\u0db1\u0dca</a> \u0dc0\u0dca\u0dba\u0dcf\u0db4\u0dd8\u0dad\u0dd2\u0dba\u0dd9\u0db1\u0dca \u0d8b\u0daf\u0dc0\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0dad\u0dca\u0dad\u0dda\u0dba</p>\n",
 "<h2>Bi-variate Gaussian mixture</h2>\n<p>The mixture is represented by <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span>. This class adjusts temperatures and creates the categorical and Gaussian distributions from the parameters.</p>\n": "<h2>\u0daf\u0dca\u0dc0\u0dd2-\u0dc0\u0dd2\u0da0\u0dbd\u0dca\u0dba\u0d9c\u0dc0\u0dd4\u0dc3\u0dd2\u0dba\u0dcf\u0db1\u0dd4 \u0db8\u0dd2\u0dc1\u0dca\u0dbb\u0dab\u0dba</h2>\n<p>\u0db8\u0dd2\u0dc1\u0dca\u0dbb\u0dab\u0dba\u0db1\u0dd2\u0dba\u0ddd\u0da2\u0db1\u0dba \u0dc0\u0db1\u0dca\u0db1\u0dda <span translate=no>_^_0_^_</span> \u0dc3\u0dc4 <span translate=no>_^_1_^_</span>. \u0db8\u0dd9\u0db8 \u0db4\u0db1\u0dca\u0dad\u0dd2\u0dba \u0d8b\u0dc2\u0dca\u0dab\u0dad\u0dca\u0dc0\u0dba \u0dc3\u0d9a\u0dc3\u0dca \u0d9a\u0dbb\u0db1 \u0d85\u0dad\u0dbb \u0db4\u0dbb\u0dcf\u0db8\u0dd2\u0dad\u0dd3\u0db1\u0dca\u0d9c\u0dd9\u0db1\u0dca \u0dc0\u0dbb\u0dca\u0d9c\u0dd3\u0d9a\u0dbb\u0dab \u0dc4\u0dcf \u0d9c\u0dd4\u0dc3\u0dd2\u0dba\u0dcf\u0db1\u0dd4 \u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0dca \u0db1\u0dd2\u0dbb\u0dca\u0db8\u0dcf\u0dab\u0dba \u0d9a\u0dbb\u0dba\u0dd2. </p>\n",
 "<h2>Configurations</h2>\n<p>These are default configurations which can later be adjusted by passing a <span translate=no>_^_0_^_</span>.</p>\n": "<h2>\u0dc0\u0dd2\u0db1\u0dca\u0dba\u0dcf\u0dc3\u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dca</h2>\n<p>\u0db8\u0dda\u0dc0\u0dcf\u0db4\u0dd9\u0dbb\u0db1\u0dd2\u0db8\u0dd2 \u0dc0\u0dd2\u0db1\u0dca\u0dba\u0dcf\u0dc3\u0dba\u0db1\u0dca \u0dc0\u0db1 \u0d85\u0dad\u0dbb \u0d92\u0dc0\u0dcf \u0db4\u0dc3\u0dd4\u0dc0 a \u0db4\u0dc3\u0dd4\u0d9a\u0dbb \u0dba\u0dcf\u0db8\u0dd9\u0db1\u0dca \u0dc3\u0d9a\u0dc3\u0dca \u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2\u0dba <span translate=no>_^_0_^_</span>. </p>\n",
 "<h2>Dataset</h2>\n<p>This class loads and pre-processes the data.</p>\n": "<h2>\u0daf\u0dad\u0dca\u0dad\u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba</h2>\n<p>\u0db8\u0dd9\u0db8\u0db4\u0db1\u0dca\u0dad\u0dd2\u0dba \u0daf\u0dad\u0dca\u0dad \u0db4\u0dd0\u0da7\u0dc0\u0dd3\u0db8 \u0dc3\u0dc4 \u0db4\u0dd6\u0dbb\u0dca\u0dc0 \u0dc3\u0dd0\u0d9a\u0dc3\u0dd3\u0db8. </p>\n",
 "<h2>Decoder module</h2>\n<p>This consists of a LSTM</p>\n": "<h2>\u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a\u0db8\u0ddc\u0da9\u0dd2\u0dba\u0dd4\u0dbd\u0dba</h2>\n<p>\u0db8\u0dd9\u0dbaLSTM \u0d9a\u0dd2\u0db1\u0dca \u0dc3\u0db8\u0db1\u0dca\u0dc0\u0dd2\u0dad \u0dc0\u0dda</p>\n",
 "<h2>Encoder module</h2>\n<p>This consists of a bidirectional LSTM</p>\n": "<h2>\u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dca\u0db8\u0ddc\u0da9\u0dd2\u0dba\u0dd4\u0dbd\u0dba</h2>\n<p>\u0db8\u0dd9\u0dba\u0daf\u0dca\u0dc0\u0dd2\u0db4\u0dcf\u0dbb\u0dca\u0dc1\u0dca\u0dc0\u0dd2\u0d9a LSTM \u0d9a\u0dd2\u0db1\u0dca \u0dc3\u0db8\u0db1\u0dca\u0dc0\u0dd2\u0dad \u0dc0\u0dda</p>\n",
 "<h2>KL-Divergence loss</h2>\n<p>This calculates the KL divergence between a given normal distribution and <span translate=no>_^_0_^_</span></p>\n": "<h2>\u0d91\u0dbd\u0dca. \u0d91\u0dbd\u0dca-\u0d85\u0db4\u0dc3\u0dbb\u0db1\u0dba \u0d85\u0dc4\u0dd2\u0db8\u0dd2</h2>\n<p>\u0db8\u0dd9\u0dba\u0dbd\u0db6\u0dcf \u0daf\u0dd3 \u0d87\u0dad\u0dd2 \u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba \u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0d9a\u0dca \u0d85\u0dad\u0dbb KL \u0d85\u0db4\u0dc3\u0dbb\u0db1\u0dba \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0dba\u0dd2 <span translate=no>_^_0_^_</span></p>\n",
 "<h2>Reconstruction Loss</h2>\n": "<h2>\u0db4\u0dca\u0dbb\u0dad\u0dd2\u0dc3\u0d82\u0dc3\u0dca\u0d9a\u0dbb\u0dab\u0d85\u0dbd\u0dcf\u0db7\u0dba</h2>\n",
 "<h2>Sampler</h2>\n<p>This samples a sketch from the decoder and plots it</p>\n": "<h2>\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0d9a\u0dbb\u0dd4</h2>\n<p>\u0db8\u0dd9\u0dba\u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a\u0dba\u0dd9\u0db1\u0dca \u0dbb\u0dd6\u0db4 \u0dc3\u0da7\u0dc4\u0db1\u0d9a\u0dca \u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd \u0d9a\u0dbb \u0d91\u0dba \u0d9c\u0ddc\u0da9\u0db6\u0dd1\u0db8\u0da7 \u0dbd\u0d9a\u0dca \u0d9a\u0dbb\u0dba\u0dd2</p>\n",
 "<p> </p>\n": "<p> </p>\n",
 "<p> <span translate=no>_^_0_^_</span> is a list of numpy arrays of shape <a href=\"seq_len, 3\">seq_len, 3</a>. It is a sequence of strokes, and each stroke is represented by 3 integers. First two are the displacements along x and y (<span translate=no>_^_1_^_</span>, <span translate=no>_^_2_^_</span>) and the last integer represents the state of the pen, <span translate=no>_^_3_^_</span> if it&#x27;s touching the paper and <span translate=no>_^_4_^_</span> otherwise.</p>\n": "<p> <span translate=no>_^_0_^_</span> <a href=\"seq_len, 3\">Seq_len \u0dc4\u0dd0\u0da9\u0dba\u0dda \u0dc4\u0dd2\u0dbb\u0dd2\u0dc0\u0dd0\u0da7\u0dd3\u0db8\u0dca \u0d85\u0dbb\u0dcf \u0dbd\u0dd0\u0dba\u0dd2\u0dc3\u0dca\u0dad\u0dd4\u0dc0\u0d9a\u0dd2, 3</a>. \u0d91\u0dba \u0d86 ro \u0dcf\u0dad \u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd\u0d9a\u0dca \u0dc0\u0db1 \u0d85\u0dad\u0dbb \u0dc3\u0dd1\u0db8 \u0db4\u0dc4\u0dbb\u0d9a\u0dca\u0db8 \u0db1\u0dd2\u0d9b\u0dd2\u0dbd 3 \u0d9a\u0dd2\u0db1\u0dca \u0db1\u0dd2\u0dbb\u0dd6\u0db4\u0dab\u0dba \u0d9a\u0dd9\u0dbb\u0dda. \u0db4\u0dc5\u0db8\u0dd4 \u0daf\u0dd9\u0d9a x \u0dc3\u0dc4 y \u0daf\u0dd2\u0d9c\u0dda \u0dc0\u0dd2\u0dc3\u0dca\u0dae\u0dcf\u0db4\u0db1 \u0dc0\u0dda (<span translate=no>_^_1_^_</span>, <span translate=no>_^_2_^_</span>) \u0dc3\u0dc4 \u0d85\u0dc0\u0dc3\u0dcf\u0db1 \u0db1\u0dd2\u0d9b\u0dd2\u0dbd\u0dba \u0db4\u0dd1\u0db1\u0dd9\u0dc4\u0dd2 \u0dad\u0dad\u0dca\u0dc0\u0dba \u0db1\u0dd2\u0dbb\u0dd6\u0db4\u0dab\u0dba \u0d9a\u0dbb\u0dba\u0dd2, \u0d91\u0dba \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0dc3\u0dca\u0db4\u0dbb\u0dca\u0dc1 \u0d9a\u0dbb\u0db1\u0dca\u0db1\u0dda <span translate=no>_^_3_^_</span> \u0db1\u0db8\u0dca \u0dc3\u0dc4 <span translate=no>_^_4_^_</span> \u0d91\u0dc3\u0dda \u0db1\u0ddc\u0db8\u0dd0\u0dad\u0dd2\u0db1\u0db8\u0dca. </p>\n",
 "<p> Adjust by temperature <span translate=no>_^_0_^_</span></p>\n": "<p> \u0d8b\u0dc2\u0dca\u0dab\u0dad\u0dca\u0dc0\u0dba\u0d85\u0db1\u0dd4\u0dc0 \u0dc3\u0d9a\u0dc3\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span></p>\n",
 "<p><span translate=no>_^_0_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span> </p>\n",
 "<p><span translate=no>_^_0_^_</span> Although <span translate=no>_^_1_^_</span> has <span translate=no>_^_2_^_</span> (<span translate=no>_^_3_^_</span>) elements, the sum is only taken upto <span translate=no>_^_4_^_</span> because the rest is masked out.</p>\n<p>It might feel like we should be taking the sum and dividing by <span translate=no>_^_5_^_</span> and not <span translate=no>_^_6_^_</span>, but this will give higher weight for individual predictions in shorter sequences. We give equal weight to each prediction <span translate=no>_^_7_^_</span> when we divide by <span translate=no>_^_8_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span> <span translate=no>_^_2_^_</span> (<span translate=no>_^_3_^_</span>) \u0db8\u0dd6\u0dbd\u0daf\u0dca\u0dbb\u0dc0\u0dca\u0dba <span translate=no>_^_1_^_</span> \u0dad\u0dd2\u0db6\u0dd4\u0dab\u0daf, \u0d91\u0d9a\u0dad\u0dd4\u0dc0 \u0d9c\u0db1\u0dd4 \u0dbd\u0db6\u0db1\u0dca\u0db1\u0dda \u0d89\u0dad\u0dd2\u0dbb\u0dd2\u0dba \u0dc0\u0db1 <span translate=no>_^_4_^_</span> \u0db6\u0dd0\u0dc0\u0dd2\u0db1\u0dd2 \u0dc0\u0dd9\u0dc3\u0dca \u0dc0\u0dbd\u0dcf\u0d9c\u0dd9\u0db1. </p>\n<p>\u0d85\u0db4\u0d91\u0d9a\u0dad\u0dd4\u0dc0 \u0d9c\u0dd9\u0db1 \u0db6\u0dd9\u0daf\u0dd2\u0dba \u0dba\u0dd4\u0dad\u0dd4 \u0dba\u0dd0\u0dba\u0dd2 \u0dc4\u0dd0\u0d9f\u0dd9\u0db1\u0dd4 \u0d87\u0dad <span translate=no>_^_6_^_</span>, \u0db1\u0db8\u0dd4\u0dad\u0dca \u0db8\u0dd9\u0dba \u0d9a\u0dd9\u0da7\u0dd2 \u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd\u0dd2\u0db1\u0dca \u0dad\u0db1\u0dd2 \u0d85\u0db1\u0dcf\u0dc0\u0dd0\u0d9a\u0dd2 \u0dc3\u0db3\u0dc4\u0dcf \u0dc0\u0dd0\u0da9\u0dd2 \u0db6\u0dbb\u0d9a\u0dca \u0dbd\u0db6\u0dcf \u0daf\u0dd9\u0db1\u0dd4 \u0d87\u0dad. <span translate=no>_^_5_^_</span> \u0d85\u0db4\u0dd2 \u0db6\u0dd9\u0daf\u0dd9\u0db1 <span translate=no>_^_7_^_</span> \u0dc0\u0dd2\u0da7 \u0d85\u0db4\u0dd2 \u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0d85\u0db1\u0dcf\u0dc0\u0dd0\u0d9a\u0dd2\u0dba \u0dc3\u0db8\u0dcf\u0db1 \u0db6\u0dbb </p>\u0daf\u0dd9\u0db1\u0dca\u0db1 <span translate=no>_^_8_^_</span>\n",
 "<p><span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> have shapes <span translate=no>_^_2_^_</span>. We want to shape them to <span translate=no>_^_3_^_</span> because that&#x27;s the shape used in LSTM. </p>\n": "<p><span translate=no>_^_0_^_</span> \u0dc3\u0dc4 <span translate=no>_^_1_^_</span> \u0dc4\u0dd0\u0da9\u0dba\u0db1\u0dca <span translate=no>_^_2_^_</span>\u0d87\u0dad. LSTM \u0dc4\u0dd2 \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db1 \u0dc4\u0dd0\u0da9\u0dba <span translate=no>_^_3_^_</span> \u0db1\u0dd2\u0dc3\u0dcf \u0d85\u0db4\u0da7 \u0d92\u0dc0\u0dcf \u0dc4\u0dd0\u0da9\u0d9c\u0dc3\u0dca\u0dc0\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0da7 \u0d85\u0dc0\u0dc1\u0dca\u0dba\u0dba. </p>\n",
 "<p><span translate=no>_^_0_^_</span> file path is <span translate=no>_^_1_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span> \u0d9c\u0ddc\u0db1\u0dd4 \u0db8\u0dcf\u0dbb\u0dca\u0d9c\u0dba \u0dc0\u0dda <span translate=no>_^_1_^_</span> </p>\n",
 "<p><span translate=no>_^_0_^_</span> has shape <span translate=no>_^_1_^_</span> where the last dimension is the features <span translate=no>_^_2_^_</span>. We want to get <span translate=no>_^_3_^_</span> y and get the probabilities from each of the distributions in the mixture <span translate=no>_^_4_^_</span>.</p>\n<p><span translate=no>_^_5_^_</span> will have shape <span translate=no>_^_6_^_</span> </p>\n": "<p><span translate=no>_^_0_^_</span> \u0d85\u0dc0\u0dc3\u0dcf\u0db1 \u0db8\u0dcf\u0db1\u0dba \u0dbd\u0d9a\u0dca\u0dc2\u0dab <span translate=no>_^_1_^_</span> \u0dc0\u0db1 \u0dc4\u0dd0\u0da9\u0dba \u0d87\u0dad <span translate=no>_^_2_^_</span>. \u0d85\u0db4\u0da7 \u0d85\u0dc0\u0dc1\u0dca\u0dba \u0dc0\u0db1\u0dca\u0db1\u0dda <span translate=no>_^_3_^_</span> y \u0dbd\u0db6\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0da7 \u0dc3\u0dc4 \u0db8\u0dd2\u0dc1\u0dca\u0dbb\u0dab\u0dba\u0dda \u0d87\u0dad\u0dd2 \u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0dca \u0dc0\u0dbd\u0dd2\u0db1\u0dca \u0dc3\u0db8\u0dca\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf\u0dc0\u0db1\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0dba\u0dd2 <span translate=no>_^_4_^_</span>. </p>\n<p><span translate=no>_^_5_^_</span> \u0dc4\u0dd0\u0da9\u0dba \u0d87\u0dad <span translate=no>_^_6_^_</span> </p>\n",
 "<p><span translate=no>_^_0_^_</span> is the input to the decoder </p>\n": "<p><span translate=no>_^_0_^_</span> \u0dba\u0db1\u0dd4 \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a\u0dba\u0da7 \u0d86\u0daf\u0dcf\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dba\u0dd2 </p>\n",
 "<p>Add batch dimension and move it to device </p>\n": "<p>\u0d9a\u0dab\u0dca\u0da9\u0dcf\u0dba\u0db8\u0dca\u0db8\u0dcf\u0db1\u0dba\u0db1\u0dca \u0d91\u0d9a\u0dca \u0d9a\u0dbb \u0d91\u0dba \u0d8b\u0db4\u0dcf\u0d82\u0d9c\u0dba\u0da7 \u0d9c\u0dd9\u0db1 \u0dba\u0db1\u0dca\u0db1 </p>\n",
 "<p>Add hooks to monitor layer outputs on Tensorboard </p>\n": "<p>\u0da7\u0dd9\u0db1\u0dca\u0dc3\u0ddd\u0dbb\u0dca\u0db6\u0ddd\u0da9\u0dca\u0dc4\u0dd2 \u0dc3\u0dca\u0dae\u0dbb \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0daf\u0dcf\u0db1\u0dba\u0db1\u0dca \u0db1\u0dd2\u0dbb\u0dd3\u0d9a\u0dca\u0dc2\u0dab\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0d9a\u0ddc\u0d9a\u0dd4 \u0d91\u0d9a\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Add the new stroke to the sequence of strokes </p>\n": "<p>\u0d86ro \u0dcf\u0dad \u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd\u0da7 \u0db1\u0dc0 \u0d86 roke \u0dcf\u0dad\u0dba \u0d91\u0d9a\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Batch size </p>\n": "<p>\u0d9a\u0dab\u0dca\u0da9\u0dcf\u0dba\u0db8\u0dca\u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba </p>\n",
 "<p>Calculate the initial state </p>\n": "<p>\u0d86\u0dbb\u0db8\u0dca\u0db7\u0d9a\u0dad\u0dad\u0dca\u0dc0\u0dba \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Calculate the probabilities <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc3\u0db8\u0dca\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf\u0dc0\u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Clamp <span translate=no>_^_0_^_</span>, <span translate=no>_^_1_^_</span> and <span translate=no>_^_2_^_</span> to avoid getting <span translate=no>_^_3_^_</span>s </p>\n": "<p>\u0d9a\u0dbd\u0db8\u0dca\u0db4 <span translate=no>_^_0_^_</span>, <span translate=no>_^_1_^_</span> \u0dc3\u0dc4 <span translate=no>_^_3_^_</span>s \u0dbd\u0db6\u0dcf \u0dc0\u0dc5\u0d9a\u0dca\u0dc0\u0dcf <span translate=no>_^_2_^_</span> \u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0da7 </p>\n",
 "<p>Clamp <span translate=no>_^_0_^_</span>, <span translate=no>_^_1_^_</span> to <span translate=no>_^_2_^_</span> </p>\n": "<p>\u0d9a\u0dbd\u0db8\u0dca\u0db4 <span translate=no>_^_0_^_</span>, <span translate=no>_^_1_^_</span> \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 <span translate=no>_^_2_^_</span> </p>\n",
 "<p>Clip gradients </p>\n": "<p>\u0d9a\u0dca\u0dbd\u0dd2\u0db4\u0dca\u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dd2\u0d9a </p>\n",
 "<p>Compute gradients </p>\n": "<p>\u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dd2\u0d9a\u0d9c\u0dab\u0db1\u0dba </p>\n",
 "<p>Compute the loss </p>\n": "<p>\u0d85\u0dbd\u0dcf\u0db7\u0dba\u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Concatenate <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d9a\u0ddc\u0db1\u0dca\u0d9a\u0dd0\u0da7\u0dd9\u0db1\u0dda\u0da7\u0dca <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Configure the tracker to print the total train/validation loss </p>\n": "<p>\u0dc3\u0db8\u0dca\u0db4\u0dd6\u0dbb\u0dca\u0dab\u0daf\u0dd4\u0db8\u0dca\u0dbb\u0dd2\u0dba/\u0dc0\u0dbd\u0d82\u0d9c\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0d85\u0dbd\u0dcf\u0db7\u0dba \u0db8\u0dd4\u0daf\u0dca\u0dbb\u0dab\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0da7\u0dca\u0dbb\u0dd0\u0d9a\u0dbb\u0dca \u0dc3\u0d9a\u0dc3\u0db1\u0dca\u0db1 </p>\n",
 "<p>Convert to a floating point array and add to <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db4\u0dcf\u0dc0\u0dd9\u0db1\u0dbd\u0d9a\u0dca\u0dc2\u0dca\u0dba \u0d85\u0dbb\u0dcf\u0dc0\u0d9a\u0da7 \u0db4\u0dbb\u0dd2\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0dba \u0d9a\u0dbb \u0d91\u0d9a\u0dad\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Create a PyTorch tensor of the sequence of strokes </p>\n": "<p>\u0d86ro \u0dcf\u0dad \u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd\u0dd9\u0dc4\u0dd2 \u0db4\u0dba\u0dd2\u0da7\u0ddd\u0da0\u0dca \u0da7\u0dd9\u0db1\u0dca\u0dc3\u0dbb\u0dba\u0d9a\u0dca \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 </p>\n",
 "<p>Create a bi-variate Gaussian mixture <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> where <span translate=no>_^_2_^_</span> and <span translate=no>_^_3_^_</span></p>\n<p><span translate=no>_^_4_^_</span> is the categorical probabilities of choosing the distribution out of the mixture <span translate=no>_^_5_^_</span>. </p>\n": "<p>\u0daf\u0dca\u0dc0\u0dd2-\u0dc0\u0dd2\u0da0\u0dbd\u0dca\u0dbaGaussian \u0db8\u0dd2\u0dc1\u0dca\u0dbb\u0dab\u0dba\u0d9a\u0dca \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> \u0dc3\u0dc4 <span translate=no>_^_1_^_</span> \u0d9a\u0ddc\u0dc4\u0dda\u0daf <span translate=no>_^_2_^_</span> \u0dc3\u0dc4 <span translate=no>_^_3_^_</span></p>\n<p><span translate=no>_^_4_^_</span> \u0db8\u0dd2\u0dc1\u0dca\u0dbb\u0dab\u0dba\u0dd9\u0db1\u0dca \u0db6\u0dd9\u0daf\u0dcf \u0dc4\u0dd0\u0dbb\u0dd3\u0db8 \u0dad\u0ddd\u0dbb\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0dda \u0dc0\u0dbb\u0dca\u0d9c\u0dd3\u0d9a\u0dbb\u0dab \u0dc3\u0db8\u0dca\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf\u0dc0\u0db1\u0dca <span translate=no>_^_5_^_</span>\u0dc0\u0dda. </p>\n",
 "<p>Create a bidirectional LSTM taking a sequence of <span translate=no>_^_0_^_</span> as input. </p>\n": "<p>\u0d86\u0daf\u0dcf\u0db1\u0dba <span translate=no>_^_0_^_</span> \u0dbd\u0dd9\u0dc3 \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dba\u0d9a\u0dca \u0d9c\u0db1\u0dd2\u0db8\u0dd2\u0db1\u0dca \u0daf\u0dca\u0dc0\u0dd2\u0db4\u0dcf\u0dbb\u0dca\u0dc1\u0dca\u0dc0\u0dd2\u0d9a LSTM \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1. </p>\n",
 "<p>Create a new numpy array of the form <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db4\u0ddd\u0dbb\u0db8\u0dba\u0dda\u0db1\u0dc0 \u0d85\u0d82\u0d9a\u0dd4\u0dbb \u0d85\u0dbb\u0dcf \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Create an empty stroke <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc4\u0dd2\u0dc3\u0dca\u0d86\u0d9d\u0dcf\u0dad\u0dba \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Create bi-variate normal distribution.</p>\n<p>\ud83d\udcdd It would be efficient to <span translate=no>_^_0_^_</span> matrix as <span translate=no>_^_1_^_</span> where <span translate=no>_^_2_^_</span>. But for simplicity we use co-variance matrix. <a href=\"https://www2.stat.duke.edu/courses/Spring12/sta104.1/Lectures/Lec22.pdf\">This is a good resource</a> if you want to read up more about bi-variate distributions, their co-variance matrix, and probability density function. </p>\n": "<p>\u0daf\u0dca\u0dc0\u0dd2-\u0dc0\u0dd2\u0da0\u0dbd\u0dca\u0dba\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba \u0dc0\u0dca\u0dba\u0dcf\u0db4\u0dca\u0dad\u0dd2\u0dba\u0d9a\u0dca \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1. </p>\n<p>\ud83d\udcdd\u0d91\u0dba <span translate=no>_^_1_^_</span> \u0d9a\u0ddc\u0dc4\u0dd9\u0daf \u0dbd\u0dd9\u0dc3 <span translate=no>_^_0_^_</span> \u0d85\u0db1\u0dd4\u0d9a\u0dd8\u0dad\u0dd2\u0dba \u0d9a\u0dcf\u0dbb\u0dca\u0dba\u0d9a\u0dca\u0dc2\u0db8 \u0dc0\u0db1\u0dd4 <span translate=no>_^_2_^_</span>\u0d87\u0dad. \u0db1\u0db8\u0dd4\u0dad\u0dca \u0dc3\u0dbb\u0dbd \u0db6\u0dc0 \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0db4\u0dd2 \u0dc3\u0db8-\u0dc0\u0dd2\u0da0\u0dbd\u0dca\u0dba\u0dad\u0dcf \u0d85\u0db1\u0dd4\u0d9a\u0dd8\u0dad\u0dd2\u0dba \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db8\u0dd4. \u0daf\u0dca\u0dc0\u0dd2-\u0dc0\u0dd2\u0da0\u0dbd\u0dca\u0dba \u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0dca, \u0d92\u0dc0\u0dcf\u0dba\u0dda \u0dc3\u0db8-\u0dc0\u0dd2\u0da0\u0dbd\u0dca\u0dba\u0dad\u0dcf \u0d85\u0db1\u0dd4\u0d9a\u0dd8\u0dad\u0dd2\u0dba \u0dc3\u0dc4<a href=\"https://www2.stat.duke.edu/courses/Spring12/sta104.1/Lectures/Lec22.pdf\">\u0dc3\u0db8\u0dca\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf dens \u0db1\u0dad\u0dca\u0dc0 \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0d9a\u0dcf\u0dbb\u0dd2\u0dad\u0dca\u0dc0\u0dba \u0d9c\u0dd0\u0db1 \u0dc0\u0dd0\u0da9\u0dd2\u0daf\u0dd4\u0dbb \u0d9a\u0dd2\u0dba\u0dc0\u0dd3\u0db8\u0da7 \u0d94\u0db6\u0da7 \u0d85\u0dc0\u0dc1\u0dca\u0dba \u0db1\u0db8\u0dca \u0db8\u0dd9\u0dba \u0dc4\u0ddc\u0db3 \u0dc3\u0db8\u0dca\u0db4\u0dad\u0d9a\u0dd2</a> . </p>\n",
 "<p>Create categorical distribution <span translate=no>_^_0_^_</span> from logits </p>\n": "<p>\u0db4\u0dd2\u0dc0\u0dd2\u0dc3\u0dd4\u0db8\u0dca <span translate=no>_^_0_^_</span> \u0dc0\u0dbd\u0dd2\u0db1\u0dca \u0dc0\u0dbb\u0dca\u0d9c\u0dd3\u0d9a\u0dbb\u0dab \u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0d9a\u0dca \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 </p>\n",
 "<p>Create categorical distribution <span translate=no>_^_0_^_</span> with log-probabilities <span translate=no>_^_1_^_</span> or <span translate=no>_^_2_^_</span> </p>\n": "<p>\u0dbd\u0ddc\u0d9c\u0dca-\u0dc3\u0db8\u0dca\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf\u0dc0\u0db1\u0dca <span translate=no>_^_0_^_</span> <span translate=no>_^_1_^_</span> \u0dc3\u0db8\u0d9f \u0dc0\u0dbb\u0dca\u0d9c\u0dd3\u0d9a\u0dbb\u0dab \u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0d9a\u0dca \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 <span translate=no>_^_2_^_</span> </p>\n",
 "<p>Create sampler </p>\n": "<p>\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba\u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 </p>\n",
 "<p>Create training data loader </p>\n": "<p>\u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4\u0daf\u0dad\u0dca\u0dad \u0db4\u0dd0\u0da7\u0dc0\u0dd4\u0db8 \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 </p>\n",
 "<p>Create training dataset </p>\n": "<p>\u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4\u0daf\u0dad\u0dca\u0dad \u0dc3\u0db8\u0dd4\u0daf\u0dcf\u0dba \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 </p>\n",
 "<p>Create validation data loader </p>\n": "<p>\u0dc0\u0dbd\u0d82\u0d9c\u0dd4\u0daf\u0dad\u0dca\u0dad \u0db4\u0dd0\u0da7\u0dc0\u0dd4\u0db8 \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 </p>\n",
 "<p>Create validation dataset </p>\n": "<p>\u0dc0\u0dbd\u0d82\u0d9c\u0dd4\u0daf\u0dad\u0dca\u0dad \u0dc3\u0db8\u0dd4\u0daf\u0dcf\u0dba \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1 </p>\n",
 "<p>Decode the mixture of distributions and <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0dca\u0db8\u0dd2\u0dc1\u0dca\u0dbb\u0dab\u0dba \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0dc4 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Device configurations to pick the device to run the experiment </p>\n": "<p>\u0d85\u0dad\u0dca\u0dc4\u0daf\u0dcf\u0db6\u0dd0\u0dbd\u0dd3\u0db8 \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0d8b\u0db4\u0dcf\u0d82\u0d9c\u0dba \u0dad\u0ddd\u0dbb\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0da7 \u0d8b\u0db4\u0dcf\u0d82\u0d9c \u0dc0\u0dd2\u0db1\u0dca\u0dba\u0dcf\u0dc3\u0dba\u0db1\u0dca </p>\n",
 "<p>Don&#x27;t show axes </p>\n": "<p>\u0d85\u0d9a\u0dca\u0dc2\u0db4\u0dd9\u0db1\u0dca\u0dc0\u0db1\u0dca\u0db1 \u0d91\u0db4\u0dcf </p>\n",
 "<p>Encode the sequence of strokes </p>\n": "<p>\u0d86ro \u0dcf\u0dad \u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd \u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Encoder and decoder sizes </p>\n": "<p>\u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dca\u0dc3\u0dc4 \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab </p>\n",
 "<p>Filter if the length of the sequence of strokes is within our range </p>\n": "<p>\u0d86ro \u0dcf\u0dad \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dba\u0dda \u0daf\u0dd2\u0d9c \u0d85\u0db4\u0d9c\u0dda \u0db4\u0dbb\u0dcf\u0dc3\u0dba \u0dad\u0dd4\u0dc5 \u0dad\u0dd2\u0db6\u0dda \u0db1\u0db8\u0dca \u0db4\u0dd9\u0dbb\u0dc4\u0db1\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Filter out stroke sequences longer than <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc0\u0da9\u0dcf\u0daf\u0dd2\u0d9c\u0dd4 \u0d86 roke \u0dcf\u0dad \u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd \u0db4\u0dd9\u0dbb\u0dc4\u0db1\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Get <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dbd\u0db6\u0dcf\u0d9c\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Get <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0dbd\u0db6\u0dcf <span translate=no>_^_0_^_</span> \u0d9c\u0db1\u0dca\u0db1 <span translate=no>_^_1_^_</span> </p>\n",
 "<p>Get <span translate=no>_^_0_^_</span> from the encoder </p>\n": "<p><span translate=no>_^_0_^_</span> \u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dba\u0dd9\u0db1\u0dca \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get <span translate=no>_^_0_^_</span>, <span translate=no>_^_1_^_</span>, <span translate=no>_^_2_^_</span> and the next state from the decoder </p>\n": "<p><span translate=no>_^_1_^_</span><span translate=no>_^_2_^_</span> \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a\u0dba\u0dd9\u0db1\u0dca \u0d8a\u0dc5\u0d9f \u0dad\u0dad\u0dca\u0dc0\u0dba \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span></p>\n",
 "<p>Get <span translate=no>_^_0_^_</span>, <span translate=no>_^_1_^_</span>, and <span translate=no>_^_2_^_</span> </p>\n": "<p>\u0dbd\u0db6\u0dcf\u0d9c\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span><span translate=no>_^_1_^_</span>, \u0dc3\u0dc4 <span translate=no>_^_2_^_</span> </p>\n",
 "<p>Get <span translate=no>_^_0_^_</span>. <span translate=no>_^_1_^_</span> splits the output into 6 tensors of size <span translate=no>_^_2_^_</span> across dimension <span translate=no>_^_3_^_</span>. </p>\n": "<p>\u0dbd\u0db6\u0dcf\u0d9c\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span>. <span translate=no>_^_1_^_</span> \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0daf\u0dcf\u0db1\u0dba \u0db8\u0dcf\u0db1\u0dba\u0d9a\u0dca <span translate=no>_^_2_^_</span> \u0dc4\u0dbb\u0dc4\u0dcf \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba tensors 6 \u0db6\u0dc0\u0da7 splits <span translate=no>_^_3_^_</span>. </p>\n",
 "<p>Get a sample </p>\n": "<p>\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba\u0d9a\u0dca\u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get covariance matrix </p>\n": "<p>\u0d9a\u0ddd\u0dc0\u0dd2\u0da0\u0dd2\u0dba\u0db1\u0dca\u0dc3\u0dca\u0d85\u0db1\u0dd4\u0d9a\u0dd8\u0dad\u0dd2\u0dba \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get means </p>\n": "<p>\u0db8\u0dcf\u0db0\u0dca\u0dba\u0dba\u0db1\u0dca\u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Get mixture of distributions and <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0dca\u0db8\u0dd2\u0dc1\u0dca\u0dbb\u0dab\u0dba \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Get temperature adjusted <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0d8b\u0dc2\u0dca\u0dab\u0dad\u0dca\u0dc0\u0dba\u0dc3\u0d9a\u0dc3\u0dca \u0d9a\u0dbb <span translate=no>_^_0_^_</span> \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 <span translate=no>_^_1_^_</span> </p>\n",
 "<p>Get the longest sequence length among all sequences </p>\n": "<p>\u0dc3\u0dd2\u0dba\u0dbd\u0dd4\u0db8\u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd\u0dc0\u0dbd\u0dca \u0d85\u0dad\u0dbb \u0daf\u0dd2\u0d9c\u0db8 \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dd2\u0d9a \u0daf\u0dd2\u0d9c \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Gradient clipping </p>\n": "<p>\u0dc1\u0dca\u0dbb\u0dda\u0dab\u0dd2\u0dba\u0dda\u0d9a\u0dca\u0dbd\u0dd2\u0db4\u0dd2\u0db1\u0dca </p>\n",
 "<p>Head to get <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dbd\u0db6\u0dcf\u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0da7 \u0db4\u0dca\u0dbb\u0db0\u0dcf\u0db1\u0dd2\u0dba\u0dcf <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Increment step in training mode </p>\n": "<p>\u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4\u0db8\u0dcf\u0daf\u0dd2\u0dbd\u0dd2\u0dba\u0dda \u0dc0\u0dbb\u0dca\u0db0\u0d9a \u0db4\u0dd2\u0dba\u0dc0\u0dbb </p>\n",
 "<p>Initial decoder is <span translate=no>_^_0_^_</span>. The decoder will initialize it to <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0d86\u0dbb\u0db8\u0dca\u0db7\u0d9a\u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a\u0dba \u0dc0\u0dda <span translate=no>_^_0_^_</span>. \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a\u0dba \u0d91\u0dba \u0d86\u0dbb\u0db8\u0dca\u0db7 \u0d9a\u0dbb\u0db1\u0dd4 \u0d87\u0dad <span translate=no>_^_1_^_</span> </p>\n",
 "<p>Initial state of the LSTM is <span translate=no>_^_0_^_</span>. <span translate=no>_^_1_^_</span> is the linear transformation for this </p>\n": "<p>LSTM\u0dc4\u0dd2 \u0d86\u0dbb\u0db8\u0dca\u0db7\u0d9a \u0dad\u0dad\u0dca\u0dc0\u0dba \u0dc0\u0dda <span translate=no>_^_0_^_</span>. <span translate=no>_^_1_^_</span> \u0db8\u0dda \u0dc3\u0db3\u0dc4\u0dcf \u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0db4\u0dbb\u0dd2\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0dba\u0dba\u0dd2 </p>\n",
 "<p>Initialize encoder &amp; decoder </p>\n": "<p>\u0d91\u0db1\u0dca\u0d9a\u0ddd\u0da9\u0dbb\u0dba\u0dc3\u0dc4 \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0d9a\u0dba \u0d86\u0dbb\u0db8\u0dca\u0db7 \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>LSTM takes <span translate=no>_^_0_^_</span> as input </p>\n": "<p>LSTM\u0d86\u0daf\u0dcf\u0db1\u0dba <span translate=no>_^_0_^_</span> \u0dbd\u0dd9\u0dc3 \u0d9c\u0db1\u0dd3 </p>\n",
 "<p>Load the numpy file </p>\n": "<p>\u0d85\u0d82\u0d9a\u0dd2\u0dad\u0d9c\u0ddc\u0db1\u0dd4\u0dc0 \u0db4\u0dd6\u0dbb\u0dab\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Log model parameters and gradients </p>\n": "<p>\u0dbd\u0ddc\u0d9c\u0dca\u0d86\u0daf\u0dbb\u0dca\u0dc1 \u0db4\u0dbb\u0dcf\u0db8\u0dd2\u0dad\u0dd3\u0db1\u0dca \u0dc3\u0dc4 \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dd2\u0d9a </p>\n",
 "<p>Mask is on until end of sequence </p>\n": "<p>\u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dba\u0d85\u0dc0\u0dc3\u0db1\u0dca \u0dc0\u0db1 \u0dad\u0dd9\u0d9a\u0dca \u0db8\u0dcf\u0dc3\u0dca\u0d9a\u0dca \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0dc0\u0dda </p>\n",
 "<p>Move <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> to device and swap the sequence and batch dimensions. <span translate=no>_^_2_^_</span> will have shape <span translate=no>_^_3_^_</span> and <span translate=no>_^_4_^_</span> will have shape <span translate=no>_^_5_^_</span>. </p>\n": "<p>\u0d8b\u0db4\u0dcf\u0d82\u0d9c\u0dba <span translate=no>_^_1_^_</span> \u0dc0\u0dd9\u0dad \u0d9c\u0dd9\u0db1 <span translate=no>_^_0_^_</span> \u0d9c\u0ddc\u0dc3\u0dca \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dba \u0dc3\u0dc4 \u0d9a\u0dab\u0dca\u0da9\u0dcf\u0dba\u0db8\u0dca \u0db8\u0dcf\u0db1\u0dba\u0db1\u0dca \u0db8\u0dcf\u0dbb\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1. <span translate=no>_^_2_^_</span> \u0dc4\u0dd0\u0da9\u0dba \u0d87\u0dad\u0dd2 <span translate=no>_^_3_^_</span> \u0d85\u0dad\u0dbb \u0dc4\u0dd0\u0da9\u0dba <span translate=no>_^_4_^_</span> \u0d87\u0dad <span translate=no>_^_5_^_</span>. </p>\n",
 "<p>Name of the dataset </p>\n": "<p>\u0daf\u0dad\u0dca\u0dad\u0dc3\u0db8\u0dd4\u0daf\u0dcf\u0dba \u0db1\u0db8 </p>\n",
 "<p>Number of distributions in the mixture, <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db8\u0dd2\u0dc1\u0dca\u0dbb\u0dab\u0dba\u0dda\u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0dca \u0d9c\u0dab\u0db1, <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Number of features in <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c\u0d9c\u0dab\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Number of inner iterations within an epoch to switch between training, validation and sampling. </p>\n": "<p>\u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4\u0dc0, \u0dc0\u0dbd\u0d82\u0d9c\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0dc4 \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8 \u0d85\u0dad\u0dbb \u0db8\u0dcf\u0dbb\u0dd4\u0dc0\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0d91\u0db4\u0ddd\u0da0\u0dca \u0dad\u0dd4\u0dc5 \u0d85\u0db7\u0dca\u0dba\u0db1\u0dca\u0dad\u0dbb \u0db4\u0dd4\u0db1\u0dbb\u0dcf\u0dc0\u0dbb\u0dca\u0dad\u0db1 \u0d9c\u0dab\u0db1. </p>\n",
 "<p>Only if we are in training state </p>\n": "<p>\u0d85\u0db4\u0db4\u0dd4\u0dc4\u0dd4\u0dab\u0dd4 \u0dad\u0dad\u0dca\u0dc0\u0dba\u0dda \u0dc3\u0dd2\u0da7\u0dd3 \u0db1\u0db8\u0dca \u0db4\u0db8\u0dab\u0dd2 </p>\n",
 "<p>Optimize </p>\n": "<p>\u0db4\u0dca\u0dbb\u0dc1\u0dc3\u0dca\u0dad\u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Pass a dictionary of configurations </p>\n": "<p>\u0dc0\u0dd2\u0db1\u0dca\u0dba\u0dcf\u0dc3\u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0dc1\u0db6\u0dca\u0daf\u0d9a\u0ddd\u0dc2\u0dba\u0d9a\u0dca \u0dc3\u0db8\u0dca\u0db8\u0dad \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Plot each sequence of strokes </p>\n": "<p>\u0db4\u0dc4\u0dbb\u0dc0\u0dbd\u0dca\u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd \u0dc3\u0dd0\u0dbd\u0dc3\u0dd4\u0db8\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Plot the sequence of strokes </p>\n": "<p>\u0d86ro \u0dcf\u0dad \u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd \u0dc3\u0dd0\u0dbd\u0dc3\u0dd4\u0db8\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Randomly pick a sample from validation dataset to encoder </p>\n": "<p>\u0d85\u0dc4\u0db9\u0dd4\u0dbd\u0dd9\u0dc3 \u0dc0\u0dbd\u0d82\u0d9c\u0dd4 \u0daf\u0dad\u0dca\u0dad \u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba\u0dda \u0dc3\u0dd2\u0da7 \u0d86\u0d9a\u0dda\u0dad\u0d9a\u0dba \u0daf\u0d9a\u0dca\u0dc0\u0dcf \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba\u0d9a\u0dca \u0dad\u0ddd\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Run optimizer </p>\n": "<p>\u0db0\u0dcf\u0dc0\u0db1\u0dba\u0db4\u0dca\u0dbb\u0dc1\u0dc3\u0dca\u0dad\u0d9a\u0dbb\u0dab\u0dba </p>\n",
 "<p>Run the LSTM </p>\n": "<p>LSTM\u0db0\u0dcf\u0dc0\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Run the experiment </p>\n": "<p>\u0d85\u0dad\u0dca\u0dc4\u0daf\u0dcf\u0db6\u0dd0\u0dbd\u0dd3\u0db8 \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Sample </p>\n": "<p>\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba </p>\n",
 "<p>Sample <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Sample <span translate=no>_^_0_^_</span> strokes </p>\n": "<p>\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2 <span translate=no>_^_0_^_</span> \u0db4\u0dc4\u0dbb\u0dc0\u0dbd\u0dca </p>\n",
 "<p>Sample a stroke </p>\n": "<p>\u0d86\u0d9d\u0dcf\u0dad\u0dba\u0dc3\u0dcf\u0db8\u0dca\u0db4\u0dbd\u0dba\u0d9a\u0dca </p>\n",
 "<p>Sample from <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc0\u0dd9\u0dad\u0dd2\u0db1\u0dca\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Sample from <span translate=no>_^_0_^_</span> the index of the distribution to use from the mixture </p>\n": "<p>\u0db8\u0dd2\u0dc1\u0dca\u0dbb\u0dab\u0dba\u0dd9\u0db1\u0dca\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0db6\u0dd9\u0daf\u0dcf \u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0dda \u0daf\u0dbb\u0dca\u0dc1\u0d9a\u0dba\u0dd9\u0db1\u0dca \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Sample from the normal distributions in the mixture and pick the one indexed by <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db8\u0dd2\u0dc1\u0dca\u0dbb\u0dab\u0dba\u0dda\u0dc3\u0dcf\u0db8\u0dcf\u0db1\u0dca\u0dba \u0db6\u0dd9\u0daf\u0dcf\u0dc4\u0dd0\u0dbb\u0dd3\u0db8\u0dca \u0dc0\u0dbd\u0dd2\u0db1\u0dca \u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd2\u0dba \u0dc3\u0dc4 \u0dc3\u0dd4\u0da0\u0dd2\u0d9c\u0dad \u0d9a\u0dbb\u0db1 \u0dbd\u0daf \u0d91\u0d9a \u0dad\u0ddd\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Scale and set <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db4\u0dbb\u0dd2\u0db8\u0dcf\u0dab\u0dba\u0dc3\u0dc4 \u0d9a\u0da7\u0dca\u0da7\u0dbd\u0dba <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Set <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dc3\u0d9a\u0dc3\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Set <span translate=no>_^_0_^_</span> to zero </p>\n": "<p><span translate=no>_^_0_^_</span> \u0dc1\u0dd4\u0db1\u0dca\u0dba\u0dba\u0da7 \u0dc3\u0d9a\u0dc3\u0db1\u0dca\u0db1 </p>\n",
 "<p>Set optimizer. Things like type of optimizer and learning rate are configurable </p>\n": "<p>\u0db4\u0dca\u0dbb\u0dc1\u0dc3\u0dca\u0dad\u0d9a\u0dbb\u0dab\u0dba\u0dc3\u0d9a\u0dc3\u0db1\u0dca\u0db1. \u0db4\u0dca\u0dbb\u0dc1\u0dc3\u0dca\u0dad\u0dd2\u0d9a\u0dbb\u0dab \u0dc0\u0dbb\u0dca\u0d9c\u0dba \u0dc3\u0dc4 \u0d89\u0d9c\u0dd9\u0db1\u0dd4\u0db8\u0dca \u0d85\u0db1\u0dd4\u0db4\u0dcf\u0dad\u0dba \u0dc0\u0dd0\u0db1\u0dd2 \u0daf\u0dda\u0dc0\u0dbd\u0dca \u0dc0\u0dd2\u0db1\u0dca\u0dba\u0dcf\u0dc3\u0d9c\u0dad \u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2\u0dba </p>\n",
 "<p>Set temperature <span translate=no>_^_0_^_</span> for sampling. This is implemented in class <span translate=no>_^_1_^_</span>. </p>\n": "<p>\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0dca <span translate=no>_^_0_^_</span> \u0dc3\u0db3\u0dc4\u0dcf \u0d8b\u0dc2\u0dca\u0dab\u0dad\u0dca\u0dc0\u0dba \u0dc3\u0d9a\u0dc3\u0db1\u0dca\u0db1. \u0db8\u0dd9\u0dba \u0db4\u0db1\u0dca\u0dad\u0dd2\u0dba\u0dda \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0dc0\u0dda <span translate=no>_^_1_^_</span>. </p>\n",
 "<p>Show the plot </p>\n": "<p>\u0d9a\u0dd4\u0db8\u0db1\u0dca\u0dad\u0dca\u0dbb\u0dab\u0dba\u0db4\u0dd9\u0db1\u0dca\u0dc0\u0db1\u0dca\u0db1 </p>\n",
 "<p>Size of the dataset </p>\n": "<p>\u0daf\u0dad\u0dca\u0dad\u0dc3\u0db8\u0dd4\u0daf\u0dcf\u0dba \u0db4\u0dca\u0dbb\u0db8\u0dcf\u0dab\u0dba </p>\n",
 "<p>Split the array at points where <span translate=no>_^_0_^_</span> is <span translate=no>_^_1_^_</span>. i.e. split the array of strokes at the points where the pen is lifted from the paper. This gives a list of sequence of strokes. </p>\n": "<p>\u0d9a\u0ddc\u0dc4\u0dd9\u0daf <span translate=no>_^_0_^_</span> \u0dbd\u0d9a\u0dd4\u0dab\u0dd4 \u0daf\u0dd3 \u0d85\u0dbb\u0dcf\u0dc0 \u0db6\u0dd9\u0daf\u0db1\u0dca\u0db1 <span translate=no>_^_1_^_</span>. i.e. \u0db4\u0dd1\u0db1 \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0dc3\u0dd2\u0da7 \u0d94\u0dc3\u0dc0\u0dcf \u0d91\u0dc4\u0dd2\u0daf\u0dd3 \u0dbd\u0d9a\u0dd4\u0dab\u0dd4 \u0daf\u0dd3 \u0db4\u0dd2\u0dbd\u0dd2 \u0d85\u0dbb\u0dcf\u0dc0 \u0db6\u0dd9\u0daf\u0dd3. \u0db8\u0dd9\u0dba \u0d86 ro \u0dcf\u0dad \u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd \u0dbd\u0dd0\u0dba\u0dd2\u0dc3\u0dca\u0dad\u0dd4\u0dc0\u0d9a\u0dca \u0dbd\u0db6\u0dcf \u0daf\u0dd9\u0dba\u0dd2. </p>\n",
 "<p>Start-of-sequence is <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd\u0d86\u0dbb\u0db8\u0dca\u0db7 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Start-of-sequence stroke is <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0d86\u0dbb\u0db8\u0dca\u0db7\u0d9a\u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dba \u0d86 roke \u0dcf\u0dad\u0dba \u0dc0\u0dda <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Stop sampling if <span translate=no>_^_0_^_</span>. This indicates that sketching has stopped </p>\n": "<p>\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8\u0db1\u0dc0\u0dad\u0dca\u0dc0\u0db1\u0dca\u0db1 \u0db1\u0db8\u0dca <span translate=no>_^_0_^_</span>. \u0db8\u0dd9\u0dba\u0dd2\u0db1\u0dca \u0d87\u0d9f\u0dc0\u0dd9\u0db1\u0dca\u0db1\u0dda \u0dc3\u0dca\u0d9a\u0dd3\u0da0\u0dca \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0db1\u0dad\u0dbb \u0dc0\u0dd3 \u0d87\u0dad\u0dd2 </p>\u0db6\u0dc0\u0dba\u0dd2\n",
 "<p>Take the cumulative sums of <span translate=no>_^_0_^_</span> to get <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0dbd\u0db6\u0dcf\u0d9c\u0dd0\u0db1\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0db8\u0dd4\u0da0\u0dca\u0da0\u0dd2\u0dad <span translate=no>_^_0_^_</span> \u0dc3\u0dcf\u0dbb\u0dcf\u0d82\u0dc1 \u0d9c\u0db1\u0dca\u0db1 <span translate=no>_^_1_^_</span> </p>\n",
 "<p>Temperature <span translate=no>_^_0_^_</span> for sampling </p>\n": "<p>\u0db1\u0dd2\u0dba\u0dd0\u0daf\u0dd3\u0db8 <span translate=no>_^_0_^_</span> \u0dc3\u0db3\u0dc4\u0dcf \u0d8b\u0dc2\u0dca\u0dab\u0dad\u0dca\u0dc0\u0dba </p>\n",
 "<p>The hidden state of the bidirectional LSTM is the concatenation of the output of the last token in the forward direction and first token in the reverse direction, which is what we want. <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0daf\u0dca\u0dc0\u0dd2\u0db4\u0dcf\u0dbb\u0dca\u0dc1\u0dca\u0dc0\u0dd2\u0d9a\u0d91\u0dbd\u0dca\u0d91\u0dc3\u0dca\u0da7\u0dd3\u0d91\u0db8\u0dca \u0dc4\u0dd2 \u0dc3\u0dd0\u0d9f\u0dc0\u0dd4\u0dab\u0dd4 \u0dad\u0dad\u0dca\u0dc0\u0dba \u0dba\u0db1\u0dd4 \u0d85\u0dc0\u0dc3\u0dcf\u0db1 \u0da7\u0ddd\u0d9a\u0db1\u0dba\u0dda \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0daf\u0dcf\u0db1\u0dba \u0d89\u0daf\u0dd2\u0dbb\u0dd2 \u0daf\u0dd2\u0dc1\u0dcf\u0dc0\u0da7 \u0dc3\u0dc4 \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0dbd\u0ddd\u0db8 \u0daf\u0dd2\u0dc1\u0dcf\u0dc0\u0da7 \u0db4\u0dc5\u0db8\u0dd4 \u0da7\u0ddd\u0d9a\u0db1\u0dba \u0dc3\u0d82\u0dba\u0dd4\u0d9a\u0dca\u0dad \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dba\u0dd2, \u0d91\u0dba \u0d85\u0db4\u0da7 \u0d85\u0dc0\u0dc1\u0dca\u0dba \u0daf\u0dd9\u0dba\u0dba\u0dd2. <span translate=no>_^_0_^_</span> </p>\n",
 "<p>The mask array needs only one extra-step since it is for the outputs of the decoder, which takes in <span translate=no>_^_0_^_</span> and predicts next step. </p>\n": "<p>\u0dc0\u0dd9\u0dc3\u0dca\u0d85\u0dbb\u0dcf \u0d85\u0dc0\u0dc1\u0dca\u0dba \u0dc0\u0db1\u0dca\u0db1\u0dda \u0d91\u0d9a\u0dca \u0d85\u0db8\u0dad\u0dbb \u0db4\u0dd2\u0dba\u0dc0\u0dbb\u0d9a\u0dca \u0db4\u0db8\u0dab\u0dd2, \u0db8\u0db1\u0dca\u0daf \u0d91\u0dba \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0db1\u0dba\u0dda \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0daf\u0dcf\u0db1\u0dba\u0db1\u0dca \u0dc3\u0db3\u0dc4\u0dcf \u0dc0\u0db1 <span translate=no>_^_0_^_</span> \u0d85\u0dad\u0dbb \u0d91\u0dba \u0d8a\u0dc5\u0d9f \u0db4\u0dd2\u0dba\u0dc0\u0dbb \u0d9c\u0db1\u0dd3. </p>\n",
 "<p>The state has shape <span translate=no>_^_0_^_</span>, where the first dimension is the direction. We rearrange it to get <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0dbb\u0dcf\u0da2\u0dca\u0dba\u0dba\u0da7\u0dc4\u0dd0\u0da9\u0dba \u0d87\u0dad <span translate=no>_^_0_^_</span>, \u0d91\u0dc4\u0dd2\u0daf\u0dd3 \u0db4\u0dc5\u0db8\u0dd4 \u0db8\u0dcf\u0db1\u0dba \u0daf\u0dd2\u0dc1\u0dcf\u0dc0 \u0dc0\u0dda. \u0dbd\u0db6\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0db4\u0dd2 \u0d91\u0dba \u0db1\u0dd0\u0dc0\u0dad \u0dc3\u0d9a\u0dc3\u0dca </p>\u0d9a\u0dbb\u0db8\u0dd4 <span translate=no>_^_1_^_</span>\n",
 "<p>These parameters are stored for future reference </p>\n": "<p>\u0db8\u0dd9\u0db8\u0db4\u0dbb\u0dcf\u0db8\u0dd2\u0dad\u0dd3\u0db1\u0dca \u0d85\u0db1\u0dcf\u0d9c\u0dad \u0dba\u0ddc\u0db8\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0d9c\u0db6\u0da9\u0dcf \u0d9a\u0dbb \u0d87\u0dad </p>\n",
 "<p>This head is for the logits <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db8\u0dd9\u0db8\u0dc4\u0dd2\u0dc3 \u0db4\u0dd2\u0dc0\u0dd2\u0dc3\u0dd4\u0db8\u0dca \u0dc3\u0db3\u0dc4\u0dcf \u0dc0\u0dda <span translate=no>_^_0_^_</span> </p>\n",
 "<p>This is to calculate <span translate=no>_^_0_^_</span> where <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0db8\u0dd9\u0dba <span translate=no>_^_0_^_</span> \u0d9a\u0ddc\u0dad\u0dd0\u0db1\u0daf \u0dba\u0db1\u0dca\u0db1 \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dba\u0dd2 <span translate=no>_^_1_^_</span> </p>\n",
 "<p>This layer produces outputs for each of the <span translate=no>_^_0_^_</span>. Each distribution needs six parameters <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0db8\u0dd9\u0db8\u0dc3\u0dca\u0dad\u0dbb\u0dba \u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0dc3\u0db3\u0dc4\u0dcf \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0daf\u0dcf\u0db1\u0dba\u0db1\u0dca \u0db1\u0dd2\u0dc2\u0dca\u0db4\u0dcf\u0daf\u0db1\u0dba \u0d9a\u0dbb\u0dba\u0dd2 <span translate=no>_^_0_^_</span>. \u0dc3\u0dd1\u0db8 \u0dc0\u0dca\u0dba\u0dcf\u0db4\u0dca\u0dad\u0dd2\u0dba\u0d9a\u0da7\u0db8 \u0db4\u0dbb\u0dcf\u0db8\u0dd2\u0dad\u0dd3\u0db1\u0dca \u0dc4\u0dba\u0d9a\u0dca \u0d85\u0dc0\u0dc1\u0dca\u0dba </p>\u0dc0\u0dda <span translate=no>_^_1_^_</span>\n",
 "<p>Track losses </p>\n": "<p>\u0db4\u0dcf\u0da9\u0dd4\u0dbd\u0dd4\u0dc4\u0dd4\u0db6\u0db3\u0dd2\u0db1\u0dca\u0db1 </p>\n",
 "<p>We don&#x27;t need gradients </p>\n": "<p>\u0d85\u0db4\u0da7\u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dd2\u0d9a \u0d85\u0dc0\u0dc1\u0dca\u0dba \u0db1\u0ddc\u0dc0\u0dda </p>\n",
 "<p>We initialize PyTorch data array with two extra steps for start-of-sequence (sos) and end-of-sequence (eos). Each step is a vector <span translate=no>_^_0_^_</span>. Only one of <span translate=no>_^_1_^_</span> is <span translate=no>_^_2_^_</span> and the others are <span translate=no>_^_3_^_</span>. They represent <em>pen down</em>, <em>pen up</em> and <em>end-of-sequence</em> in that order. <span translate=no>_^_4_^_</span> is <span translate=no>_^_5_^_</span> if the pen touches the paper in the next step. <span translate=no>_^_6_^_</span> is <span translate=no>_^_7_^_</span> if the pen doesn&#x27;t touch the paper in the next step. <span translate=no>_^_8_^_</span> is <span translate=no>_^_9_^_</span> if it is the end of the drawing. </p>\n": "<p>\u0d86\u0dbb\u0db8\u0dca\u0db7\u0d9a\u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dba (sos) \u0dc3\u0dc4 \u0d85\u0dc0\u0dc3\u0dcf\u0db1 \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dba (eos) \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0db8\u0dad\u0dbb \u0db4\u0dd2\u0dba\u0dc0\u0dbb \u0daf\u0dd9\u0d9a\u0d9a\u0dca \u0dc3\u0db8\u0d9f \u0d85\u0db4\u0dd2 PyTorch \u0daf\u0dad\u0dca\u0dad \u0d85\u0dbb\u0dcf\u0dc0 \u0d86\u0dbb\u0db8\u0dca\u0db7 \u0d9a\u0dbb\u0db8\u0dd4. \u0dc3\u0dd1\u0db8 \u0db4\u0dd2\u0dba\u0dc0\u0dbb\u0d9a\u0dca\u0db8 \u0daf\u0ddb\u0dc1\u0dd2\u0d9a\u0dba\u0d9a\u0dd2 <span translate=no>_^_0_^_</span>. \u0d91\u0d9a\u0d9a\u0dca \u0db4\u0db8\u0dab\u0d9a\u0dca <span translate=no>_^_1_^_</span> \u0dc0\u0db1 <span translate=no>_^_2_^_</span> \u0d85\u0dad\u0dbb \u0d85\u0db1\u0dd9\u0d9a\u0dca \u0d92\u0dc0\u0dcf \u0dc0\u0dda <span translate=no>_^_3_^_</span>. \u0d92\u0dc0\u0dcf \u0db1\u0dd2\u0dba\u0ddd\u0da2\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1\u0dda <em>\u0db4\u0dd1\u0db1 \u0db4\u0dc4\u0dc5\u0da7</em>, <em>\u0db4\u0dd1\u0db1 \u0d89\u0dc4\u0dc5\u0da7</em>\u0dc3\u0dc4 \u0d91\u0db8 <em>\u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd\u0da7 \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dba \u0d85\u0dc0\u0dc3\u0db1\u0dca</em>\u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dba\u0dd2. <span translate=no>_^_4_^_</span> \u0d8a\u0dc5\u0d9f \u0db4\u0dd2\u0dba\u0dc0\u0dbb\u0dda\u0daf\u0dd3 \u0db4\u0dd1\u0db1 \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0dc3\u0dca\u0db4\u0dbb\u0dca\u0dc1 <span translate=no>_^_5_^_</span> \u0d9a\u0dbb\u0db1\u0dca\u0db1\u0dda \u0db1\u0db8\u0dca. <span translate=no>_^_6_^_</span> \u0d8a\u0dc5\u0d9f \u0db4\u0dd2\u0dba\u0dc0\u0dbb\u0dda\u0daf\u0dd3 \u0db4\u0dd1\u0db1 \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0dc3\u0dca\u0db4\u0dbb\u0dca\u0dc1 \u0db1\u0ddc\u0d9a\u0dbb\u0db1\u0dca\u0db1\u0dda <span translate=no>_^_7_^_</span> \u0db1\u0db8\u0dca. <span translate=no>_^_8_^_</span> \u0d91\u0dba \u0da0\u0dd2\u0dad\u0dca\u0dbb\u0dba\u0dda \u0d85\u0dc0\u0dc3\u0dcf\u0db1\u0dba <span translate=no>_^_9_^_</span> \u0db1\u0db8\u0dca \u0dc0\u0dda. </p>\n",
 "<p>We iterate through each of the sequences and filter </p>\n": "<p>\u0d85\u0db4\u0dd2\u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0d85\u0db1\u0dd4\u0db4\u0dd2\u0dc5\u0dd2\u0dc0\u0dd9\u0dbd \u0dc3\u0dc4 \u0db4\u0dd9\u0dbb\u0dd3\u0db8 \u0dc4\u0dbb\u0dc4\u0dcf \u0db1\u0dd0\u0dc0\u0dad \u0db1\u0dd0\u0dc0\u0dad\u0dad\u0dca </p>\n",
 "<p>We then calculate the scaling factor which is the standard deviation of (<span translate=no>_^_0_^_</span>, <span translate=no>_^_1_^_</span>) combined. Paper notes that the mean is not adjusted for simplicity, since the mean is anyway close to <span translate=no>_^_2_^_</span>. </p>\n": "<p>\u0d91\u0dc0\u0dd2\u0da7\u0d85\u0db4\u0dd2 (<span translate=no>_^_0_^_</span>, <span translate=no>_^_1_^_</span>) \u0d92\u0d9a\u0dcf\u0db6\u0daf\u0dca\u0db0 \u0dc3\u0db8\u0dca\u0db8\u0dad \u0d85\u0db4\u0d9c\u0db8\u0db1\u0dba \u0dc0\u0db1 \u0db4\u0dbb\u0dd2\u0db8\u0dcf\u0dab \u0dc3\u0dcf\u0db0\u0d9a\u0dba \u0d9c\u0dab\u0db1\u0dba. \u0db8\u0db0\u0dca\u0dba\u0db1\u0dca\u0dba\u0dba \u0d9a\u0dd9\u0dc3\u0dda \u0dc0\u0dd9\u0dad\u0dad\u0dca \u0dc3\u0db8\u0dd3\u0db4 \u0db6\u0dd0\u0dc0\u0dd2\u0db1\u0dca \u0dc3\u0dbb\u0dbd \u0db6\u0dc0 \u0dc3\u0db3\u0dc4\u0dcf \u0db8\u0db0\u0dca\u0dba\u0db1\u0dca\u0dba\u0dba \u0dc3\u0d9a\u0dc3\u0dca \u0d9a\u0dbb \u0db1\u0ddc\u0db8\u0dd0\u0dad\u0dd2 \u0db6\u0dc0 \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0dc3\u0da7\u0dc4\u0db1\u0dca <span translate=no>_^_2_^_</span>\u0d9a\u0dbb\u0dba\u0dd2. </p>\n",
 "<p>We use a learning rate of <span translate=no>_^_0_^_</span> because we can see results faster. Paper had suggested <span translate=no>_^_1_^_</span>. </p>\n": "<p>\u0db4\u0dca\u0dbb\u0dad\u0dd2results \u0dbd \u0dc0\u0dda\u0d9c\u0dba\u0dd9\u0db1\u0dca \u0daf\u0dd0\u0d9a\u0dd2\u0dba \u0dc4\u0dd0\u0d9a\u0dd2 <span translate=no>_^_0_^_</span> \u0db1\u0dd2\u0dc3\u0dcf \u0d85\u0db4\u0dd2 \u0d89\u0d9c\u0dd9\u0db1\u0dd4\u0db8\u0dca \u0d85\u0db1\u0dd4\u0db4\u0dcf\u0dad\u0dba\u0d9a\u0dca \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db8\u0dd4. \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0dba\u0ddd\u0da2\u0db1\u0dcf \u0d9a\u0dbb <span translate=no>_^_1_^_</span>\u0d87\u0dad. </p>\n",
 "<p>Weight of KL divergence loss, <span translate=no>_^_0_^_</span> </p>\n": "<p>KL\u0d85\u0db4\u0dc3\u0dbb\u0db1\u0dba \u0d85\u0d9e\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0db6\u0dbb, <span translate=no>_^_0_^_</span> </p>\n",
 "Sketch RNN": "\u0d9a\u0da7\u0dd4 \u0dc3\u0da7\u0dc4\u0db1\u0d9a\u0dca RNN",
 "This is an annotated PyTorch implementation of the Sketch RNN from paper A Neural Representation of Sketch Drawings. Sketch RNN is a sequence-to-sequence model that generates sketches of objects such as bicycles, cats, etc.": "\u0db8\u0dd9\u0dba \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0dc0\u0dbd\u0dd2\u0db1\u0dca \u0dc3\u0dca\u0d9a\u0dd9\u0da0\u0dca \u0d86\u0dbb\u0dca\u0d91\u0db1\u0dca\u0d91\u0db1\u0dca \u0dc4\u0dd2 \u0dc0\u0dd2\u0dc0\u0dbb\u0dab \u0d9a\u0dbb\u0db1 \u0dbd\u0daf \u0db4\u0dba\u0dd2\u0da7\u0ddd\u0dbb\u0dca\u0da0\u0dca \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0dca\u0d9a\u0dd9\u0da0\u0dca \u0d87\u0db3\u0dd3\u0db8\u0dca\u0dc0\u0dbd \u0dc3\u0dca\u0db1\u0dcf\u0dba\u0dd4\u0d9a \u0db1\u0dd2\u0dbb\u0dd6\u0db4\u0dab\u0dba\u0d9a\u0dd2. \u0dc3\u0dca\u0d9a\u0dd9\u0da0\u0dca \u0d86\u0dbb\u0dca\u0d91\u0db1\u0dca\u0d91\u0db1\u0dca \u0dba\u0db1\u0dd4 \u0db6\u0dba\u0dd2\u0dc3\u0dd2\u0d9a\u0dbd\u0dca, \u0db6\u0dc5\u0dbd\u0dd4\u0db1\u0dca \u0dc0\u0dd0\u0db1\u0dd2 \u0dc0\u0dc3\u0dca\u0dad\u0dd6\u0db1\u0dca\u0d9c\u0dda \u0dbb\u0dd6\u0db4 \u0dc3\u0da7\u0dc4\u0db1\u0dca \u0da2\u0db1\u0db1\u0dba \u0d9a\u0dbb\u0db1 \u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8-\u0dc3\u0dd2\u0da7-\u0d85\u0db1\u0dd4\u0d9a\u0dca\u0dbb\u0db8\u0dd2\u0d9a \u0d86\u0d9a\u0dd8\u0dad\u0dd2\u0dba\u0d9a\u0dd2."
}