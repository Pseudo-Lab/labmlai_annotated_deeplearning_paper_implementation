{
 "<h1>Classify MNIST digits with Capsule Networks</h1>\n<p>This is an annotated PyTorch code to classify MNIST digits with PyTorch.</p>\n<p>This paper implements the experiment described in paper <a href=\"https://papers.labml.ai/paper/1710.09829\">Dynamic Routing Between Capsules</a>.</p>\n": "<h1>\u4f7f\u7528\u80f6\u56ca\u7f51\u7edc\u5bf9 MNIST \u6570\u5b57\u8fdb\u884c\u5206\u7c7b</h1>\n<p>\u8fd9\u662f\u4e00\u4e2a\u5e26\u6ce8\u91ca\u7684 PyTorch \u4ee3\u7801\uff0c\u7528\u4e8e\u4f7f\u7528 PyTorch \u5bf9 MNIST \u6570\u5b57\u8fdb\u884c\u5206\u7c7b\u3002</p>\n<p>\u672c\u6587\u5b9e\u65bd\u4e86\u8bba\u6587\u300a<a href=\"https://papers.labml.ai/paper/1710.09829\">\u80f6\u56ca\u95f4\u52a8\u6001\u8def\u7531</a>\u300b\u4e2d\u63cf\u8ff0\u7684\u5b9e\u9a8c\u3002</p>\n",
 "<h2>Model for classifying MNIST digits</h2>\n": "<h2>\u7528\u4e8e\u5bf9 MNIST \u6570\u5b57\u8fdb\u884c\u5206\u7c7b\u7684\u6a21\u578b</h2>\n",
 "<p> <span translate=no>_^_0_^_</span> are the MNIST images, with shape <span translate=no>_^_1_^_</span></p>\n": "<p><span translate=no>_^_0_^_</span>\u662f MNIST \u56fe\u50cf\uff0c\u6709\u5f62\u72b6<span translate=no>_^_1_^_</span></p>\n",
 "<p> Configurations with MNIST data and Train &amp; Validation setup</p>\n": "<p>\u4f7f\u7528 MNIST \u6570\u636e\u548c\u8bad\u7ec3\u4e0e\u9a8c\u8bc1\u8bbe\u7f6e\u7684\u914d\u7f6e</p>\n",
 "<p> Run the experiment</p>\n": "<p>\u8fd0\u884c\u5b9e\u9a8c</p>\n",
 "<p> This method gets called by the trainer</p>\n": "<p>\u8fd9\u4e2a\u65b9\u6cd5\u88ab\u8bad\u7ec3\u5668\u8c03\u7528</p>\n",
 "<p>Calculate the total loss </p>\n": "<p>\u8ba1\u7b97\u603b\u635f\u5931</p>\n",
 "<p>Call accuracy metric </p>\n": "<p>\u547c\u53eb\u51c6\u786e\u5ea6\u6307\u6807</p>\n",
 "<p>Create a mask to maskout all the other capsules </p>\n": "<p>\u521b\u5efa\u906e\u7f69\u4ee5\u906e\u76d6\u6240\u6709\u5176\u4ed6\u80f6\u56ca</p>\n",
 "<p>First convolution layer has <span translate=no>_^_0_^_</span>, <span translate=no>_^_1_^_</span> convolution kernels </p>\n": "<p>\u7b2c\u4e00\u4e2a\u5377\u79ef\u5c42\u6709<span translate=no>_^_0_^_</span>\uff0c<span translate=no>_^_1_^_</span>\u5377\u79ef\u5185\u6838</p>\n",
 "<p>Get masks for reconstructioon </p>\n": "<p>\u83b7\u53d6\u7528\u4e8e\u91cd\u5efa\u7684\u53e3\u7f69</p>\n",
 "<p>Get the images and labels and move them to the model&#x27;s device </p>\n": "<p>\u83b7\u53d6\u56fe\u50cf\u548c\u6807\u7b7e\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u6a21\u7279\u7684\u8bbe\u5907\u4e0a</p>\n",
 "<p>Increment step in training mode </p>\n": "<p>\u5728\u8bad\u7ec3\u6a21\u5f0f\u4e2d\u589e\u52a0\u6b65\u6570</p>\n",
 "<p>Log parameters and gradients </p>\n": "<p>\u65e5\u5fd7\u53c2\u6570\u548c\u68af\u5ea6</p>\n",
 "<p>Mask the digit capsules to get only the capsule that made the prediction and take it through decoder to get reconstruction </p>\n": "<p>\u63a9\u76d6\u6570\u5b57\u80f6\u56ca\u4ee5\u4ec5\u83b7\u5f97\u505a\u51fa\u9884\u6d4b\u7684\u80f6\u56ca\uff0c\u7136\u540e\u5c06\u5176\u901a\u8fc7\u89e3\u7801\u5668\u8fdb\u884c\u91cd\u5efa</p>\n",
 "<p>Pass through the first convolution layer. Output of this layer has shape <span translate=no>_^_0_^_</span> </p>\n": "<p>\u7a7f\u8fc7\u7b2c\u4e00\u4e2a\u5377\u79ef\u5c42\u3002\u6b64\u56fe\u5c42\u7684\u8f93\u51fa\u5177\u6709\u5f62\u72b6<span translate=no>_^_0_^_</span></p>\n",
 "<p>Pass through the second convolution layer. Output of this has shape <span translate=no>_^_0_^_</span>. <em>Note that this layer has a stride length of <span translate=no>_^_1_^_</span></em>. </p>\n": "<p>\u7a7f\u8fc7\u7b2c\u4e8c\u4e2a\u5377\u79ef\u5c42\u3002\u8fd9\u4e2a\u7684\u8f93\u51fa\u6709\u5f62\u72b6<span translate=no>_^_0_^_</span>\u3002<em>\u8bf7\u6ce8\u610f\uff0c\u6b64\u56fe\u5c42\u7684\u6b65\u957f\u4e3a<span translate=no>_^_1_^_</span></em>\u3002</p>\n",
 "<p>Print losses and accuracy to screen </p>\n": "<p>\u5370\u5237\u635f\u8017\u548c\u5c4f\u5e55\u7cbe\u5ea6</p>\n",
 "<p>Reshape the reconstruction to match the image dimensions </p>\n": "<p>\u91cd\u5851\u91cd\u5efa\u4ee5\u5339\u914d\u56fe\u50cf\u5c3a\u5bf8</p>\n",
 "<p>Resize and permutate to get the capsules </p>\n": "<p>\u8c03\u6574\u5927\u5c0f\u5e76\u6392\u5217\u4ee5\u83b7\u5f97\u80f6\u56ca</p>\n",
 "<p>Routing layer gets the <span translate=no>_^_0_^_</span> primary capsules and produces <span translate=no>_^_1_^_</span> capsules. Each of the primary capsules have <span translate=no>_^_2_^_</span> features, while output capsules (Digit Capsules) have <span translate=no>_^_3_^_</span> features. The routing algorithm iterates <span translate=no>_^_4_^_</span> times. </p>\n": "<p>\u8def\u7531\u5c42\u83b7\u53d6<span translate=no>_^_0_^_</span>\u4e3b\u80f6\u56ca\u5e76\u751f\u6210<span translate=no>_^_1_^_</span>\u80f6\u56ca\u3002\u6bcf\u4e2a\u4e3b\u80f6\u56ca\u90fd\u6709<span translate=no>_^_2_^_</span>\u7279\u5f81\uff0c\u800c\u8f93\u51fa\u80f6\u56ca\uff08Digit Capsules\uff09\u90fd\u6709<span translate=no>_^_3_^_</span>\u7279\u5f81\u3002\u8def\u7531\u7b97\u6cd5\u4f1a\u8fed\u4ee3<span translate=no>_^_4_^_</span>\u6b21\u6570\u3002</p>\n",
 "<p>Run the model </p>\n": "<p>\u8fd0\u884c\u6a21\u578b</p>\n",
 "<p>Set the model </p>\n": "<p>\u8bbe\u7f6e\u6a21\u578b</p>\n",
 "<p>Set the model mode </p>\n": "<p>\u8bbe\u7f6e\u6a21\u578b\u6a21\u5f0f</p>\n",
 "<p>Squash the capsules </p>\n": "<p>\u6324\u538b\u80f6\u56ca</p>\n",
 "<p>Take them through the router to get digit capsules. This has shape <span translate=no>_^_0_^_</span>. </p>\n": "<p>\u5e26\u4ed6\u4eec\u901a\u8fc7\u8def\u7531\u5668\u83b7\u5f97\u6570\u5b57\u80f6\u56ca\u3002\u8fd9\u6709\u5f62\u72b6<span translate=no>_^_0_^_</span>\u3002</p>\n",
 "<p>The prediction by the capsule network is the capsule with longest length </p>\n": "<p>\u80f6\u56ca\u7f51\u7edc\u7684\u9884\u6d4b\u662f\u957f\u5ea6\u6700\u957f\u7684\u80f6\u56ca</p>\n",
 "<p>The second layer (Primary Capsules) s a convolutional capsule layer with <span translate=no>_^_0_^_</span> channels of convolutional <span translate=no>_^_1_^_</span> capsules (<span translate=no>_^_2_^_</span> features per capsule). That is, each primary capsule contains 8 convolutional units with a 9 \u00d7 9 kernel and a stride of 2. In order to implement this we create a convolutional layer with <span translate=no>_^_3_^_</span> channels and reshape and permutate its output to get the capsules of <span translate=no>_^_4_^_</span> features each. </p>\n": "<p>\u7b2c\u4e8c\u5c42\uff08Primary Capsules\uff09\u662f\u5377\u79ef\u80f6\u56ca\u5c42\uff0c\u5e26\u6709\u5377\u79ef<span translate=no>_^_1_^_</span>\u80f6\u56ca<span translate=no>_^_0_^_</span>\u901a\u9053\uff08\u6bcf\u4e2a\u80f6\u56ca<span translate=no>_^_2_^_</span>\u7684\u7279\u5f81\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u4e3b\u80f6\u56ca\u5305\u542b 8 \u4e2a\u5377\u79ef\u5355\u4f4d\uff0c\u5185\u6838\u4e3a 9\u00d79\uff0c\u6b65\u5e45\u4e3a 2\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u5e26\u6709<span translate=no>_^_3_^_</span>\u901a\u9053\u7684\u5377\u79ef\u5c42\uff0c\u5e76\u5bf9\u5176\u8f93\u51fa\u8fdb\u884c\u6574\u5f62\u548c\u6392\u5217\uff0c\u4ee5\u83b7\u5f97\u6bcf\u4e2a<span translate=no>_^_4_^_</span>\u7279\u5f81\u7684\u80f6\u56ca\u3002</p>\n",
 "<p>This is the decoder mentioned in the paper. It takes the outputs of the <span translate=no>_^_0_^_</span> digit capsules, each with <span translate=no>_^_1_^_</span> features to reproduce the image. It goes through linear layers of sizes <span translate=no>_^_2_^_</span> and <span translate=no>_^_3_^_</span> with <span translate=no>_^_4_^_</span> activations. </p>\n": "<p>\u8fd9\u662f\u672c\u6587\u4e2d\u63d0\u5230\u7684\u89e3\u7801\u5668\u3002\u5b83\u91c7\u7528<span translate=no>_^_0_^_</span>\u6570\u5b57\u80f6\u56ca\u7684\u8f93\u51fa\uff0c\u6bcf\u4e2a\u80f6\u56ca\u90fd\u6709\u91cd\u73b0\u56fe\u50cf\u7684<span translate=no>_^_1_^_</span>\u529f\u80fd\u3002\u5b83\u7a7f\u8fc7\u5927\u5c0f<span translate=no>_^_2_^_</span>\u548c<span translate=no>_^_4_^_</span>\u6fc0\u6d3b<span translate=no>_^_3_^_</span>\u7684\u7ebf\u6027\u5c42\u3002</p>\n",
 "<p>We need to set the metrics to calculate them for the epoch for training and validation </p>\n": "<p>\u6211\u4eec\u9700\u8981\u8bbe\u7f6e\u6307\u6807\u6765\u8ba1\u7b97\u8bad\u7ec3\u548c\u9a8c\u8bc1\u65f6\u671f\u7684\u6307\u6807</p>\n",
 "<p>Whether to log activations </p>\n": "<p>\u662f\u5426\u8bb0\u5f55\u6fc0\u6d3b\u6b21\u6570</p>\n",
 "Classify MNIST digits with Capsule Networks": "\u4f7f\u7528\u80f6\u56ca\u7f51\u7edc\u5bf9 MNIST \u6570\u5b57\u8fdb\u884c\u5206\u7c7b",
 "Code for training Capsule Networks on MNIST dataset": "\u5728 MNIST \u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u80f6\u56ca\u7f51\u7edc\u7684\u4ee3\u7801"
}