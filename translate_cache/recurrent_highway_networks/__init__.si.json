{
 "<h1>Recurrent Highway Networks</h1>\n<p>This is a <a href=\"https://pytorch.org\">PyTorch</a> implementation of <a href=\"https://papers.labml.ai/paper/1607.03474\">Recurrent Highway Networks</a>.</p>\n": "<h1>\u0db4\u0dd4\u0db1\u0dbb\u0dcf\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0d85\u0db0\u0dd2\u0dc0\u0dda\u0d9c\u0dd3 \u0db8\u0dcf\u0dbb\u0dca\u0d9c \u0da2\u0dcf\u0dbd</h1>\n<p>\u0db8\u0dd9\u0dba <a href=\"https://papers.labml.ai/paper/1607.03474\">\u0db4\u0dd4\u0db1\u0dbb\u0dcf\u0dc0\u0dbb\u0dca\u0dad\u0db1 \u0d85\u0db0\u0dd2\u0dc0\u0dda\u0d9c\u0dd3 \u0db8\u0dcf\u0dbb\u0dca\u0d9c \u0da2\u0dcf\u0dbd</a> \u0dc0\u0dbd <a href=\"https://pytorch.org\">PyTorch</a> \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dba\u0dd2. </p>\n",
 "<h2>Multilayer Recurrent Highway Network</h2>\n": "<h2>\u0db6\u0dc4\u0dd4\u0dc3\u0dca\u0dae\u0dbb \u0db4\u0dd4\u0db1\u0dbb\u0dcf\u0dc0\u0dbb\u0dca\u0dad\u0db1 \u0d85\u0db0\u0dd2\u0dc0\u0dda\u0d9c\u0dd3 \u0db8\u0dcf\u0dbb\u0dca\u0d9c \u0da2\u0dcf\u0dbd\u0dba</h2>\n",
 "<h2>Recurrent Highway Network Cell</h2>\n<p>This implements equations <span translate=no>_^_0_^_</span>.</p>\n<p><span translate=no>_^_1_^_</span></p>\n<p>where</p>\n<span translate=no>_^_2_^_</span><p>and for <span translate=no>_^_3_^_</span></p>\n<span translate=no>_^_4_^_</span><p><span translate=no>_^_5_^_</span> stands for element-wise multiplication.</p>\n<p>Here we have made a couple of changes to notations from the paper. To avoid confusion with time, gate is represented with <span translate=no>_^_6_^_</span>, which was <span translate=no>_^_7_^_</span> in the paper. To avoid confusion with multiple layers we use <span translate=no>_^_8_^_</span> for depth and <span translate=no>_^_9_^_</span> for total depth instead of <span translate=no>_^_10_^_</span> and <span translate=no>_^_11_^_</span> from the paper.</p>\n<p>We have also replaced the weight matrices and bias vectors from the equations with linear transforms, because that&#x27;s how the implementation is going to look like.</p>\n<p>We implement weight tying, as described in paper, <span translate=no>_^_12_^_</span>.</p>\n": "<h2>\u0db4\u0dd4\u0db1\u0dbb\u0dcf\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0d85\u0db0\u0dd2\u0dc0\u0dda\u0d9c\u0dd3 \u0db8\u0dcf\u0dbb\u0dca\u0d9c\u0dba\u0dda \u0da2\u0dcf\u0dbd\u0dba \u0d9a\u0dbd</h2>\n<p>\u0db8\u0dd9\u0dba\u0dc3\u0db8\u0dd3\u0d9a\u0dbb\u0dab \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dbb\u0dba\u0dd2 <span translate=no>_^_0_^_</span>. </p>\n<p><span translate=no>_^_1_^_</span></p>\n<p>\u0d9a\u0ddc\u0dc4\u0dda\u0daf</p>\n<span translate=no>_^_2_^_</span><p>\u0dc3\u0dc4\u0dc3\u0db3\u0dc4\u0dcf <span translate=no>_^_3_^_</span></p>\n<span translate=no>_^_4_^_</span><p><span translate=no>_^_5_^_</span> \u0db8\u0dd6\u0dbd\u0daf\u0dca\u0dbb\u0dc0\u0dca\u0dba-\u0db1\u0dd0\u0dab\u0dc0\u0dad\u0dca \u0d9c\u0dd4\u0dab \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dc0\u0dda. </p>\n<p>\u0db8\u0dd9\u0db1\u0dca\u0db1\u0d85\u0db4\u0dd2 \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0dc0\u0dbd\u0dd2\u0db1\u0dca \u0d85\u0d82\u0d9a\u0dc0\u0dbd \u0dc0\u0dd9\u0db1\u0dc3\u0dca\u0d9a\u0db8\u0dca \u0d9a\u0dd2\u0dc4\u0dd2\u0db4\u0dba\u0d9a\u0dca \u0d9a\u0dbb \u0d87\u0dad\u0dca\u0dad\u0dd9\u0db8\u0dd4. \u0d9a\u0dcf\u0dbd\u0dba \u0dc3\u0db8\u0d9f \u0dc0\u0dca\u0dba\u0dcf\u0d9a\u0dd6\u0dbd\u0dad\u0dca\u0dc0\u0dba \u0dc0\u0dc5\u0d9a\u0dca\u0dc0\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf <span translate=no>_^_6_^_</span>, \u0d9c\u0dda\u0da7\u0dca\u0da7\u0dd4\u0dc0 \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 <span translate=no>_^_7_^_</span> \u0dad\u0dd4\u0dc5 \u0d87\u0dad\u0dd2 \u0dc0\u0dd2\u0dba. \u0db6\u0dc4\u0dd4 \u0dc3\u0dca\u0dae\u0dbb \u0dc3\u0db8\u0d9f \u0dc0\u0dca\u0dba\u0dcf\u0d9a\u0dd6\u0dbd\u0dad\u0dca\u0dc0\u0dba \u0dc0\u0dc5\u0d9a\u0dca\u0dc0\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8 <span translate=no>_^_8_^_</span> \u0dc3\u0db3\u0dc4\u0dcf \u0d85\u0db4\u0dd2 \u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2 \u0dc0\u0dd9\u0db1\u0dd4\u0dc0\u0da7 \u0dc3\u0dc4 \u0d89\u0db1\u0dca <span translate=no>_^_10_^_</span> \u0d9c\u0dd0\u0db9\u0dd4\u0dbb <span translate=no>_^_9_^_</span> \u0dc3\u0db3\u0dc4\u0dcf \u0d9c\u0dd0\u0db9\u0dd4\u0dbb \u0dc3\u0db3\u0dc4\u0dcf \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db8\u0dd4. <span translate=no>_^_11_^_</span> </p>\n<p>\u0dc3\u0db8\u0dd3\u0d9a\u0dbb\u0dab\u0dc0\u0dbd\u0dd2\u0db1\u0dca \u0db6\u0dbb \u0db8\u0dd0\u0da7\u0dca\u0da7\u0dca\u0dbb\u0dd2\u0dc3\u0dca \u0dc3\u0dc4 \u0db4\u0d9a\u0dca\u0dc2\u0d9c\u0dca\u0dbb\u0dcf\u0dc4\u0dd3 \u0daf\u0ddb\u0dc1\u0dd2\u0d9a \u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0db4\u0dbb\u0dd2\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0dba\u0db1\u0dca \u0dc3\u0db8\u0d9f \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0dc3\u0dca\u0dae\u0dcf\u0db4\u0db1\u0dba \u0d9a\u0dbb \u0d87\u0dad, \u0db8\u0db1\u0dca\u0daf \u0d91\u0dba \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 \u0db4\u0dd9\u0db1\u0dd9\u0db1\u0dca\u0db1\u0dda \u0d91\u0dbd\u0dd9\u0dc3\u0dd2\u0db1\u0dd2. </p>\n<p>\u0d9a\u0da9\u0daf\u0dcf\u0dc3\u0dd2\u0dc0\u0dbd \u0dc0\u0dd2\u0dc3\u0dca\u0dad\u0dbb \u0d9a\u0dbb \u0d87\u0dad\u0dd2 \u0db4\u0dbb\u0dd2\u0daf\u0dd2 \u0d85\u0db4\u0dd2 \u0db6\u0dbb \u0d9c\u0dd0\u0da7\u0d9c\u0dd0\u0dc3\u0dd3\u0db8 \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dbb\u0db8\u0dd4 <span translate=no>_^_12_^_</span>. </p>\n",
 "<p> <span translate=no>_^_0_^_</span> has shape <span translate=no>_^_1_^_</span> and <span translate=no>_^_2_^_</span> has shape <span translate=no>_^_3_^_</span>.</p>\n": "<p> <span translate=no>_^_0_^_</span> \u0dc4\u0dd0\u0da9\u0dba <span translate=no>_^_2_^_</span> \u0d87\u0dad\u0dd2 <span translate=no>_^_1_^_</span> \u0d85\u0dad\u0dbb \u0dc4\u0dd0\u0da9\u0dba <span translate=no>_^_3_^_</span>\u0d87\u0dad. </p>\n",
 "<p> <span translate=no>_^_0_^_</span> is the feature length of the input and <span translate=no>_^_1_^_</span> is the feature length of the cell. <span translate=no>_^_2_^_</span> is <span translate=no>_^_3_^_</span>.</p>\n": "<p> <span translate=no>_^_0_^_</span> \u0dba\u0db1\u0dd4 \u0d86\u0daf\u0dcf\u0db1\u0dba\u0dda \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0daf\u0dd2\u0d9c <span translate=no>_^_1_^_</span> \u0dc0\u0db1 \u0d85\u0dad\u0dbb \u0d91\u0dba \u0dc3\u0ddb\u0dbd\u0dba\u0dda \u0dc0\u0dd2\u0dc1\u0dda\u0dc2\u0dcf\u0d82\u0d9c \u0daf\u0dd2\u0d9c \u0dc0\u0dda. <span translate=no>_^_2_^_</span> \u0dc0\u0dda <span translate=no>_^_3_^_</span>. </p>\n",
 "<p> Create a network of <span translate=no>_^_0_^_</span> of recurrent highway network layers, each with depth <span translate=no>_^_1_^_</span>, <span translate=no>_^_2_^_</span>.</p>\n": "<p> \u0db4\u0dd4\u0db1\u0dbb\u0dcf\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0d85\u0db0\u0dd2\u0dc0\u0dda\u0d9c\u0dd3 \u0db8\u0dcf\u0dbb\u0dca\u0d9c \u0da2\u0dcf\u0dbd \u0dc3\u0dca\u0dae\u0dbb \u0da2\u0dcf\u0dbd\u0dba\u0d9a\u0dca \u0db1\u0dd2\u0dbb\u0dca\u0db8\u0dcf\u0dab\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1, \u0d91\u0d9a\u0dca \u0d91\u0d9a\u0dca \u0d9c\u0dd0\u0db9\u0dd4\u0dbb <span translate=no>_^_1_^_</span>, <span translate=no>_^_2_^_</span>. <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Array to collect the outputs of the final layer at each time step. </p>\n": "<p>\u0d91\u0d9a\u0dca\u0d91\u0d9a\u0dca \u0d9a\u0dcf\u0dbd \u0db4\u0dd2\u0dba\u0dc0\u0dbb\u0dda\u0daf\u0dd3 \u0d85\u0dc0\u0dc3\u0dcf\u0db1 \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0dda \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0daf\u0dcf\u0db1\u0dba\u0db1\u0dca \u0d91\u0d9a\u0dad\u0dd4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0d85\u0dbb\u0dcf. </p>\n",
 "<p>Collect the output of the final layer </p>\n": "<p>\u0d85\u0dc0\u0dc3\u0dcf\u0db1\u0dc3\u0dca\u0dae\u0dbb\u0dba\u0dda \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0daf\u0dcf\u0db1\u0dba \u0d91\u0d9a\u0dad\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Create cells for each layer. Note that only the first layer gets the input directly. Rest of the layers get the input from the layer below </p>\n": "<p>\u0d91\u0d9a\u0dca\u0d91\u0d9a\u0dca \u0dc3\u0dca\u0dae\u0dbb\u0dba \u0dc3\u0db3\u0dc4\u0dcf \u0dc3\u0ddb\u0dbd \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1. \u0db4\u0dc5\u0db8\u0dd4 \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0da7 \u0db4\u0db8\u0dab\u0d9a\u0dca \u0d86\u0daf\u0dcf\u0db1\u0dba \u0d9a\u0dd9\u0dbd\u0dd2\u0db1\u0dca\u0db8 \u0dbd\u0dd0\u0db6\u0dd9\u0db1 \u0db6\u0dc0 \u0dc3\u0dbd\u0d9a\u0db1\u0dca\u0db1. \u0dc3\u0dd9\u0dc3\u0dd4 \u0dc3\u0dca\u0dae\u0dbb \u0db4\u0dc4\u0dad \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0dd9\u0db1\u0dca \u0d86\u0daf\u0dcf\u0db1\u0dba \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dd3 </p>\n",
 "<p>Get the state of the layer </p>\n": "<p>\u0dc3\u0dca\u0dae\u0dbb\u0dba\u0dda\u0dad\u0dad\u0dca\u0dc0\u0dba \u0dbd\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1 </p>\n",
 "<p>Initialize the state if <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0dbb\u0dcf\u0da2\u0dca\u0dba\u0dba\u0d86\u0dbb\u0db8\u0dca\u0db7 \u0d9a\u0dbb\u0db1\u0dca\u0db1 \u0db1\u0db8\u0dca <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Input to the first layer is the input itself </p>\n": "<p>\u0db4\u0dc5\u0db8\u0dd4\u0dc3\u0dca\u0dae\u0dbb\u0dba\u0da7 \u0d86\u0daf\u0dcf\u0db1\u0dba \u0dba\u0db1\u0dd4 \u0d86\u0daf\u0dcf\u0db1\u0dba \u0db8 \u0dc0\u0dda </p>\n",
 "<p>Input to the next layer is the state of this layer </p>\n": "<p>\u0d8a\u0dc5\u0d9f\u0dc3\u0dca\u0dae\u0dbb\u0dba\u0da7 \u0d86\u0daf\u0dcf\u0db1\u0dba \u0db8\u0dd9\u0db8 \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0dda \u0dad\u0dad\u0dca\u0dc0\u0dba\u0dba\u0dd2 </p>\n",
 "<p>Iterate <span translate=no>_^_0_^_</span> </p>\n": "<p>\u0db4\u0dd4\u0db1\u0dbb\u0dcf\u0dc0\u0dbb\u0dca\u0dad\u0db1\u0dba\u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_0_^_</span> </p>\n",
 "<p>Loop through the layers </p>\n": "<p>\u0dc3\u0dca\u0dae\u0dbb\u0dc4\u0dbb\u0dc4\u0dcf \u0dbd\u0dd6\u0db4\u0dca </p>\n",
 "<p>Reverse stack the state to get the state of each layer</p>\n<p>\ud83d\udcdd You can just work with the tensor itself but this is easier to debug </p>\n": "<p>\u0d91\u0d9a\u0dca\u0d91\u0d9a\u0dca \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0dda \u0dad\u0dad\u0dca\u0dc0\u0dba \u0dbd\u0db6\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0db4\u0dca\u0dbb\u0dad\u0dd2\u0dbd\u0ddd\u0db8 \u0dbb\u0dcf\u0da2\u0dca\u0dba\u0dba \u0d9c\u0ddc\u0da9\u0d9c\u0dc3\u0db1\u0dca\u0db1</p>\n<p>\ud83d\udcdd\u0d94\u0db6\u0da7 \u0da7\u0dd9\u0db1\u0dca\u0dc3\u0dbb\u0dca \u0dc3\u0db8\u0d9f \u0dc0\u0dd0\u0da9 \u0d9a\u0dc5 \u0dc4\u0dd0\u0d9a\u0dd2 \u0db1\u0db8\u0dd4\u0dad\u0dca \u0db8\u0dd9\u0dba \u0db1\u0dd2\u0daf\u0ddc\u0dc3\u0dca \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0db4\u0dc4\u0dc3\u0dd4\u0dba </p>\n",
 "<p>Run through the network for each time step </p>\n": "<p>\u0d91\u0d9a\u0dca\u0d91\u0d9a\u0dca \u0d9a\u0dcf\u0dbd \u0db4\u0dd2\u0dba\u0dc0\u0dbb \u0dc3\u0db3\u0dc4\u0dcf \u0da2\u0dcf\u0dbd\u0dba \u0dc4\u0dbb\u0dc4\u0dcf \u0db0\u0dcf\u0dc0\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1 </p>\n",
 "<p>Similarly we combine <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span>. </p>\n": "<p>\u0d92\u0dc4\u0dcf \u0dc3\u0db8\u0dcf\u0db1\u0dc0 \u0d85\u0db4\u0dd2 \u0d92\u0d9a\u0dcf\u0db6\u0daf\u0dca\u0db0 <span translate=no>_^_0_^_</span> \u0dc0\u0dd9\u0db8\u0dd4 <span translate=no>_^_1_^_</span>. </p>\n",
 "<p>Stack the outputs and states </p>\n": "<p>\u0db4\u0dca\u0dbb\u0dad\u0dd2\u0daf\u0dcf\u0db1\u0dba\u0db1\u0dca\u0dc3\u0dc4 \u0db4\u0dca\u0dbb\u0dcf\u0db1\u0dca\u0dad \u0d9c\u0ddc\u0da9\u0d9c\u0dc3\u0db1\u0dca\u0db1 </p>\n",
 "<p>The input is used only when <span translate=no>_^_0_^_</span> is <span translate=no>_^_1_^_</span>. </p>\n": "<p>\u0d86\u0daf\u0dcf\u0db1\u0dba\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf <span translate=no>_^_0_^_</span> \u0dc0\u0db1\u0dca\u0db1\u0dda \u0d9a\u0dc0\u0daf\u0dcf\u0daf \u0dba\u0db1\u0dca\u0db1 \u0db4\u0db8\u0dab\u0dd2 <span translate=no>_^_1_^_</span>. </p>\n",
 "<p>Use the first half of <span translate=no>_^_0_^_</span> to get <span translate=no>_^_1_^_</span></p>\n<span translate=no>_^_2_^_</span><p> </p>\n": "<p>\u0dbd\u0db6\u0dcf\u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0da7 \u0db4\u0dc5\u0db8\u0dd4 \u0db7\u0dcf\u0d9c\u0dba \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf <span translate=no>_^_0_^_</span> \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_1_^_</span></p>\n<span translate=no>_^_2_^_</span><p> </p>\n",
 "<p>Use the second half of <span translate=no>_^_0_^_</span> to get <span translate=no>_^_1_^_</span></p>\n<span translate=no>_^_2_^_</span><p> </p>\n": "<p>\u0dbd\u0db6\u0dcf\u0d9c\u0dd0\u0db1\u0dd3\u0db8\u0da7 \u0daf\u0dd9\u0dc0\u0db1 \u0db7\u0dcf\u0d9c\u0dba \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf <span translate=no>_^_0_^_</span> \u0d9a\u0dbb\u0db1\u0dca\u0db1 <span translate=no>_^_1_^_</span></p>\n<span translate=no>_^_2_^_</span><p> </p>\n",
 "<p>We calculate the concatenation of linear transforms for <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span> </p>\n": "<p>\u0dbb\u0dda\u0d9b\u0dd3\u0dba\u0db4\u0dbb\u0dd2\u0dab\u0dcf\u0db8\u0dba\u0db1\u0dca\u0d9c\u0dda \u0dc3\u0d82\u0d9a\u0ddd\u0da0\u0db1\u0dba \u0d9c\u0dab\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8 <span translate=no>_^_0_^_</span> \u0dc3\u0dc4 <span translate=no>_^_1_^_</span> </p>\n",
 "<p>We combine <span translate=no>_^_0_^_</span> and <span translate=no>_^_1_^_</span>, with a single linear layer. We can then split the results to get the <span translate=no>_^_2_^_</span> and <span translate=no>_^_3_^_</span> components. This is the <span translate=no>_^_4_^_</span> and <span translate=no>_^_5_^_</span> for <span translate=no>_^_6_^_</span>. </p>\n": "<p>\u0d85\u0db4\u0dd2\u0dad\u0db1\u0dd2 \u0dbb\u0dda\u0d9b\u0dd3\u0dba \u0dc3\u0dca\u0dae\u0dbb\u0dba\u0d9a\u0dca \u0dc3\u0db8\u0d9f \u0d92\u0d9a\u0dcf\u0db6\u0daf\u0dca\u0db0 <span translate=no>_^_0_^_</span> \u0d9a\u0dbb\u0db8\u0dd4. <span translate=no>_^_1_^_</span> \u0d91\u0dc0\u0dd2\u0da7 \u0d85\u0db4\u0da7 <span translate=no>_^_2_^_</span> \u0dc3\u0dc4 <span translate=no>_^_3_^_</span> \u0dc3\u0d82\u0dbb\u0da0\u0d9a \u0dbd\u0db6\u0dcf \u0d9c\u0dd0\u0db1\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0db4\u0dca\u0dbb\u0dad\u0dd2 results \u0dbd \u0db6\u0dd9\u0daf\u0dd2\u0dba \u0dc4\u0dd0\u0d9a\u0dd2\u0dba. \u0db8\u0dd9\u0dba <span translate=no>_^_4_^_</span> \u0dc3\u0dc4 <span translate=no>_^_5_^_</span> \u0dc3\u0db3\u0dc4\u0dcf <span translate=no>_^_6_^_</span>\u0dba. </p>\n",
 "A simple PyTorch implementation/tutorial of Recurrent Highway Networks.": "\u0db4\u0dd4\u0db1\u0dbb\u0dcf\u0dc0\u0dbb\u0dca\u0dad\u0db1 \u0d85\u0db0\u0dd2\u0dc0\u0dda\u0d9c\u0dd3 \u0db8\u0dcf\u0dbb\u0dca\u0d9c \u0da2\u0dcf\u0dbd \u0dc0\u0dbd \u0dc3\u0dbb\u0dbd PyTorch \u0d9a\u0dca\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a \u0d9a\u0dd2\u0dbb\u0dd3\u0db8/\u0db1\u0dd2\u0db6\u0db1\u0dca\u0db0\u0db1\u0dba.",
 "Recurrent Highway Networks": "\u0db4\u0dd4\u0db1\u0dbb\u0dcf\u0dc0\u0dbb\u0dca\u0dad\u0db1 \u0d85\u0db0\u0dd2\u0dc0\u0dda\u0d9c\u0dd3 \u0db8\u0dcf\u0dbb\u0dca\u0d9c \u0da2\u0dcf\u0dbd"
}